{"version":3,"sources":["ng://@ng-bootstrap/ng-bootstrap/util/util.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/label.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/checkbox.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/radio.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/buttons.module.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts","null","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","ng://@ng-bootstrap/ng-bootstrap/util/key.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keymap-service.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","ng://@ng-bootstrap/ng-bootstrap/util/positioning.ts","ng://@ng-bootstrap/ng-bootstrap/util/focus-trap.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/jalali.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/ngb-calendar-persian.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/ngb-calendar-hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/datepicker-i18n-hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-utc-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-config.ts","ng://@ng-bootstrap/ng-bootstrap/util/popup.ts","ng://@ng-bootstrap/ng-bootstrap/util/scrollbar.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","ng://@ng-bootstrap/ng-bootstrap/util/triggers.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","ng://@ng-bootstrap/ng-bootstrap/util/accessibility/live.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","ng://@ng-bootstrap/ng-bootstrap/index.ts"],"names":["toInteger","value","parseInt","toString","undefined","getValueInRange","max","min","Math","isString","isNumber","isNaN","isInteger","isFinite","floor","isDefined","padNumber","slice","Injectable","args","providedIn","nextId","NgbPanelTitle","templateRef","this","Directive","selector","TemplateRef","NgbPanelContent","NgbPanel","prototype","ngAfterContentChecked","titleTpl","titleTpls","first","contentTpl","contentTpls","Input","ContentChildren","descendants","NgbAccordion","config","EventEmitter","type","closeOtherPanels","closeOthers","isExpanded","panelId","activeIds","indexOf","expand","_changeOpenState","_findPanelById","expandAll","_this","length","panels","forEach","panel","collapse","collapseAll","toggle","isOpen","split","disabled","id","_closeOthers","_updateActiveIds","nextState","defaultPrevented_1","panelChange","emit","preventDefault","find","p","filter","map","Component","exportAs","host","class","role","[attr.aria-multiselectable]","template","NgbAccordionConfig","Output","NGB_ACCORDION_DIRECTIVES","NgbAccordionModule","forRoot","ngModule","NgModule","declarations","exports","imports","CommonModule","NgbAlert","_renderer","_element","dismissible","closeHandler","close","ngOnChanges","changes","typeChange","firstChange","removeClass","nativeElement","previousValue","addClass","currentValue","ngOnInit","changeDetection","ChangeDetectionStrategy","OnPush","[class.alert-dismissible]","styles","NgbAlertConfig","Renderer2","ElementRef","NgbAlertModule","entryComponents","NgbButtonLabel","[class.btn]","[class.active]","[class.disabled]","[class.focus]","NGB_CHECKBOX_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NgbCheckBox","multi","_label","_","Object","defineProperty","isFocused","focused","onTouched","onInputChange","$event","modelToPropagate","target","checked","valueChecked","valueUnChecked","onChange","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","active","autocomplete","[checked]","[disabled]","(change)","(focus)","(blur)","providers","NGB_RADIO_VALUE_ACCESSOR","NgbRadioGroup","Set","_disabled","onRadioChange","radio","onRadioValueUpdate","_updateRadiosValue","register","_radios","add","_updateRadiosDisabled","unregister","delete","_value","updateValue","updateDisabled","NgbRadio","_group","stringValue","setProperty","_checked","name","ngOnDestroy","[name]","NGB_BUTTON_DIRECTIVES","NgbButtonsModule","NgbSlide","tplRef","NgbCarousel","_platformId","_ngZone","_cd","Subject","interval","wrap","keyboard","pauseOnHover","showNavigationArrows","showNavigationIndicators","ngAfterContentInit","isPlatformBrowser","runOutsideAngular","_start$","pipe","switchMap","timer","takeUntil","_stop$","subscribe","run","next","detectChanges","activeSlide","_getSlideById","activeId","slides","isFirstChange","select","slideId","_cycleToSelected","_getSlideEventDirection","prev","_getPrevSlide","NgbSlideEventDirection","RIGHT","_getNextSlide","LEFT","pause","cycle","slideIdx","direction","selectedSlide","slide","current","currentActiveSlideId","nextActiveSlideId","currentActiveSlideIdx","_getSlideIdxById","toArray","currentSlideId","slideArr","currentSlideIdx","[style.display]","tabIndex","(mouseenter)","(mouseleave)","(keydown.arrowLeft)","(keydown.arrowRight)","NgbCarouselConfig","Inject","PLATFORM_ID","NgZone","ChangeDetectorRef","NGB_CAROUSEL_DIRECTIVES","NgbCarouselModule","[class.collapse]","[class.show]","NgbCollapseModule","NgbCollapse","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","done","push","error","__spread","arguments","concat","NgbDate","year","month","day","from","date","equals","other","before","after","fromJSDate","jsDate","getFullYear","getMonth","getDate","toJSDate","Date","getTime","setFullYear","NGB_DATEPICKER_CALENDAR_FACTORY","NgbCalendarGregorian","useFactory","tslib_1.__extends","getDaysPerWeek","getMonths","getWeeksPerMonth","getNext","period","number","setDate","getPrev","getWeekday","getDay","getWeekNumber","week","firstDayOfWeek","time","setMonth","round","getToday","isValid","NgbCalendar","isChangedDate","dateComparator","checkDateInRange","minDate","maxDate","isDateSelectable","state","markDisabled","buildMonths","calendar","i18n","force","displayMonths","months","monthsToReuse","splice","firstDate","reusedIndex","findIndex","buildMonth","outsideDays","lastDate","weeks","weekdays","getFirstViewDate","daysPerWeek","firstMonthDate","dayOfWeek","weekObject","days","collapsed","newDate","nextDate","ariaLabel","getDayAriaLabel","dayObject","context","assign","currentMonth","selected","tabindex","hidden","shift","NGB_DATEPICKER_18N_FACTORY","locale","NgbDatepickerI18nDefault","NgbDatepickerI18n","getDayNumerals","getWeekNumerals","weekNumber","getYearNumerals","deps","LOCALE_ID","_locale","_super","weekdaysStartingOnSunday","getLocaleDayNames","FormStyle","Standalone","TranslationWidth","Short","_weekdaysShort","index","_monthsShort","getLocaleMonthNames","Abbreviated","_monthsFull","Wide","getWeekdayShortName","weekday","getMonthShortName","getMonthFullName","formatDate","NgbDatepickerService","_calendar","_i18n","focusVisible","navigation","prevDisabled","nextDisabled","selectBoxes","years","selectedDate","_model$","model","_select$","_state","_nextState","toValidDate","focus","focusDate","focusMove","focusSelect","emitEvent","open","options","defaultValue","ngbDate","patch","newState","_updateState","_patchContexts","startDate","checkMinBeforeMax","Error","forceRebuild","yearChanged","monthChanged","generateSelectBoxYears","start","end","generateSelectBoxMonths","prevMonthDisabled","prevDate","nextMonthDisabled","Tab","Enter","Escape","Space","PageUp","PageDown","End","Home","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","NgbDatepickerKeyMapService","_service","model$","_minDate","_maxDate","_firstViewDate","_lastViewDate","processKey","event","Key","which","shiftKey","stopPropagation","PREV","NEXT","NGB_DATEPICKER_DATE_ADAPTER_FACTORY","NgbDateStructAdapter","fromModel","toModel","NgbDateAdapter","NGB_DATEPICKER_VALUE_ACCESSOR","NgbDatepicker","_keyMapService","_elementRef","_ngbDateAdapter","input","_selectSubscription","select$","_subscription","oldDate","newSelectedDate","oldSelectedDate","newFocusedDate","oldFocusedDate","navigate","markForCheck","onStable","asObservable","take","elementToFocus","querySelector","navigateTo","__assign","t","s","apply","unsubscribe","onDateSelect","onKeyDown","onNavigateDateSelect","onNavigateEvent","NavigationEvent","showFocus","NgbDatepickerConfig","NgbDatepickerMonthView","doSelect","NgbDatepickerNavigation","NGB_DATEPICKER_PARSER_FORMATTER_FACTORY","NgbDateISOParserFormatter","parse","dateParts","trim","format","NgbDateParserFormatter","positionService","Positioning","getAllStyles","element","window","getComputedStyle","getStyle","prop","isStaticPositioned","offsetParent","offsetParentEl","document","documentElement","position","elPosition","parentOffset","width","height","top","bottom","left","right","getBoundingClientRect","offset","clientTop","clientLeft","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","placement","appendToBody","hostElPosition","targetElStyles","targetElBCR","placementPrimary","placementSecondary","targetElPosition","parseFloat","marginBottom","marginRight","getAvailablePlacements","availablePlacements","hostElemClientRect","targetElemClientRect","html","windowHeight","innerHeight","clientHeight","windowWidth","innerWidth","clientWidth","hostElemClientRectHorCenter","hostElemClientRectVerCenter","setSecondaryPlacementForLeftRight","setSecondaryPlacementForTopBottom","primaryPlacement","availablePlacementArr","placementVals","isArray","hasAuto","val","obj","search","appliedPlacement","topVal","leftVal","item","pos","_a","__values","tslib_1.__values","toItemIndexes","a","_b","_c","style","FOCUSABLE_ELEMENTS_SELECTOR","join","ngbFocusTrap","stopFocusTrap$","lastFocusedElement$","fromEvent","withLatestFrom","tabEvent","focusedElement","getFocusableBoundaryElements","list","querySelectorAll","last","arr","lastFocusedElement","NgbInputDatepicker","NGB_DATEPICKER_VALIDATOR","NG_VALIDATORS","_parserFormatter","_elRef","_vcRef","_cfr","_dateAdapter","_document","_zoneSubscription","_cRef","location","container","instance","_onChange","_onTouched","registerOnValidatorChange","_validatorChange","validate","c","_fromDateStruct","requiredBefore","requiredAfter","invalid","_model","_writeModelValue","manualDateChange","updateView","cf","resolveComponentFactory","createComponent","_applyPopupStyling","_applyDatepickerInputs","_subscribeForDatepickerOutputs","changeDetectorRef","appendChild","_closed$","outsideClicks$","escapes$","autoClose","isOpening_1","requestAnimationFrame","_shouldCloseOnOutsideClick","NEVER","race","remove","hostView","onBlur","datepickerInstance","optionName","setStyle","some","el","contains","dateSelect","(input)","ViewContainerRef","ComponentFactoryResolver","DOCUMENT","NgbDatepickerDayView","isMuted","[class.bg-primary]","[class.text-white]","[class.text-muted]","[class.outside]","NgbDatepickerNavigationSelect","changeMonth","changeYear","NgbCalendarHijri","_setYear","_setMonth","_setDay","toGregorian","MuhDate","fromGregorian","mDays","getDaysPerMonth","isGregorianLeapYear","gDate","mod","GREGORIAN_EPOCH","ISLAMIC_EPOCH","NgbCalendarIslamicCivil","gYear","gMonth","gDay","julianDay","hYear","hMonth","ceil","getIslamicYearStart","hDay","getIslamicMonthStart","hDate","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","yearday","leapadj","tjd2","isIslamicLeapYear","GREGORIAN_FIRST_DATE","GREGORIAN_LAST_DATE","HIJRI_BEGIN","MONTH_LENGTH","NgbCalendarIslamicUmalqura","daysDiff","getDaysDiff","date1","date2","diff","abs","j","numOfDays","dayDiff","y","jalaliDate","julianToGregorian","jalaliToJulian","jYear","jMonth","jDay","jalCal","gregorianToJulian","gy","march","div","setHours","gdate","julianToJalali","julianDayNumber","jalaliDay","jalaliMonth","numberOfDays","jalaliYear","gregorianDay","leap","setJalaliMonth","mod$1","trunc","jump","breaks","breaksLength","leapJ","jp","jm","gm","gd","NgbCalendarPersian","setJalaliYear","yearValue","setJalaliDay","PARTS_PER_HOUR","PARTS_PER_DAY","PARTS_FRACTIONAL_MONTH","PARTS_PER_MONTH","BAHARAD","isGregorianLeapYear$1","numberOfFirstDayInYear","monthsBeforeYear","fractionalMonthsBeforeYear","dayNumber","timeOfDay","isHebrewLeapYear","getDaysInGregorianMonth","getHebrewMonths","getDaysInHebrewYear","getDaysInHebrewMonth","yearLength","yearType","daysInMonth","getDayNumberInHebrewYear","numberOfDay","toGregorian$1","hebrewDate","diffDays","hebrewNumerals","numerals","hArray0_9","hArray10_19","hArray20_90","hArray100_900","hArray1000_9000","mem","result","step","unshift","NgbCalendarHebrew","setHebrewMonth","setHebrewDay","fromGregorian$1","daysSinceHebEpoch","monthsSinceHebEpoch","firstDayOfThisYear","dayOfYear","WEEKDAYS","MONTHS","MONTHS_LEAP","NgbDatepickerI18nHebrew","NgbDateNativeAdapter","NgbDateNativeUTCAdapter","getUTCFullYear","getUTCMonth","getUTCDate","UTC","NgbDatepickerModule","FormsModule","NgbDropdownItem","dropdownItemEl","NgbDropdownMenu","dropdown","isEventFrom","triggerEl","applyPlacement","_placement","parentNode","[class.dropdown-menu]","[attr.x-placement]","NgbDropdown","NgbDropdownAnchor","anchorEl","aria-haspopup","[attr.aria-expanded]","NgbDropdownToggle","elementRef","toggleOpen","(click)","_changeDetector","_positionMenu","_menu","_open","_setCloseHandlers","ngAfterViewInit","_setKeyboardHandlers","openChange","clicks$","_shouldCloseFromClick","button","_isEventFromToggle","_isEventFromMenu","_anchor","listeners","anchor$","filterKeyboardEvents","items$","merge","menuItems","bind","_getMenuElements","activeElement","NgbDropdownConfig","ContentChild","read","NGB_DROPDOWN_DIRECTIVES","NgbDropdownModule","NgbModalBackdrop","[class]","BACKDROP_CLICK","ESC","NgbModalWindow","backdropClick","backdrop","dismiss","ModalDismissReasons","escKey","defaultPrevented","reason","dismissEvent","_elWithFocus","body","elWithFocus","(keyup.esc)","[attr.aria-labelledby]","ContentRef","nodes","viewRef","componentRef","PopupService","_type","_injector","_viewContainerRef","_componentFactoryResolver","content","_windowRef","_contentRef","_getContentRef","createEmbeddedView","rootNodes","createText","noop","ScrollBar","compensate","_isPresent","_adjustBody","_getWidth","userSetPadding","paddingRight","paddingAmount","rect","measurer","createElement","className","removeChild","NgbActiveModal","NgbModalRef","_windowCmptRef","_backdropCmptRef","_beforeDismiss","Promise","resolve","reject","_resolve","_reject","then","_removeModalElements","_dismiss","windowNativeEl","destroy","backdropNativeEl","NgbModalStack","_applicationRef","_scrollBar","_rendererFactory","_activeWindowCmptHasChanged","_windowCmpts","activeWindowCmpt","moduleCFR","contentInjector","containerEl","renderer","createRenderer","revertPaddingForScrollBar","removeBodyClass","_modalRefs","activeModal","contentRef","injector","backdropCmptRef","_attachBackdrop","windowCmptRef","_attachWindowComponent","ngbModalRef","beforeDismiss","_registerModalRef","_registerWindowCmpt","_applyWindowOptions","_applyBackdropOptions","dismissAll","attachView","windowInstance","_windowAttributes","backdropInstance","_backdropAttributes","_createFromTemplateRef","_createFromString","_createFromComponent","$implicit","component","createTextNode","contentCmptFactory","modalContentInjector","Injector","useValue","parent","unregisterModalRef","ngbWindowCmpt","onDestroy","ApplicationRef","RendererFactory2","NgbModal","_moduleCFR","_modalStack","_config","combinedOptions","NgbModalConfig","NgbModalModule","NgbPagination","boundaryLinks","directionLinks","ellipses","maxSize","pageSize","rotate","size","hasPrevious","page","hasNext","pageCount","selectPage","pageNumber","_updatePages","isEllipsis","_applyEllipses","pages","_applyRotation","leftOffset","rightOffset","_applyPagination","_setPageInRange","newPageNo","prevPageNo","collectionSize","pageChange","newPage","NgbPaginationConfig","NgbPaginationModule","Trigger","isManual","DEFAULT_ALIASES","hover","noopFn","listenToTriggers","triggers","openFn","closeFn","toggleFn","parsedTriggers","parseTriggers","aliases","trimmedTriggers","trigger","triggerPair","alias","manualTriggers","listen","unsubscribeFn","NgbPopoverWindow","isTitleTemplate","title","[id]","NgbPopover","componentFactoryResolver","viewContainerRef","disablePopover","popoverClass","_popupService","_isDisabled","ngbPopover","popoverTitle","_ngbPopoverWindowId","setAttribute","justOpened","shown","removeAttribute","_unregisterListenersFn","_isEventFromPopover","popup","NgbPopoverConfig","NgbPopoverModule","NgbProgressbar","animated","striped","showValue","getValue","getPercentValue","NgbProgressbarConfig","NgbProgressbarModule","NGB_RATING_VALUE_ACCESSOR","NgbRating","_changeDetectorRef","readonly","ariaValueText","nextRate","enter","handleBlur","handleClick","update","resettable","rate","handleKeyDown","contexts","v","k","fill","reset","leave","internalChange","newRate","rateChange","_getFillValue","Number","toFixed","nextValue","aria-valuemin","[attr.aria-valuemax]","[attr.aria-valuenow]","[attr.aria-valuetext]","[attr.aria-disabled]","(keydown)","NgbRatingConfig","NgbRatingModule","NgbTabTitle","NgbTabContent","NgbTab","NgbTabset","justify","orientation","justifyClass","tabId","selectedTab","_getTabById","tabChange","activeTab","tabs","tabsWithId","tab","NgbTabsetConfig","NGB_TABSET_DIRECTIVES","NgbTabsetModule","NgbTime","hour","minute","second","changeHour","updateHour","NaN","changeMinute","updateMinute","changeSecond","updateSecond","checkSecs","NGB_DATEPICKER_TIME_ADAPTER_FACTORY","NgbTimeStructAdapter","NgbTimeAdapter","NGB_TIMEPICKER_VALUE_ACCESSOR","NgbTimepicker","_ngbTimeAdapter","meridian","spinners","seconds","hourStep","minuteStep","secondStep","readonlyInputs","structValue","propagateModelChange","newVal","isPM","enteredHour","toggleMeridian","formatHour","formatMinSec","touched","NgbTimepickerConfig","NgbTimepickerModule","NgbTooltipWindow","NgbTooltip","disableTooltip","tooltipClass","_ngbTooltip","_ngbTooltipWindowId","_isEventFromTooltip","NgbTooltipConfig","NgbTooltipModule","NgbHighlight","resultStr","resultLC","toLowerCase","termLC","term","currentIdx","parts","RegExp","regExpEscape","text","replace","part","originalPart","substr","NgbTypeaheadWindow","hasActive","activeIdx","results","getActive","markActive","_activeChanged","focusFirst","resetActive","selectEvent","activeChangeEvent","ARIA_LIVE_DELAY","InjectionToken","factory","ARIA_LIVE_DELAY_FACTORY","getLiveElement","lazyCreate","classList","Live","_delay","parentElement","say","message","delay","textContent","setText","setTimeout","NGB_TYPEAHEAD_VALUE_ACCESSOR","NgbTypeahead","nextWindowId","ngZone","_live","editable","showHint","_valueChanges","_resubscribeTypeahead","BehaviorSubject","isPopupOpen","processedResults$","tap","_inputValueBackup","ngbTypeahead","userInput$","_subscribeToUserInput","_closePopup","_unsubscribeFromUserInput","_writeInputValue","_formatItemForInput","onDocumentClick","dismissPopup","_showHint","_selectResult","_openPopup","popupId","_selectResultClosePopup","activeDescendant","selectItem","userInputLowerCase","formattedVal","inputFormatter","resultFormatter","formatter","resultTemplate","count","[class.open]","(document:click)","[autocomplete]","autocapitalize","autocorrect","aria-multiline","[attr.aria-autocomplete]","[attr.aria-activedescendant]","[attr.aria-owns]","NgbTypeaheadConfig","NgbTypeaheadModule","NGB_MODULES","NgbModule"],"mappings":"kcAAA,SAAAA,EAA0BC,GACxB,OAAOC,SAAS,GAAGD,EAAS,IAG9B,SAAAE,EAAyBF,GACvB,OAAQA,IAAUG,WAAuB,OAAVH,EAAkB,GAAGA,EAAU,GAGhE,SAAAI,EAAgCJ,EAAeK,EAAaC,GAC1D,YAD0D,IAAAA,IAAAA,EAAA,GACnDC,KAAKF,IAAIE,KAAKD,IAAIN,EAAOK,GAAMC,GAGxC,SAAAE,EAAyBR,GACvB,MAAwB,iBAAVA,EAGhB,SAAAS,EAAyBT,GACvB,OAAQU,MAAMX,EAAUC,IAG1B,SAAAW,EAA0BX,GACxB,MAAwB,iBAAVA,GAAsBY,SAASZ,IAAUO,KAAKM,MAAMb,KAAWA,EAG/E,SAAAc,EAA0Bd,GACxB,OAAOA,IAAUG,WAAuB,OAAVH,EAGhC,SAAAe,EAA0Bf,GACxB,OAAIS,EAAST,IACJ,IAAIA,GAAQgB,OAAO,GAEnB,mDCvBK,6BAFfC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,qHCSrBC,EAAS,eAOX,SAAAC,EAAmBC,GAAAC,KAAAD,YAAAA,6BAFpBE,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,0EAZpBC,EAAAA,iCAsBA,SAAAC,EAAmBL,GAAAC,KAAAD,YAAAA,6BAFpBE,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,4EApBpBC,EAAAA,6DAmCoB,UAMN,aAAaN,iBAKlB,SAoBTQ,EAAAC,UAAAC,sBAAA,WAKEP,KAAKQ,SAAWR,KAAKS,UAAUC,MAC/BV,KAAKW,WAAaX,KAAKY,YAAYF,2BA3CtCT,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,kDAMnBW,EAAAA,kBAMAA,EAAAA,qBAUAA,EAAAA,oBAOAA,EAAAA,yBAKAC,EAAAA,gBAAenB,KAAA,CAACG,EAAe,CAACiB,aAAa,yBAC7CD,EAAAA,gBAAenB,KAAA,CAACS,EAAiB,CAACW,aAAa,yBA2FhD,SAAAC,EAAYC,kBAxB4B,uBAUf,mBAYD,IAAIC,EAAAA,aAG1BlB,KAAKmB,KAAOF,EAAOE,KACnBnB,KAAKoB,iBAAmBH,EAAOI,mBAMjCL,EAAAV,UAAAgB,WAAA,SAAWC,GAA4B,OAA0C,EAAnCvB,KAAKwB,UAAUC,QAAQF,IAKrEP,EAAAV,UAAAoB,OAAA,SAAOH,GAAyBvB,KAAK2B,iBAAiB3B,KAAK4B,eAAeL,IAAU,IAMpFP,EAAAV,UAAAuB,UAAA,WAAA,IAAAC,EAAA9B,KACMA,KAAKoB,iBACuB,IAA1BpB,KAAKwB,UAAUO,QAAgB/B,KAAKgC,OAAOD,QAC7C/B,KAAK2B,iBAAiB3B,KAAKgC,OAAOtB,OAAO,GAG3CV,KAAKgC,OAAOC,QAAQ,SAAAC,GAAS,OAAAJ,EAAKH,iBAAiBO,GAAO,MAO9DlB,EAAAV,UAAA6B,SAAA,SAASZ,GAAmBvB,KAAK2B,iBAAiB3B,KAAK4B,eAAeL,IAAU,IAKhFP,EAAAV,UAAA8B,YAAA,WAAA,IAAAN,EAAA9B,KACEA,KAAKgC,OAAOC,QAAQ,SAACC,GAAYJ,EAAKH,iBAAiBO,GAAO,MAMhElB,EAAAV,UAAA+B,OAAA,SAAOd,GACL,IAAMW,EAAQlC,KAAK4B,eAAeL,GAC9BW,GACFlC,KAAK2B,iBAAiBO,GAAQA,EAAMI,SAIxCtB,EAAAV,UAAAC,sBAAA,WAAA,IAAAuB,EAAA9B,KAEMf,EAASe,KAAKwB,aAChBxB,KAAKwB,UAAYxB,KAAKwB,UAAUe,MAAM,YAIxCvC,KAAKgC,OAAOC,QAAQ,SAAAC,GAAS,OAAAA,EAAMI,QAAUJ,EAAMM,WAAgD,EAApCV,EAAKN,UAAUC,QAAQS,EAAMO,MAGhE,EAAxBzC,KAAKwB,UAAUO,QAAc/B,KAAKoB,mBACpCpB,KAAK0C,aAAa1C,KAAKwB,UAAU,IACjCxB,KAAK2C,qBAID3B,EAAAV,UAAAqB,0BAAiBO,EAAiBU,GACxC,GAAIV,IAAUA,EAAMM,UAAYN,EAAMI,SAAWM,EAAW,CAC1D,IAAIC,GAAmB,EAEvB7C,KAAK8C,YAAYC,KACb,CAACxB,QAASW,EAAMO,GAAIG,UAAWA,EAAWI,eAAgB,WAAQH,GAAmB,KAEpFA,KACHX,EAAMI,OAASM,IAEE5C,KAAKoB,kBACpBpB,KAAK0C,aAAaR,EAAMO,IAE1BzC,KAAK2C,sBAKH3B,EAAAV,UAAAoC,sBAAanB,GACnBvB,KAAKgC,OAAOC,QAAQ,SAAAC,GACdA,EAAMO,KAAOlB,IACfW,EAAMI,QAAS,MAKbtB,EAAAV,UAAAsB,wBAAeL,GAAoC,OAAOvB,KAAKgC,OAAOiB,KAAK,SAAAC,GAAK,OAAAA,EAAET,KAAOlB,KAEzFP,EAAAV,UAAAqC,4BACN3C,KAAKwB,UAAYxB,KAAKgC,OAAOmB,OAAO,SAAAjB,GAAS,OAAAA,EAAMI,SAAWJ,EAAMM,WAAUY,IAAI,SAAAlB,GAAS,OAAAA,EAAMO,0BAvJpGY,EAAAA,UAAS1D,KAAA,CAAC,CACTO,SAAU,gBACVoD,SAAU,eACVC,KAAM,CAACC,QAAS,YAAaC,KAAQ,UAAWC,8BAA+B,qBAC/EC,SAAU,ojCAnGJC,qCAyHL9C,EAAAA,gBAAenB,KAAA,CAACU,sBAKhBQ,EAAAA,gCAKAA,EAAAA,MAAKlB,KAAA,CAAC,sCAKNkB,EAAAA,oBAOAA,EAAAA,2BAKAgD,EAAAA,eC1JGC,EAA2B,CAAC9C,EAAcX,EAAUP,EAAeM,qCAUhE2D,EAAAC,QAAP,WAAwC,MAAO,CAACC,SAAUF,wBAR3DG,EAAAA,SAAQvE,KAAA,CAAC,CAACwE,aAAcL,EAA0BM,QAASN,EAA0BO,QAAS,CAACC,EAAAA,mECDhF,YACP,qCAHR5E,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,kIC6CvB,SAAA2E,EAAYtD,EAAgCuD,EAA8BC,GAA9BzE,KAAAwE,UAAAA,EAA8BxE,KAAAyE,SAAAA,aAFxD,IAAIvD,EAAAA,aAGpBlB,KAAK0E,YAAczD,EAAOyD,YAC1B1E,KAAKmB,KAAOF,EAAOE,YAGrBoD,EAAAjE,UAAAqE,aAAA,WAAiB3E,KAAK4E,MAAM7B,KAAK,OAEjCwB,EAAAjE,UAAAuE,YAAA,SAAYC,GACV,IAAMC,EAAaD,EAAc,KAC7BC,IAAeA,EAAWC,cAC5BhF,KAAKwE,UAAUS,YAAYjF,KAAKyE,SAASS,cAAe,SAASH,EAAWI,eAC5EnF,KAAKwE,UAAUY,SAASpF,KAAKyE,SAASS,cAAe,SAASH,EAAWM,gBAI7Ed,EAAAjE,UAAAgF,SAAA,WAAatF,KAAKwE,UAAUY,SAASpF,KAAKyE,SAASS,cAAe,SAASlF,KAAKmB,2BAjDjFkC,EAAAA,UAAS1D,KAAA,CAAC,CACTO,SAAU,YACVqF,gBAAiBC,EAAAA,wBAAwBC,OACzClC,KAAM,CAACE,KAAQ,QAASD,QAAS,QAASkC,4BAA6B,eACvE/B,SAAU,2PAOVgC,OAAQ,CAAC,gGAhBHC,SAPNC,EAAAA,iBACAC,EAAAA,mDAkCCjF,EAAAA,oBAKAA,EAAAA,qBAIAgD,EAAAA,eClDHkC,EAAA,gCAgBSA,EAAA/B,QAAP,WAAwC,MAAO,CAACC,SAAU8B,wBAR3D7B,EAAAA,SAAQvE,KAAA,CAAC,CAACwE,aAAc,CAACI,GAAWH,QAAS,CAACG,GAAWF,QAAS,CAACC,EAAAA,cAAe0B,gBAAiB,CAACzB,SARrG,GCAA0B,EAAA,oDAEChG,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,mBACVqD,KACI,CAAC2C,cAAe,OAAQC,iBAAkB,SAAUC,mBAAoB,WAAYC,gBAAiB,iBAL3G,GCKMC,EAA8B,CAClCC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAAC,IAC9BC,OAAO,gBAgDP,SAAAD,EAAoBE,GAAA7G,KAAA6G,OAAAA,iBAtBA,qBAKI,uBAKE,gBAEf,SAACC,oBACA,oBAEZC,OAAAC,eAAIL,EAAArG,UAAA,UAAO,KAAX,SAAY2G,IACVjH,KAAK6G,OAAOK,QAAUD,IAEpBjH,KAAKmH,6CAMTR,EAAArG,UAAA8G,cAAA,SAAcC,GACZ,IAAMC,EAAmBD,EAAOE,OAAOC,QAAUxH,KAAKyH,aAAezH,KAAK0H,eAC1E1H,KAAK2H,SAASL,GACdtH,KAAKmH,YACLnH,KAAK4H,WAAWN,IAGlBX,EAAArG,UAAAuH,iBAAA,SAAiBC,GAAiC9H,KAAK2H,SAAWG,GAElEnB,EAAArG,UAAAyH,kBAAA,SAAkBD,GAAuB9H,KAAKmH,UAAYW,GAE1DnB,EAAArG,UAAA0H,iBAAA,SAAiBC,GACfjI,KAAKwC,SAAWyF,EAChBjI,KAAK6G,OAAOrE,SAAWyF,GAGzBtB,EAAArG,UAAAsH,WAAA,SAAWnJ,GACTuB,KAAKwH,QAAU/I,IAAUuB,KAAKyH,aAC9BzH,KAAK6G,OAAOqB,OAASlI,KAAKwH,6BA5D7BvH,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,6BACVqD,KAAM,CACJ4E,aAAgB,MAChBC,YAAa,UACbC,aAAc,WACdC,WAAY,wBACZC,UAAW,iBACXC,SAAU,mBAEZC,UAAW,CAACnC,gDAvBNL,uCA+BLpF,EAAAA,4BAKAA,EAAAA,8BAKAA,EAAAA,cCvCG6H,EAA2B,CAC/BnC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAAiC,IAC9B/B,OAAO,GAGL/G,EAAS,yCAQsB,IAAI+I,gBACpB,eAUD,aAAa/I,kBAElB,SAACiH,oBACA,oBAVZC,OAAAC,eAAI2B,EAAArI,UAAA,WAAQ,KAAZ,WAAiB,OAAON,KAAK6I,eAC7B,SAAaZ,GAAuBjI,KAAKgI,iBAAiBC,oCAW1DU,EAAArI,UAAAwI,cAAA,SAAcC,GACZ/I,KAAK4H,WAAWmB,EAAMtK,OACtBuB,KAAK2H,SAASoB,EAAMtK,QAGtBkK,EAAArI,UAAA0I,mBAAA,WAAuBhJ,KAAKiJ,sBAE5BN,EAAArI,UAAA4I,SAAA,SAASH,GAAmB/I,KAAKmJ,QAAQC,IAAIL,IAE7CJ,EAAArI,UAAAuH,iBAAA,SAAiBC,GAAiC9H,KAAK2H,SAAWG,GAElEa,EAAArI,UAAAyH,kBAAA,SAAkBD,GAAuB9H,KAAKmH,UAAYW,GAE1Da,EAAArI,UAAA0H,iBAAA,SAAiBC,GACfjI,KAAK6I,UAAYZ,EACjBjI,KAAKqJ,yBAGPV,EAAArI,UAAAgJ,WAAA,SAAWP,GAAmB/I,KAAKmJ,QAAQI,UAAOR,IAElDJ,EAAArI,UAAAsH,WAAA,SAAWnJ,GACTuB,KAAKwJ,OAAS/K,EACduB,KAAKiJ,sBAGCN,EAAArI,UAAA2I,yCAAuBjJ,KAAKmJ,QAAQlH,QAAQ,SAAC8G,GAAU,OAAAA,EAAMU,YAAY3H,EAAK0H,WAC9Eb,EAAArI,UAAA+I,iCAA0BrJ,KAAKmJ,QAAQlH,QAAQ,SAAC8G,GAAU,OAAAA,EAAMW,wCA5CzEzJ,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,kBAAmBqD,KAAM,CAACE,KAAQ,SAAUgF,UAAW,CAACC,qCAa3E7H,EAAAA,2BAiGD,SAAA8I,EACYC,EAA+B/C,EAAgCrC,EAC/DC,GADAzE,KAAA4J,OAAAA,EAA+B5J,KAAA6G,OAAAA,EAAgC7G,KAAAwE,UAAAA,EAC/DxE,KAAAyE,SAAAA,cA/CU,KAgDpBzE,KAAK4J,OAAOV,SAASlJ,MACrBA,KAAK0J,wBAtCP3C,OAAAC,eACI2C,EAAArJ,UAAA,QAAK,KA6BT,WAAc,OAAON,KAAKwJ,YA9B1B,SACU/K,GAER,IAAMoL,GADN7J,KAAKwJ,OAAS/K,GACcA,EAAME,WAAa,GAC/CqB,KAAKwE,UAAUsF,YAAY9J,KAAKyE,SAASS,cAAe,QAAS2E,GACjE7J,KAAK4J,OAAOZ,sDAMdjC,OAAAC,eACI2C,EAAArJ,UAAA,WAAQ,KAgBZ,WAAiB,OAAON,KAAK4J,OAAOpH,UAAYxC,KAAK6I,eAjBrD,SACaZ,GACXjI,KAAK6I,WAA2B,IAAfZ,EACjBjI,KAAK0J,kDAGP3C,OAAAC,eAAI2C,EAAArJ,UAAA,UAAO,KAAX,SAAY2G,GACNjH,KAAK6G,SACP7G,KAAK6G,OAAOK,QAAUD,GAEnBA,GACHjH,KAAK4J,OAAOzC,6CAIhBJ,OAAAC,eAAI2C,EAAArJ,UAAA,UAAO,KAAX,WAAgB,OAAON,KAAK+J,0CAM5BhD,OAAAC,eAAI2C,EAAArJ,UAAA,WAAQ,KAAZ,WAAiB,OAAON,KAAKgK,MAAQhK,KAAK4J,OAAOI,sCASjDL,EAAArJ,UAAA2J,YAAA,WAAgBjK,KAAK4J,OAAON,WAAWtJ,OAEvC2J,EAAArJ,UAAAqH,SAAA,WAAa3H,KAAK4J,OAAOd,cAAc9I,OAEvC2J,EAAArJ,UAAAmJ,YAAA,SAAYhL,GACVuB,KAAK+J,SAAW/J,KAAKvB,QAAUA,EAC/BuB,KAAK6G,OAAOqB,OAASlI,KAAK+J,UAG5BJ,EAAArJ,UAAAoJ,eAAA,WAAmB1J,KAAK6G,OAAOrE,SAAWxC,KAAKwC,8BA3EhDvC,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,0BACVqD,KAAM,CACJ6E,YAAa,UACbC,aAAc,WACd6B,SAAU,WACV5B,WAAY,aACZC,UAAW,iBACXC,SAAU,gEAoDQG,SA7Hd1C,SAHqDJ,EAAAA,iBAA1CC,EAAAA,4CAwFhBjF,EAAAA,qBAKAA,EAAAA,MAAKlB,KAAA,CAAC,2BAWNkB,EAAAA,MAAKlB,KAAA,CAAC,oBC9FHwK,EAAwB,CAAClE,EAAgBU,EAAagC,EAAegB,qCAUlES,EAAApG,QAAP,WAAwC,MAAO,CAACC,SAAUmG,wBAR3DlG,EAAAA,SAAQvE,KAAA,CAAC,CAACwE,aAAcgG,EAAuB/F,QAAS+F,mDCH5C,eACJ,iBACI,qBACI,6BACQ,iCACI,6BAP5BzK,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,qHCmBrBC,EAAS,eAYX,SAAAwK,EAAmBC,GAAAtK,KAAAsK,OAAAA,UADL,aAAazK,+BAN5BI,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,qEAdpBC,EAAAA,2CAoBCU,EAAAA,2BA4FD,SAAA0J,EACItJ,EAAwDuJ,EAAqBC,EACrEC,GADgD1K,KAAAwK,YAAAA,EAAqBxK,KAAAyK,QAAAA,EACrEzK,KAAA0K,IAAAA,eAlDM,IAAIC,EAAAA,oBACL,IAAIA,EAAAA,mBA6CH,IAAIzJ,EAAAA,aAKpBlB,KAAK4K,SAAW3J,EAAO2J,SACvB5K,KAAK6K,KAAO5J,EAAO4J,KACnB7K,KAAK8K,SAAW7J,EAAO6J,SACvB9K,KAAK+K,aAAe9J,EAAO8J,aAC3B/K,KAAKgL,qBAAuB/J,EAAO+J,qBACnChL,KAAKiL,yBAA2BhK,EAAOgK,gCAGzCV,EAAAjK,UAAA4K,mBAAA,WAAA,IAAApJ,EAAA9B,KAGMmL,EAAAA,kBAAkBnL,KAAKwK,cACzBxK,KAAKyK,QAAQW,kBAAkB,WAC7BtJ,EAAKuJ,QACAC,KACGlI,EAAAA,IAAI,WAAM,OAAAtB,EAAK8I,WAAWzH,EAAAA,OAAO,SAAAyH,GAAY,OAAW,EAAXA,IAC7CW,EAAAA,UAAU,SAAAX,GAAY,OAAAY,EAAAA,MAAMZ,GAAUU,KAAKG,EAAAA,UAAU3J,EAAK4J,YAC7DC,UAAU,WAAM,OAAA7J,EAAK2I,QAAQmB,IAAI,WAChC9J,EAAK+J,OACL/J,EAAK4I,IAAIoB,oBAGfhK,EAAKuJ,QAAQQ,UAKnBtB,EAAAjK,UAAAC,sBAAA,WACE,IAAIwL,EAAc/L,KAAKgM,cAAchM,KAAKiM,UAC1CjM,KAAKiM,SAAWF,EAAcA,EAAYtJ,GAAMzC,KAAKkM,OAAOnK,OAAS/B,KAAKkM,OAAOxL,MAAM+B,GAAK,MAG9F8H,EAAAjK,UAAA2J,YAAA,WAAgBjK,KAAK0L,OAAOG,QAE5BtB,EAAAjK,UAAAuE,YAAA,SAAYC,GACN,aAAcA,IAAYA,EAAkB,SAAEqH,iBAChDnM,KAAKqL,QAAQQ,QAOjBtB,EAAAjK,UAAA8L,OAAA,SAAOC,GAAmBrM,KAAKsM,iBAAiBD,EAASrM,KAAKuM,wBAAwBvM,KAAKiM,SAAUI,KAKrG9B,EAAAjK,UAAAkM,KAAA,WAASxM,KAAKsM,iBAAiBtM,KAAKyM,cAAczM,KAAKiM,UAAWS,EAAuBC,QAKzFpC,EAAAjK,UAAAuL,KAAA,WAAS7L,KAAKsM,iBAAiBtM,KAAK4M,cAAc5M,KAAKiM,UAAWS,EAAuBG,OAKzFtC,EAAAjK,UAAAwM,MAAA,WAAU9M,KAAK0L,OAAOG,QAKtBtB,EAAAjK,UAAAyM,MAAA,WAAU/M,KAAKqL,QAAQQ,QAEftB,EAAAjK,UAAAgM,0BAAiBU,EAAkBC,GACzC,IAAIC,EAAgBlN,KAAKgM,cAAcgB,GACnCE,GAAiBA,EAAczK,KAAOzC,KAAKiM,WAC7CjM,KAAKmN,MAAMpK,KAAK,CAACyJ,KAAMxM,KAAKiM,SAAUmB,QAASF,EAAczK,GAAIwK,UAAWA,IAC5EjN,KAAKqL,QAAQQ,OACb7L,KAAKiM,SAAWiB,EAAczK,KAI1B8H,EAAAjK,UAAAiM,iCAAwBc,EAA8BC,GAC5D,IAAMC,EAAwBvN,KAAKwN,iBAAiBH,GAGpD,OAF2BrN,KAAKwN,iBAAiBF,GAE1CC,EAA6Cb,EAAuBC,MAAQD,EAAuBG,MAGpGtC,EAAAjK,UAAA0L,uBAAcK,GAA6B,OAAOrM,KAAKkM,OAAOjJ,KAAK,SAAAkK,GAAS,OAAAA,EAAM1K,KAAO4J,KAEzF9B,EAAAjK,UAAAkN,0BAAiBnB,GACvB,OAAOrM,KAAKkM,OAAOuB,UAAUhM,QAAQzB,KAAKgM,cAAcK,KAGlD9B,EAAAjK,UAAAsM,uBAAcc,GACpB,IAAMC,EAAW3N,KAAKkM,OAAOuB,UACvBG,EAAkB5N,KAAKwN,iBAAiBE,GAG9C,OAFoBE,IAAoBD,EAAS5L,OAAS,EAEpC/B,KAAK6K,KAAO8C,EAAS,GAAGlL,GAAKkL,EAASA,EAAS5L,OAAS,GAAGU,GAC5DkL,EAASC,EAAkB,GAAGnL,IAG7C8H,EAAAjK,UAAAmM,uBAAciB,GACpB,IAAMC,EAAW3N,KAAKkM,OAAOuB,UACvBG,EAAkB5N,KAAKwN,iBAAiBE,GAG9C,OAFyC,IAApBE,EAEE5N,KAAK6K,KAAO8C,EAASA,EAAS5L,OAAS,GAAGU,GAAKkL,EAAS,GAAGlL,GAC5DkL,EAASC,EAAkB,GAAGnL,wBA9LvDY,EAAAA,UAAS1D,KAAA,CAAC,CACTO,SAAU,eACVoD,SAAU,cACViC,gBAAiBC,EAAAA,wBAAwBC,OACzClC,KAAM,CACJC,QAAS,iBACTqK,kBAAmB,UACnBC,SAAY,IACZC,eAAgB,0BAChBC,eAAgB,0BAChBC,sBAAuB,qBACvBC,uBAAwB,sBAE1BvK,SAAU,ohCApCJwK,qCA6G0BC,EAAAA,OAAMzO,KAAA,CAAC0O,EAAAA,sBAvHvCC,EAAAA,cAPAC,EAAAA,qDA2ECzN,EAAAA,gBAAenB,KAAA,CAAC0K,qBAQhBxJ,EAAAA,wBAMAA,EAAAA,oBAKAA,EAAAA,wBAKAA,EAAAA,4BAMAA,EAAAA,oCAMAA,EAAAA,wCAMAA,EAAAA,qBAMAgD,EAAAA,kBAuIDgJ,KAAA,OACAF,MAAA,SAGW6B,EAA0B,CAACjE,EAAaF,GC1QrDoE,EAAA,gCAgBSA,EAAAzK,QAAP,WAAwC,MAAO,CAACC,SAAUwK,wBAR3DvK,EAAAA,SAAQvE,KAAA,CAAC,CAACwE,aAAcqK,EAAyBpK,QAASoK,EAAyBnK,QAAS,CAACC,EAAAA,oBAR9F,6CCcoC,6BATnCrE,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,gBACVoD,SAAU,cACVC,KAAM,CAACmL,mBAAoB,OAAQC,eAAgB,qDAMlD9N,EAAAA,MAAKlB,KAAA,CAAC,uBCdTiP,EAAA,gCAaSA,EAAA5K,QAAP,WAAwC,MAAO,CAACC,SAAU2K,wBAR3D1K,EAAAA,SAAQvE,KAAA,CAAC,CAACwE,aAAc,CAAC0K,GAAczK,QAAS,CAACyK,SALlD,GCgBIC,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgB/H,OAAOkI,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI9L,KAAK8L,EAAOA,EAAEI,eAAelM,KAAI6L,EAAE7L,GAAK8L,EAAE9L,MACpD6L,EAAGC,IAG5B,SAAAK,EAA0BN,EAAGC,GAEzB,SAAAM,IAAgBtP,KAAKuP,YAAcR,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEzO,UAAkB,OAAN0O,EAAajI,OAAOyI,OAAOR,IAAMM,EAAGhP,UAAY0O,EAAE1O,UAAW,IAAIgP,GA2FnF,SAAAG,EAAuBC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAsB,EAANA,QAAcI,EAAIE,EAAEpE,QAAQuE,MAAMD,EAAGE,KAAKN,EAAEtR,OAExE,MAAO6R,GAASN,EAAI,CAAEM,MAAOA,WAEzB,IACQP,IAAMA,EAAEK,OAASR,EAAIK,EAAU,YAAIL,EAAEM,KAAKD,WAExC,GAAID,EAAG,MAAMA,EAAEM,OAE7B,OAAOH,EAGX,SAAAI,IACI,IAAK,IAAIJ,EAAK,GAAIF,EAAI,EAAGA,EAAIO,UAAUzO,OAAQkO,IAC3CE,EAAKA,EAAGM,OAAOhB,EAAOe,UAAUP,KACpC,OAAOE,ECjIX,IAAAO,EAAA,WA2BE,SAAAA,EAAYC,EAAcC,EAAeC,GACvC7Q,KAAK2Q,KAAOvR,EAAUuR,GAAQA,EAAO,KACrC3Q,KAAK4Q,MAAQxR,EAAUwR,GAASA,EAAQ,KACxC5Q,KAAK6Q,IAAMzR,EAAUyR,GAAOA,EAAM,YAV7BH,EAAAI,KAAP,SAAYC,GACV,OAAIA,aAAgBL,EACXK,EAEFA,EAAO,IAAIL,EAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAAO,MAY/DH,EAAApQ,UAAA0Q,OAAA,SAAOC,GACL,OAAOA,GAASjR,KAAK2Q,OAASM,EAAMN,MAAQ3Q,KAAK4Q,QAAUK,EAAML,OAAS5Q,KAAK6Q,MAAQI,EAAMJ,KAM/FH,EAAApQ,UAAA4Q,OAAA,SAAOD,GACL,QAAKA,IAIDjR,KAAK2Q,OAASM,EAAMN,KAClB3Q,KAAK4Q,QAAUK,EAAML,MAChB5Q,KAAK6Q,MAAQI,EAAMJ,KAAc7Q,KAAK6Q,IAAMI,EAAMJ,IAElD7Q,KAAK4Q,MAAQK,EAAML,MAGrB5Q,KAAK2Q,KAAOM,EAAMN,OAO7BD,EAAApQ,UAAA6Q,MAAA,SAAMF,GACJ,QAAKA,IAGDjR,KAAK2Q,OAASM,EAAMN,KAClB3Q,KAAK4Q,QAAUK,EAAML,MAChB5Q,KAAK6Q,MAAQI,EAAMJ,KAAc7Q,KAAK6Q,IAAMI,EAAMJ,IAElD7Q,KAAK4Q,MAAQK,EAAML,MAGrB5Q,KAAK2Q,KAAOM,EAAMN,SAzE/B,GCJA,SAAAS,EAAoBC,GAClB,OAAO,IAAIX,EAAQW,EAAOC,cAAeD,EAAOE,WAAa,EAAGF,EAAOG,WAEzE,SAAAC,EAAkBV,GAChB,IAAMM,EAAS,IAAIK,KAAKX,EAAKJ,KAAMI,EAAKH,MAAQ,EAAGG,EAAKF,IAAK,IAK7D,OAHK1R,MAAMkS,EAAOM,YAChBN,EAAOO,YAAYb,EAAKJ,MAEnBU,EAKT,SAAAQ,IACE,OAAO,IAAIC,4DAOZpS,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,OAAQmS,WAAYF,wKAuDHG,EAAAA,EAAAA,GACxCF,EAAAxR,UAAA2R,eAAA,WAAmB,OAAO,GAE1BH,EAAAxR,UAAA4R,UAAA,WAAc,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,KAEzDJ,EAAAxR,UAAA6R,iBAAA,WAAqB,OAAO,GAE5BL,EAAAxR,UAAA8R,QAAA,SAAQrB,EAAesB,EAAyBC,QAAzB,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAC9C,IAAIjB,EAASI,EAASV,GAEtB,OAAQsB,GACN,IAAK,IACH,OAAO,IAAI3B,EAAQK,EAAKJ,KAAO2B,EAAQ,EAAG,GAC5C,IAAK,IACHjB,EAAS,IAAIK,KAAKX,EAAKJ,KAAMI,EAAKH,MAAQ0B,EAAS,EAAG,EAAG,IACzD,MACF,IAAK,IACHjB,EAAOkB,QAAQlB,EAAOG,UAAYc,GAClC,MACF,QACE,OAAOvB,EAGX,OAAOK,EAAWC,IAGpBS,EAAAxR,UAAAkS,QAAA,SAAQzB,EAAesB,EAAyBC,GAAc,YAAvC,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAAqBtS,KAAKoS,QAAQrB,EAAMsB,GAASC,IAEjGR,EAAAxR,UAAAmS,WAAA,SAAW1B,GACT,IACIF,EADSY,EAASV,GACL2B,SAEjB,OAAe,IAAR7B,EAAY,EAAIA,GAGzBiB,EAAAxR,UAAAqS,cAAA,SAAcC,EAAiBC,GAEN,IAAnBA,IACFA,EAAiB,GAGnB,IAGMxB,EAASI,EAFJmB,GADY,GAAQC,GAAkB,IAIjDxB,EAAOkB,QAAQlB,EAAOG,UAAY,GAAKH,EAAOqB,UAAY,IAC1D,IAAMI,EAAOzB,EAAOM,UAGpB,OAFAN,EAAO0B,SAAS,GAChB1B,EAAOkB,QAAQ,GACRvT,KAAKM,MAAMN,KAAKgU,OAAOF,EAAOzB,EAAOM,WAAa,OAAY,GAAK,GAG5EG,EAAAxR,UAAA2S,SAAA,WAAsB,OAAO7B,EAAW,IAAIM,OAE5CI,EAAAxR,UAAA4S,QAAA,SAAQnC,GACN,KAAKA,GAAS3R,EAAU2R,EAAKJ,OAAUvR,EAAU2R,EAAKH,QAAWxR,EAAU2R,EAAKF,MAC9E,OAAO,EAGT,IAAMQ,EAASI,EAASV,GAExB,OAAQ5R,MAAMkS,EAAOM,YAAcN,EAAOC,gBAAkBP,EAAKJ,MAAQU,EAAOE,WAAa,IAAMR,EAAKH,OACpGS,EAAOG,YAAcT,EAAKF,yBA/DjCnR,EAAAA,gBACyCyT,GC3E1C,SAAAC,EAA8B5G,EAAeX,GAC3C,OAGF,SAAAwH,EAA+B7G,EAAeX,GAC5C,OAASW,IAASX,KAAYW,KAAUX,GAAQW,EAAKwE,OAAOnF,GAJpDwH,CAAe7G,EAAMX,GAa/B,SAAAyH,GAAiCvC,EAAewC,EAAkBC,GAChE,OAAIzC,GAAQwC,GAAWxC,EAAKG,OAAOqC,GAC1BA,EAELxC,GAAQyC,GAAWzC,EAAKI,MAAMqC,GACzBA,EAGFzC,EAGT,SAAA0C,GAAiC1C,EAAe2C,GACvC,IAAAH,EAAAG,EAAAH,QAASC,EAAAE,EAAAF,QAAShR,EAAAkR,EAAAlR,SAAUmR,EAAAD,EAAAC,aAEnC,SACGpU,EAAUwR,IACXvO,GACCmR,GAAgBA,EAAa5C,EAAM,CAACJ,KAAMI,EAAKJ,KAAMC,MAAOG,EAAKH,SACjE2C,GAAWxC,EAAKG,OAAOqC,IACvBC,GAAWzC,EAAKI,MAAMqC,IA8C3B,SAAAI,GACIC,EAAuB9C,EAAe2C,EAA4BI,EAClEC,GACK,IAAAC,EAAAN,EAAAM,cAAeC,EAAAP,EAAAO,OAEhBC,EAAgBD,EAAOE,OAAO,EAAGF,EAAOlS,QAyB9C,OAtBmBoN,MAAM2B,KAAK,CAAC/O,OAAQiS,GAAgB,SAAClN,EAAGmJ,GACzD,IAAMmE,EAAYP,EAASzB,QAAQrB,EAAM,IAAKd,GAG9C,GAFAgE,EAAOhE,GAAK,MAEP8D,EAAO,CACV,IAAMM,EAAcH,EAAcI,UAAU,SAAA1D,GAAS,OAAAA,EAAMwD,UAAUpD,OAAOoD,MAEvD,IAAjBC,IACFJ,EAAOhE,GAAKiE,EAAcC,OAAOE,EAAa,GAAG,IAIrD,OAAOD,IAIEnS,QAAQ,SAACmS,EAAWnE,GACX,OAAdgE,EAAOhE,KACTgE,EAAOhE,GAOb,SAAAsE,EACIV,EAAuB9C,EAAe2C,EAA4BI,EAClElD,QAAA,IAAAA,IAAAA,EAAA,IACK,IAAA2C,EAAAG,EAAAH,QAASC,EAAAE,EAAAF,QAASX,EAAAa,EAAAb,eAAgBc,EAAAD,EAAAC,aAAca,EAAAd,EAAAc,YAEvD5D,EAAMwD,UAAY,KAClBxD,EAAM6D,SAAW,KACjB7D,EAAM0B,OAASvB,EAAKH,MACpBA,EAAMD,KAAOI,EAAKJ,KAClBC,EAAM8D,MAAQ9D,EAAM8D,OAAS,GAC7B9D,EAAM+D,SAAW/D,EAAM+D,UAAY,GAEnC5D,EA8DF,SAAA6D,EAAiCf,EAAuB9C,EAAe8B,GACrE,IAAMgC,EAAchB,EAAS5B,iBACvB6C,EAAiB,IAAIpE,EAAQK,EAAKJ,KAAMI,EAAKH,MAAO,GACpDmE,EAAYlB,EAASpB,WAAWqC,GAAkBD,EACxD,OAAOhB,EAASrB,QAAQsC,EAAgB,KAAMD,EAAcE,EAAYlC,GAAkBgC,GAlEnFD,CAAiBf,EAAU9C,EAAM8B,GAGxC,IAAK,IAAID,EAAO,EAAGA,EAAOiB,EAAS1B,mBAAoBS,IAAQ,CAC7D,IAAIoC,EAAapE,EAAM8D,MAAM9B,GACxBoC,IACHA,EAAapE,EAAM8D,MAAM9B,GAAQ,CAACN,OAAQ,EAAG2C,KAAM,GAAIC,WAAW,IAKpE,IAHA,IAAMD,EAAOD,EAAWC,KAGfpE,EAAM,EAAGA,EAAMgD,EAAS5B,iBAAkBpB,IAAO,CAC3C,IAAT+B,IACFhC,EAAM+D,SAAS9D,GAAOgD,EAASpB,WAAW1B,IAG5C,IAAMoE,EAAU,IAAIzE,EAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAClDuE,EAAWvB,EAASzB,QAAQ+C,GAE5BE,EAAYvB,EAAKwB,gBAAgBH,GAGnC3S,KAAe+Q,GAAW4B,EAAQjE,OAAOqC,IAAcC,GAAW2B,EAAQhE,MAAMqC,KAC/EhR,GAAYmR,IACfnR,EAAWmR,EAAawB,EAAS,CAACvE,MAAOA,EAAM0B,OAAQ3B,KAAMC,EAAMD,QAI7C,OAApBC,EAAMwD,WAAsBe,EAAQvE,QAAUA,EAAM0B,SACtD1B,EAAMwD,UAAYe,GAIhBA,EAAQvE,QAAUA,EAAM0B,QAAU8C,EAASxE,QAAUA,EAAM0B,SAC7D1B,EAAM6D,SAAWU,GAGnB,IAAII,EAAYN,EAAKpE,GAChB0E,IACHA,EAAYN,EAAKpE,GAAI,IAEvB0E,EAAUxE,KAAOoE,EACjBI,EAAUC,QAAUzO,OAAO0O,OACvBF,EAAUC,SAAW,GACrB,CAACzE,KAAMoE,EAASO,aAAc9E,EAAM0B,OAAQ9P,SAAQA,EAAE0E,SAAS,EAAOyO,UAAU,IACpFJ,EAAUK,UAAY,EACtBL,EAAUF,UAAYA,EACtBE,EAAUM,QAAS,EAEnB9E,EAAOqE,EAGTJ,EAAW1C,OAASuB,EAASlB,cAAcsC,EAAK7R,IAAI,SAAAyN,GAAO,OAAAA,EAAIE,OAAO8B,GAGtEmC,EAAWE,UAA4B,cAAhBV,GAA+BS,EAAK,GAAGlE,KAAKH,QAAUA,EAAM0B,QAC/E2C,EAAKA,EAAKlT,OAAS,GAAGgP,KAAKH,QAAUA,EAAM0B,OAGjD,OAAO1B,EA9ES2D,CAAWV,EAAUO,EAAWV,EAAOI,EAAMI,EAAc4B,SAAO,OAI3E7B,EC/GT,SAAA8B,GAA2CC,GACzC,OAAO,IAAIC,GAAyBD,0CAyCpCE,EAAA5V,UAAA6V,eAAA,SAAepF,GAA+B,MAAO,GAAGA,EAAKF,KAO7DqF,EAAA5V,UAAA8V,gBAAA,SAAgBC,GAA8B,MAAO,GAAGA,GAQxDH,EAAA5V,UAAAgW,gBAAA,SAAgB3F,GAAwB,MAAO,GAAGA,uBA/CnDjR,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,OAAQmS,WAAYgE,GAA4BQ,KAAM,CAACC,EAAAA,4JAwD9E,SAAAP,EAAuCQ,GAAvC,IAAA3U,EACE4U,EAAAxG,KAAAlQ,OAAOA,KAD8B8B,EAAA2U,QAAAA,EAGrC,IAAME,EAA2BC,EAAAA,kBAAkBH,EAASI,EAAAA,UAAUC,WAAYC,EAAAA,iBAAiBC,cACnGlV,EAAKmV,eAAiBN,EAAyBvT,IAAI,SAACyN,EAAKqG,GAAU,OAAAP,GAA0BO,EAAQ,GAAK,KAE1GpV,EAAKqV,aAAeC,EAAAA,oBAAoBX,EAASI,EAAAA,UAAUC,WAAYC,EAAAA,iBAAiBM,aACxFvV,EAAKwV,YAAcF,EAAAA,oBAAoBX,EAASI,EAAAA,UAAUC,WAAYC,EAAAA,iBAAiBQ,eAZ7CvF,EAAAA,EAAAA,GAe5CiE,EAAA3V,UAAAkX,oBAAA,SAAoBC,GAA2B,OAAOzX,KAAKiX,eAAeQ,EAAU,IAEpFxB,EAAA3V,UAAAoX,kBAAA,SAAkB9G,GAAyB,OAAO5Q,KAAKmX,aAAavG,EAAQ,IAE5EqF,EAAA3V,UAAAqX,iBAAA,SAAiB/G,GAAyB,OAAO5Q,KAAKsX,YAAY1G,EAAQ,IAE1EqF,EAAA3V,UAAAgV,gBAAA,SAAgBvE,GACd,IAAMM,EAAS,IAAIK,KAAKX,EAAKJ,KAAMI,EAAKH,MAAQ,EAAGG,EAAKF,KACxD,OAAO+G,EAAAA,WAAWvG,EAAQ,WAAYrR,KAAKyW,8BAxB9C/W,EAAAA,+EAMc0O,EAAAA,OAAMzO,KAAA,CAAC6W,EAAAA,mBALwBN,ICjE9C2B,GAAA,WAwGE,SAAAA,EAAoBC,EAAgCC,GAAhC/X,KAAA8X,UAAAA,EAAgC9X,KAAA+X,MAAAA,eAhFlC,IAAIpN,EAAAA,sBAEH,IAAIA,EAAAA,oBAEe,CACpCnI,UAAU,EACVwR,cAAe,EACfnB,eAAgB,EAChBmF,cAAc,EACd/D,OAAQ,GACRgE,WAAY,SACZzD,YAAa,UACb0D,cAAc,EACdC,cAAc,EACdC,YAAa,CAACC,MAAO,GAAIpE,OAAQ,IACjCqE,aAAc,aAGhBvR,OAAAC,eAAI6Q,EAAAvX,UAAA,SAAM,KAAV,WAAgD,OAAON,KAAKuY,QAAQjN,KAAKnI,EAAAA,OAAO,SAAAqV,GAAS,OAAsB,EAAtBA,EAAMvE,OAAOlS,2CAEtGgF,OAAAC,eAAI6Q,EAAAvX,UAAA,UAAO,KAAX,WAAqC,OAAON,KAAKyY,SAASnN,KAAKnI,EAAAA,OAAO,SAAA4N,GAAQ,OAAS,OAATA,sCAE9EhK,OAAAC,eAAI6Q,EAAAvX,UAAA,WAAQ,KAAZ,SAAakC,GACPxC,KAAK0Y,OAAOlW,WAAaA,GAC3BxC,KAAK2Y,WAAW,CAACnW,SAAQA,qCAI7BuE,OAAAC,eAAI6Q,EAAAvX,UAAA,gBAAa,KAAjB,SAAkB0T,GAEZ5U,EADJ4U,EAAgBxV,EAAUwV,KACsB,EAAhBA,GAAqBhU,KAAK0Y,OAAO1E,gBAAkBA,GACjFhU,KAAK2Y,WAAW,CAAC3E,cAAaA,qCAIlCjN,OAAAC,eAAI6Q,EAAAvX,UAAA,iBAAc,KAAlB,SAAmBuS,GAEbzT,EADJyT,EAAiBrU,EAAUqU,KACwB,GAAlBA,GAAuB7S,KAAK0Y,OAAO7F,iBAAmBA,GACrF7S,KAAK2Y,WAAW,CAAC9F,eAAcA,qCAInC9L,OAAAC,eAAI6Q,EAAAvX,UAAA,eAAY,KAAhB,SAAiB0X,GACXhY,KAAK0Y,OAAOV,eAAiBA,GAAiBhY,KAAK0Y,OAAOlW,UAC5DxC,KAAK2Y,WAAW,CAACX,aAAYA,qCAIjCjR,OAAAC,eAAI6Q,EAAAvX,UAAA,UAAO,KAAX,SAAYyQ,GACV,IAAMyC,EAAUxT,KAAK4Y,YAAY7H,EAAM,MACnCqC,EAAcpT,KAAK0Y,OAAOlF,QAASA,IACrCxT,KAAK2Y,WAAW,CAACnF,QAAOA,qCAI5BzM,OAAAC,eAAI6Q,EAAAvX,UAAA,eAAY,KAAhB,SAAiBqT,GACX3T,KAAK0Y,OAAO/E,eAAiBA,GAC/B3T,KAAK2Y,WAAW,CAAChF,aAAYA,qCAIjC5M,OAAAC,eAAI6Q,EAAAvX,UAAA,UAAO,KAAX,SAAYyQ,GACV,IAAMwC,EAAUvT,KAAK4Y,YAAY7H,EAAM,MACnCqC,EAAcpT,KAAK0Y,OAAOnF,QAASA,IACrCvT,KAAK2Y,WAAW,CAACpF,QAAOA,qCAI5BxM,OAAAC,eAAI6Q,EAAAvX,UAAA,aAAU,KAAd,SAAe2X,GACTjY,KAAK0Y,OAAOT,aAAeA,GAC7BjY,KAAK2Y,WAAW,CAACV,WAAUA,qCAI/BlR,OAAAC,eAAI6Q,EAAAvX,UAAA,cAAW,KAAf,SAAgBkU,GACVxU,KAAK0Y,OAAOlE,cAAgBA,GAC9BxU,KAAK2Y,WAAW,CAACnE,YAAWA,qCAMhCqD,EAAAvX,UAAAuY,MAAA,SAAM9H,IACC/Q,KAAK0Y,OAAOlW,UAAYxC,KAAK8X,UAAU5E,QAAQnC,IAASqC,EAAcpT,KAAK0Y,OAAOI,UAAW/H,IAChG/Q,KAAK2Y,WAAW,CAACG,UAAW/H,KAIhC8G,EAAAvX,UAAAyY,UAAA,SAAU1G,EAAoBC,GAC5BtS,KAAK6Y,MAAM7Y,KAAK8X,UAAU1F,QAAQpS,KAAK0Y,OAAOI,UAAWzG,EAAQC,KAGnEuF,EAAAvX,UAAA0Y,YAAA,WACMvF,GAAiBzT,KAAK0Y,OAAOI,UAAW9Y,KAAK0Y,SAC/C1Y,KAAKoM,OAAOpM,KAAK0Y,OAAOI,UAAW,CAACG,WAAW,KAInDpB,EAAAvX,UAAA4Y,KAAA,SAAKnI,GACH,IAAMqD,EAAYpU,KAAK4Y,YAAY7H,EAAM/Q,KAAK8X,UAAU7E,YACnDjT,KAAK0Y,OAAOlW,UACfxC,KAAK2Y,WAAW,CAACvE,UAASA,KAI9ByD,EAAAvX,UAAA8L,OAAA,SAAO2E,EAAeoI,QAAA,IAAAA,IAAAA,EAAA,IACpB,IAAMb,EAAetY,KAAK4Y,YAAY7H,EAAM,MACvC/Q,KAAK0Y,OAAOlW,WACX4Q,EAAcpT,KAAK0Y,OAAOJ,aAAcA,IAC1CtY,KAAK2Y,WAAW,CAACL,aAAYA,IAG3Ba,EAAQF,WAAaxF,GAAiB6E,EAActY,KAAK0Y,SAC3D1Y,KAAKyY,SAAS5M,KAAKyM,KAKzBT,EAAAvX,UAAAsY,YAAA,SAAY7H,EAAqBqI,GAC/B,IAAMC,EAAU3I,EAAQI,KAAKC,GAI7B,OAHIqI,IAAiBxa,YACnBwa,EAAepZ,KAAK8X,UAAU7E,YAEzBjT,KAAK8X,UAAU5E,QAAQmG,GAAWA,EAAUD,GAG7CvB,EAAAvX,UAAAqY,oBAAWW,GACjB,IAAMC,EAAWvZ,KAAKwZ,aAAaF,GACnCtZ,KAAKyZ,eAAeF,GACpBvZ,KAAK0Y,OAASa,EACdvZ,KAAKuY,QAAQ1M,KAAK7L,KAAK0Y,SAGjBb,EAAAvX,UAAAmZ,wBAAe/F,GACd,IAAAO,EAAAP,EAAAO,OAAQD,EAAAN,EAAAM,cAAesE,EAAA5E,EAAA4E,aAAcQ,EAAApF,EAAAoF,UAAWd,EAAAtE,EAAAsE,aAAcxV,EAAAkR,EAAAlR,SAAUgS,EAAAd,EAAAc,YAC/Ed,EAAMO,OAAOhS,QAAQ,SAAA2O,GACnBA,EAAM8D,MAAMzS,QAAQ,SAAA2Q,GAClBA,EAAKqC,KAAKhT,QAAQ,SAAA4O,GAGZiI,IACFjI,EAAI2E,QAAQtO,QAAU4R,EAAU9H,OAAOH,EAAIE,OAASiH,GAItDnH,EAAI+E,UAAYpT,GAAYqO,EAAIE,KAAKC,OAAO8H,IAAcA,EAAUlI,QAAUA,EAAM0B,OAAS,GAAK,GAGjF,IAAb9P,IACFqO,EAAI2E,QAAQhT,UAAW,GAIrB8V,IAAiB1Z,YACnBiS,EAAI2E,QAAQG,SAA4B,OAAjB2C,GAAyBA,EAAatH,OAAOH,EAAIE,OAItEH,EAAM0B,SAAWzB,EAAIE,KAAKH,QAC5BC,EAAIgF,OAAyB,WAAhBrB,GAA4C,cAAhBA,GACpB,EAAhBR,GAAqBnD,EAAIE,KAAKI,MAAM8C,EAAO,GAAGG,YAC9CvD,EAAIE,KAAKG,OAAO+C,EAAOD,EAAgB,GAAGS,kBAOjDoD,EAAAvX,UAAAkZ,sBAAaF,GAEnB,IAAM5F,EAAQ3M,OAAO0O,OAAO,GAAIzV,KAAK0Y,OAAQY,GAEzCI,EAAYhG,EAAMU,UAqBtB,IAlBI,YAAakF,GAAS,YAAaA,MFzL3C,SAAAK,EAAkCpG,EAAkBC,GAClD,GAAIA,GAAWD,GAAWC,EAAQtC,OAAOqC,GACvC,MAAM,IAAIqG,MAAM,aAAapG,EAAO,qCAAqCD,GEwLvEoG,CAAkBjG,EAAMH,QAASG,EAAMF,SACvCE,EAAMoF,UAAYxF,GAAiBI,EAAMoF,UAAWpF,EAAMH,QAASG,EAAMF,SACzEE,EAAMU,UAAYd,GAAiBI,EAAMU,UAAWV,EAAMH,QAASG,EAAMF,SACzEkG,EAAYhG,EAAMoF,WAIhB,aAAcQ,IAChB5F,EAAMsE,cAAe,GAInB,iBAAkBsB,GAAuC,IAA9BtZ,KAAK0Y,OAAOzE,OAAOlS,SAChD2X,EAAYhG,EAAM4E,cAIhB,cAAegB,IACjB5F,EAAMoF,UAAYxF,GAAiBI,EAAMoF,UAAWpF,EAAMH,QAASG,EAAMF,SACzEkG,EAAYhG,EAAMoF,UAGU,IAAxBpF,EAAMO,OAAOlS,SAAiB2R,EAAMoF,UAAU5H,OAAOwC,EAAMU,aAC1DV,EAAMoF,UAAU3H,MAAMuC,EAAMe,WAC/B,OAAOf,EAWX,GANI,cAAe4F,IACjB5F,EAAMU,UAAYd,GAAiBI,EAAMU,UAAWV,EAAMH,QAASG,EAAMF,SACzEkG,EAAYhG,EAAMU,WAIhBsF,EAAW,CACb,IAAMG,EAAe,mBAAoBP,GAAS,iBAAkBA,GAAS,YAAaA,GACtF,YAAaA,GAAS,aAAcA,GAAS,gBAAiBA,EAE5DrF,EAASL,GAAY5T,KAAK8X,UAAW4B,EAAWhG,EAAO1T,KAAK+X,MAAO8B,GAGzEnG,EAAMO,OAASA,EACfP,EAAMU,UAA4B,EAAhBH,EAAOlS,OAAakS,EAAO,GAAGG,UAAYxV,UAC5D8U,EAAMe,SAA2B,EAAhBR,EAAOlS,OAAakS,EAAOA,EAAOlS,OAAS,GAAG0S,SAAW7V,UAGtE,iBAAkB0a,IAAU7F,GAAiBC,EAAM4E,aAAc5E,KACnEA,EAAM4E,aAAe,MAInB,cAAegB,IACb5F,EAAMoF,YAAcla,WAAa8U,EAAMoF,UAAU5H,OAAOwC,EAAMU,YAC9DV,EAAMoF,UAAU3H,MAAMuC,EAAMe,aAC9Bf,EAAMoF,UAAYY,GAKtB,IAAMI,GAAe9Z,KAAK0Y,OAAOtE,WAAapU,KAAK0Y,OAAOtE,UAAUzD,OAAS+C,EAAMU,UAAUzD,KACvFoJ,GAAgB/Z,KAAK0Y,OAAOtE,WAAapU,KAAK0Y,OAAOtE,UAAUxD,QAAU8C,EAAMU,UAAUxD,MACtE,WAArB8C,EAAMuE,aAEJ,YAAaqB,GAAS,YAAaA,GAA4C,IAAnC5F,EAAM0E,YAAYC,MAAMtW,QAAgB+X,KACtFpG,EAAM0E,YAAYC,MFzM5B,SAAA2B,EAAuCjJ,EAAewC,EAAkBC,GACtE,IAAKzC,EACH,MAAO,GAGT,IAAMkJ,EAAQ1G,GAAWA,EAAQ5C,MAAQI,EAAKJ,KAAO,GAC/CuJ,EAAM1G,GAAWA,EAAQ7C,MAAQI,EAAKJ,KAAO,GAEnD,OAAOxB,MAAM2B,KAAK,CAAC/O,OAAQmY,EAAMD,EAAQ,GAAI,SAACjK,EAAGC,GAAM,OAAAgK,EAAQhK,IEiM7B+J,CAAuBtG,EAAMU,UAAWV,EAAMH,QAASG,EAAMF,WAIrF,YAAa8F,GAAS,YAAaA,GAA6C,IAApC5F,EAAM0E,YAAYnE,OAAOlS,QAAgB+X,KACvFpG,EAAM0E,YAAYnE,OFlO5B,SAAAkG,EAAwCtG,EAAuB9C,EAAewC,EAAkBC,GAC9F,IAAKzC,EACH,MAAO,GAGT,IAAIkD,EAASJ,EAAS3B,UAAUnB,EAAKJ,MAErC,GAAI4C,GAAWxC,EAAKJ,OAAS4C,EAAQ5C,KAAM,CACzC,IAAMuG,EAAQjD,EAAOK,UAAU,SAAA1D,GAAS,OAAAA,IAAU2C,EAAQ3C,QAC1DqD,EAASA,EAAOxU,MAAMyX,GAGpB1D,GAAWzC,EAAKJ,OAAS6C,EAAQ7C,OAC7BuG,EAAQjD,EAAOK,UAAU,SAAA1D,GAAS,OAAAA,IAAU4C,EAAQ5C,QAC1DqD,EAASA,EAAOxU,MAAM,EAAGyX,EAAQ,IAGnC,OAAOjD,EEkNKkG,CAAwBna,KAAK8X,UAAWpE,EAAMU,UAAWV,EAAMH,QAASG,EAAMF,WAGpFE,EAAM0E,YAAc,CAACC,MAAO,GAAIpE,OAAQ,IAIhB,WAArBP,EAAMuE,YAAgD,WAArBvE,EAAMuE,cACvC8B,GAAgBD,GAAe,YAAaR,GAAS,YAAaA,GAAS,aAAcA,KAC5F5F,EAAMwE,aAAexE,EAAMlR,UFzMnC,SAAA4X,EAAkCvG,EAAuB9C,EAAewC,GACtE,IAAM8G,EAAWxG,EAASrB,QAAQzB,EAAM,KACxC,OAAOwC,IAAY8G,EAAS1J,OAAS4C,EAAQ5C,MAAQ0J,EAASzJ,MAAQ2C,EAAQ3C,OAC3DyJ,EAAS1J,KAAO4C,EAAQ5C,MAA0B,IAAlB4C,EAAQ3C,OEsMdwJ,CAAkBpa,KAAK8X,UAAWpE,EAAMU,UAAWV,EAAMH,SAChGG,EAAMyE,aAAezE,EAAMlR,UF9MnC,SAAA8X,EAAkCzG,EAAuB9C,EAAeyC,GACtE,OAAOA,GAAWK,EAASzB,QAAQrB,EAAM,KAAKI,MAAMqC,GE6MP8G,CAAkBta,KAAK8X,UAAWpE,EAAMe,SAAUf,EAAMF,UAInG,OAAOE,uBAvQVhU,EAAAA,sDAtBOyT,SAoBA+C,QApBR,OCCEqE,IAAA,EACAC,MAAA,GACAC,OAAA,GACAC,MAAA,GACAC,OAAA,GACAC,SAAA,GACAC,IAAA,GACAC,KAAA,GACAC,UAAA,GACAC,QAAA,GACAC,WAAA,GACAC,UAAA,UAXAX,KAAG,YACHC,OAAK,cACLC,QAAM,eACNC,OAAK,cACLC,QAAM,eACNC,UAAQ,iBACRC,KAAG,YACHC,MAAI,aACJC,WAAS,kBACTC,SAAO,gBACPC,YAAU,mBACVC,WAAS,YCZX,IAAAC,GAAA,WAcE,SAAAA,EAAoBC,EAAwCtD,GAA5D,IAAAhW,EAAA9B,KAAoBA,KAAAob,SAAAA,EAAwCpb,KAAA8X,UAAAA,EAC1DsD,EAASC,OAAO1P,UAAU,SAAA6M,GACxB1W,EAAKwZ,SAAW9C,EAAMjF,QACtBzR,EAAKyZ,SAAW/C,EAAMhF,QACtB1R,EAAK0Z,eAAiBhD,EAAMpE,UAC5BtS,EAAK2Z,cAAgBjD,EAAM/D,kBAI/B0G,EAAA7a,UAAAob,WAAA,SAAWC,GACT,GAAIC,GAAIjd,EAASgd,EAAME,QAAS,CAC9B,OAAQF,EAAME,OACZ,KAAKD,GAAIjB,OACP3a,KAAKob,SAASrC,UAAU4C,EAAMG,SAAW,IAAM,KAAM,GACrD,MACF,KAAKF,GAAIhB,SACP5a,KAAKob,SAASrC,UAAU4C,EAAMG,SAAW,IAAM,IAAK,GACpD,MACF,KAAKF,GAAIf,IACP7a,KAAKob,SAASvC,MAAM8C,EAAMG,SAAW9b,KAAKub,SAAWvb,KAAKyb,eAC1D,MACF,KAAKG,GAAId,KACP9a,KAAKob,SAASvC,MAAM8C,EAAMG,SAAW9b,KAAKsb,SAAWtb,KAAKwb,gBAC1D,MACF,KAAKI,GAAIb,UACP/a,KAAKob,SAASrC,UAAU,KAAM,GAC9B,MACF,KAAK6C,GAAIZ,QACPhb,KAAKob,SAASrC,UAAU,KAAM/Y,KAAK8X,UAAU7F,kBAC7C,MACF,KAAK2J,GAAIX,WACPjb,KAAKob,SAASrC,UAAU,IAAK,GAC7B,MACF,KAAK6C,GAAIV,UACPlb,KAAKob,SAASrC,UAAU,IAAK/Y,KAAK8X,UAAU7F,kBAC5C,MACF,KAAK2J,GAAIpB,MACT,KAAKoB,GAAIlB,MACP1a,KAAKob,SAASpC,cACd,MACF,QACE,OAGJ2C,EAAM3Y,iBACN2Y,EAAMI,wCApDXrc,EAAAA,sDANOmY,UACA1E,OAFR,OCuDE6I,KAAA,EACAC,KAAA,SADAD,MAAI,aACJC,MAAI,yDC5CY,sBACC,kBAI0B,0BACO,6BACnC,wBACG,6BAXnBvc,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,qHCNzB,SAAAsc,KACE,OAAO,IAAIC,8DASZzc,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,OAAQmS,WAAYmK,2KAeHlK,EAAAA,EAAAA,GAIxCmK,EAAA7b,UAAA8b,UAAA,SAAUrL,GACR,OAAQA,GAAQA,EAAKJ,MAAQI,EAAKH,OAASG,EAAKF,IAAO,CAACF,KAAMI,EAAKJ,KAAMC,MAAOG,EAAKH,MAAOC,IAAKE,EAAKF,KAAO,MAM/GsL,EAAA7b,UAAA+b,QAAA,SAAQtL,GACN,OAAQA,GAAQA,EAAKJ,MAAQI,EAAKH,OAASG,EAAKF,IAAO,CAACF,KAAMI,EAAKJ,KAAMC,MAAOG,EAAKH,MAAOC,IAAKE,EAAKF,KAAO,0BAbhHnR,EAAAA,gBACyC4c,ICGpCC,GAAgC,CACpChW,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAA8V,KAC9B5V,OAAO,iBAmMP,SAAA4V,EACYC,EAAmDrB,EACnDtD,EAA+BhE,EAAyB7S,EACxDyJ,EAAgCgS,EAChCC,EAA8ClS,GAJ1D,IAAA3I,EAAA9B,KACYA,KAAAyc,eAAAA,EAAmDzc,KAAAob,SAAAA,EACnDpb,KAAA8X,UAAAA,EAA+B9X,KAAA8T,KAAAA,EAC/B9T,KAAA0K,IAAAA,EAAgC1K,KAAA0c,YAAAA,EAChC1c,KAAA2c,gBAAAA,EAA8C3c,KAAAyK,QAAAA,gBAfrC,IAAIvJ,EAAAA,yBAMN,IAAIA,EAAAA,2BAEZ,SAAC4F,oBACA,aAOV,CAAC,cAAe,gBAAiB,iBAAkB,eAAgB,UAAW,UAAW,aACxF,cAAe,eAAgB,kBAAmB,aAC9C7E,QAAQ,SAAA2a,GAAS,OAAA9a,EAAK8a,GAAS3b,EAAO2b,KAE3C5c,KAAK6c,oBAAsBzB,EAAS0B,QAAQnR,UAAU,SAAAoF,GAAUjP,EAAKsK,OAAOrJ,KAAKgO,KAEjF/Q,KAAK+c,cAAgB3B,EAASC,OAAO1P,UAAU,SAAA6M,GAC7C,IAAMrD,EAAUqD,EAAMpE,UAChB4I,EAAUlb,EAAK0W,MAAQ1W,EAAK0W,MAAMpE,UAAY,KAC9C6I,EAAkBzE,EAAMF,aACxB4E,EAAkBpb,EAAK0W,MAAQ1W,EAAK0W,MAAMF,aAAe,KACzD6E,EAAiB3E,EAAMM,UACvBsE,EAAiBtb,EAAK0W,MAAQ1W,EAAK0W,MAAMM,UAAY,KAE3DhX,EAAK0W,MAAQA,EAGTpF,EAAc6J,EAAiBC,KACjCpb,EAAKqF,YACLrF,EAAK6F,SAAS7F,EAAK6a,gBAAgBN,QAAQY,KAIzC7J,EAAc+J,EAAgBC,IAAmBA,GAAkB5E,EAAMR,cAC3ElW,EAAK+W,QAIF1D,EAAQnE,OAAOgM,IAClBlb,EAAKub,SAASta,KAAK,CACjBqK,QAAS4P,EAAU,CAACrM,KAAMqM,EAAQrM,KAAMC,MAAOoM,EAAQpM,OAAS,KAChE/E,KAAM,CAAC8E,KAAMwE,EAAQxE,KAAMC,MAAOuE,EAAQvE,SAG9ClG,EAAI4S,wBAORd,EAAAlc,UAAAuY,MAAA,WAAA,IAAA/W,EAAA9B,KACEA,KAAKyK,QAAQ8S,SAASC,eAAelS,KAAKmS,EAAAA,KAAK,IAAI9R,UAAU,WAC3D,IAAM+R,EACF5b,EAAK4a,YAAYxX,cAAcyY,cAA8B,gCAC7DD,GACFA,EAAe7E,WAWrB2D,EAAAlc,UAAAsd,WAAA,SAAW7M,GACT/Q,KAAKob,SAASlC,KAAKxI,EAAQI,KAAKC,EXvQd,WAQlB,OAPA8M,EAAW9W,OAAO0O,QAAU,SAAAoI,EAAkBC,GAC1C,IAAK,IAAIC,EAAG9N,EAAI,EAAGN,EAAIa,UAAUzO,OAAQkO,EAAIN,EAAGM,IAE5C,IAAK,IAAI/M,KADT6a,EAAIvN,UAAUP,GACOlJ,OAAOzG,UAAU8O,eAAec,KAAK6N,EAAG7a,KAAI4a,EAAE5a,GAAK6a,EAAE7a,IAE9E,OAAO4a,GAEJD,EAASG,MAAMhe,KAAMwQ,WW+PQqN,CAAA,GAAO9M,EAAI,CAAEF,IAAK,IAAK,QAG7D2L,EAAAlc,UAAA2J,YAAA,WACEjK,KAAK+c,cAAckB,cACnBje,KAAK6c,oBAAoBoB,eAG3BzB,EAAAlc,UAAAgF,SAAA,WAAA,IAAAxD,EAAA9B,KACMA,KAAKwY,QAAU5Z,YACjB,CAAC,gBAAiB,eAAgB,iBAAkB,aAAc,UAAW,UAAW,eAAeqD,QACnG,SAAA2a,GAAS,OAAA9a,EAAKsZ,SAASwB,GAAS9a,EAAK8a,KACzC5c,KAAK4d,WAAW5d,KAAK0Z,aAIzB8C,EAAAlc,UAAAuE,YAAA,SAAYC,GAAZ,IAAAhD,EAAA9B,KACE,CAAC,gBAAiB,eAAgB,iBAAkB,aAAc,UAAW,UAAW,eACnFmD,OAAO,SAAAyZ,GAAS,OAAAA,KAAS9X,IACzB7C,QAAQ,SAAA2a,GAAS,OAAA9a,EAAKsZ,SAASwB,GAAS9a,EAAK8a,KAE9C,cAAe9X,GACjB9E,KAAK4d,WAAW5d,KAAK0Z,YAIzB8C,EAAAlc,UAAA4d,aAAA,SAAanN,GACX/Q,KAAKob,SAASvC,MAAM9H,GACpB/Q,KAAKob,SAAShP,OAAO2E,EAAM,CAACkI,WAAW,KAGzCuD,EAAAlc,UAAA6d,UAAA,SAAUxC,GAAwB3b,KAAKyc,eAAef,WAAWC,IAEjEa,EAAAlc,UAAA8d,qBAAA,SAAqBrN,GAAiB/Q,KAAKob,SAASlC,KAAKnI,IAEzDyL,EAAAlc,UAAA+d,gBAAA,SAAgB1C,GACd,OAAQA,GACN,KAAK2C,GAAgBtC,KACnBhc,KAAKob,SAASlC,KAAKlZ,KAAK8X,UAAUtF,QAAQxS,KAAKwY,MAAMpE,UAAW,IAAK,IACrE,MACF,KAAKkK,GAAgBrC,KACnBjc,KAAKob,SAASlC,KAAKlZ,KAAK8X,UAAU1F,QAAQpS,KAAKwY,MAAMpE,UAAW,IAAK,MAK3EoI,EAAAlc,UAAAuH,iBAAA,SAAiBC,GAAiC9H,KAAK2H,SAAWG,GAElE0U,EAAAlc,UAAAyH,kBAAA,SAAkBD,GAAuB9H,KAAKmH,UAAYW,GAE1D0U,EAAAlc,UAAA0H,iBAAA,SAAiBC,GAAuBjI,KAAKob,SAAS5Y,SAAWyF,GAEjEuU,EAAAlc,UAAAie,UAAA,SAAUvG,GAAyBhY,KAAKob,SAASpD,aAAeA,GAEhEwE,EAAAlc,UAAAsH,WAAA,SAAWnJ,GAASuB,KAAKob,SAAShP,OAAOsE,EAAQI,KAAK9Q,KAAK2c,gBAAgBP,UAAU3d,0BAnStF4E,EAAAA,UAAS1D,KAAA,CAAC,CACT2D,SAAU,gBACVpD,SAAU,iBACVqF,gBAAiBC,EAAAA,wBAAwBC,OACzCE,OAAQ,CAAC,klCA2CThC,SAAU,0uDA2CV8E,UAAW,CAAC8T,GAA+B1E,GAAsBsD,iDA3H3DA,UADAtD,UAFA1E,SASA+C,UAHAsI,UArBNjQ,EAAAA,yBAWAzI,EAAAA,kBAWMwW,UAVNhO,EAAAA,+CA4ICzN,EAAAA,6BAKAA,EAAAA,8BAKAA,EAAAA,4BAMAA,EAAAA,uBAKAA,EAAAA,uBAKAA,EAAAA,0BAMAA,EAAAA,2BAMAA,EAAAA,4BAKAA,EAAAA,+BAKAA,EAAAA,yBAQAA,EAAAA,wBAMAgD,EAAAA,uBAMAA,EAAAA,eChOH4a,GAAA,WAyEE,SAAAA,EAAmB3K,GAAA9T,KAAA8T,KAAAA,cAFA,IAAI5S,EAAAA,oBAIvBud,EAAAne,UAAAoe,SAAA,SAAS7N,GACFA,EAAI2E,QAAQhT,UAAaqO,EAAIgF,QAChC7V,KAAKoM,OAAOrJ,KAAK8N,EAAIE,2BAvE1B1N,EAAAA,UAAS1D,KAAA,CAAC,CACTO,SAAU,4BACVqD,KAAM,CAACE,KAAQ,QACfkC,OAAQ,CAAC,2sBAiCThC,SAAU,imCAvCJuS,2CA+DLrV,EAAAA,qBACAA,EAAAA,4BACAA,EAAAA,+BACAA,EAAAA,sBAEAgD,EAAAA,YAvEH,GCAA8a,GAAA,WAqHE,SAAAA,EAAmB7K,GAAA9T,KAAA8T,KAAAA,kBAbNwK,eAIuB,iBAMf,IAAIpd,EAAAA,yBACN,IAAIA,EAAAA,wCA7GxBmC,EAAAA,UAAS1D,KAAA,CAAC,CACTO,SAAU,4BACVqF,gBAAiBC,EAAAA,wBAAwBC,OACzCE,OAAQ,CAAC,w6CA8DThC,SAAU,wjDApEJuS,oCAuGLrV,EAAAA,wBACAA,EAAAA,sBACAA,EAAAA,0BACAA,EAAAA,4BACAA,EAAAA,4BACAA,EAAAA,2BACAA,EAAAA,wBAEAgD,EAAAA,uBACAA,EAAAA,YAnHH,GCIA,SAAA+a,KACE,OAAO,IAAIC,8DAQZnf,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,OAAQmS,WAAY6M,2KAkBE5M,EAAAA,EAAAA,GAC7C6M,EAAAve,UAAAwe,MAAA,SAAMrgB,GACJ,GAAIA,EAAO,CACT,IAAMsgB,EAAYtgB,EAAMugB,OAAOzc,MAAM,KACrC,GAAyB,IAArBwc,EAAUhd,QAAgB7C,EAAS6f,EAAU,IAC/C,MAAO,CAACpO,KAAMnS,EAAUugB,EAAU,IAAKnO,MAAO,KAAMC,IAAK,MACpD,GAAyB,IAArBkO,EAAUhd,QAAgB7C,EAAS6f,EAAU,KAAO7f,EAAS6f,EAAU,IAChF,MAAO,CAACpO,KAAMnS,EAAUugB,EAAU,IAAKnO,MAAOpS,EAAUugB,EAAU,IAAKlO,IAAK,MACvE,GAAyB,IAArBkO,EAAUhd,QAAgB7C,EAAS6f,EAAU,KAAO7f,EAAS6f,EAAU,KAAO7f,EAAS6f,EAAU,IAC1G,MAAO,CAACpO,KAAMnS,EAAUugB,EAAU,IAAKnO,MAAOpS,EAAUugB,EAAU,IAAKlO,IAAKrS,EAAUugB,EAAU,KAGpG,OAAO,MAGTF,EAAAve,UAAA2e,OAAA,SAAOlO,GACL,OAAOA,EACAA,EAAKJ,KAAI,KAAIzR,EAAS6R,EAAKH,OAASpR,EAAUuR,EAAKH,OAAS,IAAE,KAAI1R,EAAS6R,EAAKF,KAAOrR,EAAUuR,EAAKF,KAAO,IAChH,wBAnBPnR,EAAAA,gBAC8Cwf,ICiNzCC,GAAkB,IA9OxB,gCACUC,EAAA9e,UAAA+e,sBAAaC,GAAwB,OAAOC,OAAOC,iBAAiBF,IAEpEF,EAAA9e,UAAAmf,kBAASH,EAAsBI,GAAwB,OAAO1f,KAAKqf,aAAaC,GAASI,IAEzFN,EAAA9e,UAAAqf,4BAAmBL,GACzB,MAA4D,YAApDtf,KAAKyf,SAASH,EAAS,aAAe,WAGxCF,EAAA9e,UAAAsf,sBAAaN,GAGnB,IAFA,IAAIO,EAA8BP,EAAoB,cAAIQ,SAASC,gBAE5DF,GAAkBA,IAAmBC,SAASC,iBAAmB/f,KAAK2f,mBAAmBE,IAC9FA,EAA8BA,EAA2B,aAG3D,OAAOA,GAAkBC,SAASC,iBAGpCX,EAAA9e,UAAA0f,SAAA,SAASV,EAAsBtM,GAC7B,IAAIiN,OADyB,IAAAjN,IAAAA,GAAA,GAE7B,IAAIkN,EAA2B,CAACC,MAAO,EAAGC,OAAQ,EAAGC,IAAK,EAAGC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,GAExF,GAA2C,UAAvCxgB,KAAKyf,SAASH,EAAS,YACzBW,EAAaX,EAAQmB,4BAChB,CACL,IAAMZ,EAAiB7f,KAAK4f,aAAaN,GAEzCW,EAAajgB,KAAK0gB,OAAOpB,GAAS,GAE9BO,IAAmBC,SAASC,kBAC9BG,EAAelgB,KAAK0gB,OAAOb,GAAgB,IAG7CK,EAAaG,KAAOR,EAAec,UACnCT,EAAaK,MAAQV,EAAee,WAetC,OAZAX,EAAWI,KAAOH,EAAaG,IAC/BJ,EAAWK,QAAUJ,EAAaG,IAClCJ,EAAWM,MAAQL,EAAaK,KAChCN,EAAWO,OAASN,EAAaK,KAE7BvN,IACFiN,EAAWI,IAAMrhB,KAAKgU,MAAMiN,EAAWI,KACvCJ,EAAWK,OAASthB,KAAKgU,MAAMiN,EAAWK,QAC1CL,EAAWM,KAAOvhB,KAAKgU,MAAMiN,EAAWM,MACxCN,EAAWO,MAAQxhB,KAAKgU,MAAMiN,EAAWO,QAGpCP,GAGTb,EAAA9e,UAAAogB,OAAA,SAAOpB,EAAsBtM,QAAA,IAAAA,IAAAA,GAAA,GAC3B,IAAM6N,EAAQvB,EAAQmB,wBAChBK,EACCvB,OAAOwB,YAAcjB,SAASC,gBAAgBY,UAD/CG,EAEEvB,OAAOyB,YAAclB,SAASC,gBAAgBa,WAGlDK,EAAW,CACbb,OAAQS,EAAMT,QAAUd,EAAQ4B,aAChCf,MAAOU,EAAMV,OAASb,EAAQ6B,YAC9Bd,IAAKQ,EAAMR,IAAMS,EACjBR,OAAQO,EAAMP,OAASQ,EACvBP,KAAMM,EAAMN,KAAOO,EACnBN,MAAOK,EAAML,MAAQM,GAYvB,OATI9N,IACFiO,EAASb,OAASphB,KAAKgU,MAAMiO,EAASb,QACtCa,EAASd,MAAQnhB,KAAKgU,MAAMiO,EAASd,OACrCc,EAASZ,IAAMrhB,KAAKgU,MAAMiO,EAASZ,KACnCY,EAASX,OAASthB,KAAKgU,MAAMiO,EAASX,QACtCW,EAASV,KAAOvhB,KAAKgU,MAAMiO,EAASV,MACpCU,EAAST,MAAQxhB,KAAKgU,MAAMiO,EAAST,QAGhCS,GAGT7B,EAAA9e,UAAA8gB,iBAAA,SAAiBC,EAA0BC,EAA4BC,EAAmBC,GAExF,IAAMC,EAAiBD,EAAexhB,KAAK0gB,OAAOW,GAAa,GAASrhB,KAAKggB,SAASqB,GAAa,GAC7FK,EAAiB1hB,KAAKqf,aAAaiC,GACnCK,EAAcL,EAAcb,wBAC5BmB,EAAmBL,EAAUhf,MAAM,KAAK,IAAM,MAC9Csf,EAAqBN,EAAUhf,MAAM,KAAK,IAAM,SAElDuf,EAA+B,CACjC1B,OAAUuB,EAAYvB,QAAUkB,EAAcJ,aAC9Cf,MAASwB,EAAYxB,OAASmB,EAAcH,YAC5Cd,IAAO,EACPC,OAAUqB,EAAYvB,QAAUkB,EAAcJ,aAC9CX,KAAQ,EACRC,MAASmB,EAAYxB,OAASmB,EAAcH,aAG9C,OAAQS,GACN,IAAK,MACHE,EAAiBzB,IACboB,EAAepB,KAAOiB,EAAcJ,aAAea,WAAWL,EAAeM,eACjF,MACF,IAAK,SACHF,EAAiBzB,IAAMoB,EAAepB,IAAMoB,EAAerB,OAC3D,MACF,IAAK,OACH0B,EAAiBvB,KACbkB,EAAelB,MAAQe,EAAcH,YAAcY,WAAWL,EAAeO,cACjF,MACF,IAAK,QACHH,EAAiBvB,KAAOkB,EAAelB,KAAOkB,EAAetB,MAIjE,OAAQ0B,GACN,IAAK,MACHC,EAAiBzB,IAAMoB,EAAepB,IACtC,MACF,IAAK,SACHyB,EAAiBzB,IAAMoB,EAAepB,IAAMoB,EAAerB,OAASkB,EAAcJ,aAClF,MACF,IAAK,OACHY,EAAiBvB,KAAOkB,EAAelB,KACvC,MACF,IAAK,QACHuB,EAAiBvB,KAAOkB,EAAelB,KAAOkB,EAAetB,MAAQmB,EAAcH,YACnF,MACF,IAAK,SACsB,QAArBS,GAAmD,WAArBA,EAChCE,EAAiBvB,KAAOkB,EAAelB,KAAOkB,EAAetB,MAAQ,EAAImB,EAAcH,YAAc,EAErGW,EAAiBzB,IAAMoB,EAAepB,IAAMoB,EAAerB,OAAS,EAAIkB,EAAcJ,aAAe,EAU3G,OALAY,EAAiBzB,IAAMrhB,KAAKgU,MAAM8O,EAAiBzB,KACnDyB,EAAiBxB,OAASthB,KAAKgU,MAAM8O,EAAiBxB,QACtDwB,EAAiBvB,KAAOvhB,KAAKgU,MAAM8O,EAAiBvB,MACpDuB,EAAiBtB,MAAQxhB,KAAKgU,MAAM8O,EAAiBtB,OAE9CsB,GAIT1C,EAAA9e,UAAA4hB,uBAAA,SAAuBb,EAA0BC,GAC/C,IAAIa,EAAqC,GACrCC,EAAqBf,EAAYZ,wBACjC4B,EAAuBf,EAAcb,wBACrC6B,EAAOxC,SAASC,gBAChBwC,EAAehD,OAAOiD,aAAeF,EAAKG,aAC1CC,EAAcnD,OAAOoD,YAAcL,EAAKM,YACxCC,EAA8BT,EAAmB7B,KAAO6B,EAAmBjC,MAAQ,EACnF2C,EAA8BV,EAAmB/B,IAAM+B,EAAmBhC,OAAS,EA4CvF,OAxCIiC,EAAqBlC,MAAQiC,EAAmB7B,OAE9CuC,EAA8BT,EAAqBjC,OAAS,GAC5DmC,EAAeO,EAA8BT,EAAqBjC,OAAS,GAC7E+B,EAAoBhO,OAAOgO,EAAoBpgB,OAAQ,EAAG,QAG5D/B,KAAK+iB,kCAAkCX,EAAoBC,EAAsB,OAAQF,IAIvFE,EAAqBjC,OAASgC,EAAmB/B,MAC/CwC,EAA8BR,EAAqBlC,MAAQ,GAC3DuC,EAAcG,EAA8BR,EAAqBlC,MAAQ,GAC3EgC,EAAoBhO,OAAOgO,EAAoBpgB,OAAQ,EAAG,OAE5D/B,KAAKgjB,kCAAkCZ,EAAoBC,EAAsB,MAAOF,IAKtFO,EAAcN,EAAmB5B,MAAQ6B,EAAqBlC,QAE5D2C,EAA8BT,EAAqBjC,OAAS,GAC5DmC,EAAeO,EAA8BT,EAAqBjC,OAAS,GAC7E+B,EAAoBhO,OAAOgO,EAAoBpgB,OAAQ,EAAG,SAG5D/B,KAAK+iB,kCAAkCX,EAAoBC,EAAsB,QAASF,IAIxFI,EAAeH,EAAmB9B,OAAS+B,EAAqBjC,SAC9DyC,EAA8BR,EAAqBlC,MAAQ,GAC3DuC,EAAcG,EAA8BR,EAAqBlC,MAAQ,GAC3EgC,EAAoBhO,OAAOgO,EAAoBpgB,OAAQ,EAAG,UAE5D/B,KAAKgjB,kCAAkCZ,EAAoBC,EAAsB,SAAUF,IAGtFA,GAQD/C,EAAA9e,UAAAyiB,2CACJX,EAAgCC,EAAkCY,EAClEC,GACF,IAAIZ,EAAOxC,SAASC,gBAEhBsC,EAAqBjC,QAAUgC,EAAmB9B,QACpD4C,EAAsB/O,OAAO+O,EAAsBnhB,OAAQ,EAAGkhB,EAAmB,YAE9E1D,OAAOiD,aAAeF,EAAKG,cAAgBL,EAAmB/B,KAAOgC,EAAqBjC,QAC7F8C,EAAsB/O,OAAO+O,EAAsBnhB,OAAQ,EAAGkhB,EAAmB,SAS7E7D,EAAA9e,UAAA0iB,2CACJZ,EAAgCC,EAAkCY,EAClEC,GACF,IAAIZ,EAAOxC,SAASC,iBAEfR,OAAOoD,YAAcL,EAAKM,aAAeR,EAAmB7B,MAAQ8B,EAAqBlC,OAC5F+C,EAAsB/O,OAAO+O,EAAsBnhB,OAAQ,EAAGkhB,EAAmB,SAE/EZ,EAAqBlC,OAASiC,EAAmB5B,OACnD0C,EAAsB/O,OAAO+O,EAAsBnhB,OAAQ,EAAGkhB,EAAmB,aAzOvF,IA0PA,SAAA7B,GACIC,EAA0BC,EAA4BC,EACtDC,GACF,IAAI2B,EAAkChU,MAAMiU,QAAQ7B,GAAaA,EAAY,CAAA,GAGzE8B,EAAUF,EAAc7O,UAAU,SAAAgP,GAAO,MAAQ,SAARA,IAC9B,GAAXD,GACF,CAAC,MAAO,SAAU,OAAQ,QAAS,WAAY,YAAa,cAAe,eAAgB,WAC1F,cAAe,YAAa,gBAC3BphB,QAAQ,SAASshB,GAC8C,MAA3DJ,EAAclgB,KAAK,SAAAqgB,GAAO,OAA2B,IAA3BA,EAAIE,OAAO,IAAMD,MAC7CJ,EAAchP,OAAOkP,IAAW,EAAC,KAMvC,IACII,MADAC,EAAS,EAAGC,EAAU,EAGtBxB,EAAsBhD,GAAgB+C,uBAAuBb,EAAaC,cAEnEsC,EAAM1M,GAGf,GAAsD,MAAjDiL,EAAoBlf,KAAK,SAAAqgB,GAAO,OAAAA,IAAQM,KAAmBT,EAAcphB,SAAWmV,EAAQ,EAAI,CACnGuM,EAAgB,EAChB,IAAMI,EAAM1E,GAAgBiC,iBAAiBC,EAAaC,EAAesC,EAAMpC,UAC/EkC,EAASG,EAAIxD,IACbsD,EAAUE,EAAItD,mBAPlB,IAA4B,IAAAuD,Ef3O9B,SAAAC,EAkEyBrU,GACrB,IAAIE,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UAAWG,EAAI,EAChE,OAAIL,EAAUA,EAAEM,KAAKR,GACd,CACH7D,KAAM,WAEF,OADI6D,GAAKO,GAAKP,EAAE3N,SAAQ2N,OAAI,GACrB,CAAEjR,MAAOiR,GAAKA,EAAEO,KAAMG,MAAOV,KemKlBsU,CAiB9B,SAAAC,EAA0BC,GACxB,OAAOA,EAAE9gB,IAAI,SAACwgB,EAAM1M,GAAU,MAAA,CAAE0M,KAAIA,EAAE1M,MAAKA,KAlBf+M,CAAcd,IAAcgB,EAAAL,EAAAjY,QAAAsY,EAAA/T,KAAA+T,EAAAL,EAAAjY,OAAA,8BAA7CuY,EAAAR,KAAMQ,EAAAlN,kHAajB,OAFAoK,EAAc+C,MAAMhE,IAASqD,EAAM,KACnCpC,EAAc+C,MAAM9D,KAAUoD,EAAO,KAC9BF,EC5RT,IAAMa,GAA8B,CAClC,UAAW,yBAA0B,6CAA8C,yBACnF,2BAA4B,oBAAqB,mCACjDC,KAAK,MAmBP,IAAaC,GAAe,SAAClF,EAAsBmF,GAEjD,IAAMC,EACFC,EAAAA,UAAsBrF,EAAS,WAAWhU,KAAKG,EAAAA,UAAUgZ,GAAiBrhB,EAAAA,IAAI,SAAA4M,GAAK,OAAAA,EAAEzI,UAGzFod,EAAAA,UAAyBrF,EAAS,WAC7BhU,KAAKG,EAAAA,UAAUgZ,GAAiBthB,EAAAA,OAAO,SAAA6M,GAAK,OAAAA,EAAE6L,QAAUD,GAAIrB,MAAMqK,EAAAA,eAAeF,IACjF/Y,UAAU,SAACmY,OAAAK,EAAA1U,EAAAqU,EAAA,GAACe,EAAAV,EAAA,GAAUW,EAAAX,EAAA,GACrBC,EAAA3U,EAvBR,SAAAsV,EAAsCzF,GACpC,IAAM0F,EAAgC1F,EAAQ2F,iBAAiBX,IAC/D,MAAO,CAACU,EAAK,GAAIA,EAAKA,EAAKjjB,OAAS,IAqB9BgjB,CAAAzF,GAAA,GAAM5e,EAAA0jB,EAAA,GAAOc,EAAAd,EAAA,GAETU,IAAmBpkB,GAASmkB,EAAS/I,WACvCoJ,EAAKrM,QACLgM,EAAS7hB,kBAGP8hB,IAAmBI,GAASL,EAAS/I,WACvCpb,EAAMmY,QACNgM,EAAS7hB,oBAKjB2hB,EAAAA,UAAUrF,EAAS,SACdhU,KAAKG,EAAAA,UAAUgZ,GAAiBG,EAAAA,eAAeF,GAAsBthB,EAAAA,IAAI,SAAA+hB,GAAG,OAAIA,EAAI,MACpFxZ,UAAU,SAAAyZ,GAAsB,OAAAA,EAAmBvM,WCdpD0D,GAAgC,CACpChW,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAA2e,KAC9Bze,OAAO,GAGH0e,GAA2B,CAC/B/e,QAASgf,EAAAA,cACT9e,YAAaC,EAAAA,WAAW,WAAM,OAAA2e,KAC9Bze,OAAO,iBA+IP,SAAAye,EACYG,EAAkDC,EAClDC,EAAkClhB,EAA8BmhB,EAChElb,EAAyB2Q,EAAwCtD,EACjE8N,EAA6DC,GAJzE,IAAA/jB,EAAA9B,KACYA,KAAAwlB,iBAAAA,EAAkDxlB,KAAAylB,OAAAA,EAClDzlB,KAAA0lB,OAAAA,EAAkC1lB,KAAAwE,UAAAA,EAA8BxE,KAAA2lB,KAAAA,EAChE3lB,KAAAyK,QAAAA,EAAyBzK,KAAAob,SAAAA,EAAwCpb,KAAA8X,UAAAA,EACjE9X,KAAA4lB,aAAAA,EAA6D5lB,KAAA6lB,UAAAA,gBA/HtD,IAAIlb,EAAAA,mBACsB,qBACzB,kBAaiC,iBAmDhB,8BAgCd,IAAIzJ,EAAAA,2BAMN,IAAIA,EAAAA,4BAcL,SAAC4F,qBACA,mCACM,aAQzB9G,KAAK8lB,kBAAoBrb,EAAQ8S,SAAS5R,UAAU,WAC9C7J,EAAKikB,OACP3E,GACItf,EAAK2jB,OAAOvgB,cAAepD,EAAKikB,MAAMC,SAAS9gB,cAAepD,EAAKyf,UAA8B,SAAnBzf,EAAKmkB,oBAzB7Flf,OAAAC,eACIqe,EAAA/kB,UAAA,WAAQ,KADZ,WAEE,OAAON,KAAK6I,eAEd,SAAapK,GACXuB,KAAK6I,UAAsB,KAAVpK,GAAiBA,GAAmB,UAAVA,EAEvCuB,KAAKsC,UACPtC,KAAK+lB,MAAMG,SAASle,iBAAiBhI,KAAK6I,4CAsB9Cwc,EAAA/kB,UAAAuH,iBAAA,SAAiBC,GAAiC9H,KAAKmmB,UAAYre,GAEnEud,EAAA/kB,UAAAyH,kBAAA,SAAkBD,GAAuB9H,KAAKomB,WAAate,GAE3Dud,EAAA/kB,UAAA+lB,0BAAA,SAA0Bve,GAAwB9H,KAAKsmB,iBAAmBxe,GAE1Eud,EAAA/kB,UAAA0H,iBAAA,SAAiBC,GAA6BjI,KAAKwC,SAAWyF,GAE9Dod,EAAA/kB,UAAAimB,SAAA,SAASC,GACP,IAAM/nB,EAAQ+nB,EAAE/nB,MAEhB,GAAc,OAAVA,GAAkBA,IAAUG,UAC9B,OAAO,KAGT,IAAMya,EAAUrZ,KAAKymB,gBAAgBzmB,KAAK4lB,aAAaxJ,UAAU3d,IAEjE,OAAKuB,KAAK8X,UAAU5E,QAAQmG,GAIxBrZ,KAAKuT,SAAW8F,EAAQnI,OAAOR,EAAQI,KAAK9Q,KAAKuT,UAC5C,CAAC8F,QAAW,CAACqN,eAAgB1mB,KAAKuT,UAGvCvT,KAAKwT,SAAW6F,EAAQlI,MAAMT,EAAQI,KAAK9Q,KAAKwT,UAC3C,CAAC6F,QAAW,CAACsN,cAAe3mB,KAAKwT,eAD1C,EAPS,CAAC6F,QAAW,CAACuN,QAASJ,EAAE/nB,SAYnC4mB,EAAA/kB,UAAAsH,WAAA,SAAWnJ,GACTuB,KAAK6mB,OAAS7mB,KAAKymB,gBAAgBzmB,KAAK4lB,aAAaxJ,UAAU3d,IAC/DuB,KAAK8mB,iBAAiB9mB,KAAK6mB,SAG7BxB,EAAA/kB,UAAAymB,iBAAA,SAAiBtoB,EAAeuoB,QAAA,IAAAA,IAAAA,GAAA,GAC9BhnB,KAAK6mB,OAAS7mB,KAAKymB,gBAAgBzmB,KAAKwlB,iBAAiB1G,MAAMrgB,IAC/DuB,KAAKmmB,UAAUnmB,KAAK6mB,OAAS7mB,KAAK4lB,aAAavJ,QAAQrc,KAAK6mB,QAAqB,KAAVpoB,EAAe,KAAOA,GACzFuoB,GAAchnB,KAAK6mB,QACrB7mB,KAAK8mB,iBAAiB9mB,KAAK6mB,SAI/BxB,EAAA/kB,UAAAgC,OAAA,WAAW,QAAStC,KAAK+lB,OAKzBV,EAAA/kB,UAAA4Y,KAAA,WAAA,IAAApX,EAAA9B,KACE,IAAKA,KAAKsC,SAAU,CAClB,IAAM2kB,EAAKjnB,KAAK2lB,KAAKuB,wBAAwB1K,IAC7Cxc,KAAK+lB,MAAQ/lB,KAAK0lB,OAAOyB,gBAAgBF,GAEzCjnB,KAAKonB,mBAAmBpnB,KAAK+lB,MAAMC,SAAS9gB,eAC5ClF,KAAKqnB,uBAAuBrnB,KAAK+lB,MAAMG,UACvClmB,KAAKsnB,+BAA+BtnB,KAAK+lB,MAAMG,UAC/ClmB,KAAK+lB,MAAMG,SAAS5gB,WACpBtF,KAAK+lB,MAAMG,SAASte,WAAW5H,KAAK4lB,aAAavJ,QAAQrc,KAAK6mB,SAG9D7mB,KAAK+lB,MAAMG,SAASre,iBAAiB,SAACyQ,GACpCxW,EAAK8F,WAAW0Q,GAChBxW,EAAKqkB,UAAU7N,KAGjBtY,KAAK+lB,MAAMwB,kBAAkBzb,gBAE7B9L,KAAK+lB,MAAMG,SAASle,iBAAiBhI,KAAKwC,UAEnB,SAAnBxC,KAAKimB,WACP1G,OAAOO,SAASnC,cAAc3d,KAAKimB,WAAWuB,YAAYxnB,KAAK+lB,MAAMC,SAAS9gB,eAIhFsf,GAAaxkB,KAAK+lB,MAAMC,SAAS9gB,cAAelF,KAAKynB,UAErDznB,KAAK+lB,MAAMG,SAASrN,QAGpB7Y,KAAKyK,QAAQW,kBAAkB,WAE7B,IAGIsc,EAHEC,EAAWhD,EAAAA,UAAyB7iB,EAAK+jB,UAAW,SACpCva,KAAKG,EAAAA,UAAU3J,EAAK2lB,UAAWtkB,EAAAA,OAAO,SAAA6M,GAAK,OAAAA,EAAE6L,QAAUD,GAAInB,UAGjF,IAAuB,IAAnB3Y,EAAK8lB,WAAyC,YAAnB9lB,EAAK8lB,UAAyB,CAG3D,IAAIC,GAAY,EAChBC,sBAAsB,WAAM,OAAAD,GAAY,IAExCH,EACI/C,EAAAA,UAAsB7iB,EAAK+jB,UAAW,SACjCva,KACGG,EAAAA,UAAU3J,EAAK2lB,UAAWtkB,EAAAA,OAAO,SAAAwY,GAAS,OAACkM,GAAa/lB,EAAKimB,2BAA2BpM,WAEpG+L,EAAiBM,EAAAA,MAGnBC,EAAAA,KAAY,CAACN,EAAUD,IAAiB/b,UAAU,WAAM,OAAA7J,EAAK2I,QAAQmB,IAAI,WAAM,OAAA9J,EAAK8C,gBAQ1FygB,EAAA/kB,UAAAsE,MAAA,WACM5E,KAAKsC,WACPtC,KAAK0lB,OAAOwC,OAAOloB,KAAK0lB,OAAOjkB,QAAQzB,KAAK+lB,MAAMoC,WAClDnoB,KAAK+lB,MAAQ,KACb/lB,KAAKynB,SAAS5b,SAOlBwZ,EAAA/kB,UAAA+B,OAAA,WACMrC,KAAKsC,SACPtC,KAAK4E,QAEL5E,KAAKkZ,QAUTmM,EAAA/kB,UAAAsd,WAAA,SAAW7M,GACL/Q,KAAKsC,UACPtC,KAAK+lB,MAAMG,SAAStI,WAAW7M,IAInCsU,EAAA/kB,UAAA8nB,OAAA,WAAWpoB,KAAKomB,cAEhBf,EAAA/kB,UAAAuE,YAAA,SAAYC,IACNA,EAAiB,SAAKA,EAAiB,UACzC9E,KAAKsmB,oBAITjB,EAAA/kB,UAAA2J,YAAA,WACEjK,KAAK4E,QACL5E,KAAK8lB,kBAAkB7H,eAGjBoH,EAAA/kB,UAAA+mB,gCAAuBgB,cAC7B,CAAC,cAAe,gBAAiB,iBAAkB,eAAgB,UAAW,UAAW,aACxF,cAAe,iBAAkB,eAAgB,mBAC7CpmB,QAAQ,SAACqmB,GACJxmB,EAAKwmB,KAAgB1pB,YACvBypB,EAAmBC,GAAcxmB,EAAKwmB,MAG9CD,EAAmB3O,UAAY1Z,KAAK0Z,WAAa1Z,KAAK6mB,QAGhDxB,EAAA/kB,UAAA8mB,4BAAmBliB,GACzBlF,KAAKwE,UAAUY,SAASF,EAAe,iBACvClF,KAAKwE,UAAU+jB,SAASrjB,EAAe,UAAW,KAClDlF,KAAKwE,UAAUY,SAASF,EAAe,SAGjCmgB,EAAA/kB,UAAAynB,oCAA2BpM,GACjC,OAAQ,CAAC3b,KAAKylB,OAAOvgB,cAAelF,KAAK+lB,MAAMC,SAAS9gB,eAAesjB,KAAK,SAAAC,GAAM,OAAAA,EAAGC,SAAS/M,EAAMpU,WAG9F8d,EAAA/kB,UAAAgnB,wCAA+Be,cACrCA,EAAmBhL,SAAS1R,UAAU,SAAAoF,GAAQ,OAAAjP,EAAKub,SAASta,KAAKgO,KACjEsX,EAAmBjc,OAAOT,UAAU,SAAAoF,GAClCjP,EAAK6mB,WAAW5lB,KAAKgO,IACE,IAAnBjP,EAAK8lB,WAAyC,WAAnB9lB,EAAK8lB,WAClC9lB,EAAK8C,WAKHygB,EAAA/kB,UAAAwmB,0BAAiBtO,GACvBxY,KAAKwE,UAAUsF,YAAY9J,KAAKylB,OAAOvgB,cAAe,QAASlF,KAAKwlB,iBAAiBvG,OAAOzG,IACxFxY,KAAKsC,WACPtC,KAAK+lB,MAAMG,SAASte,WAAW5H,KAAK4lB,aAAavJ,QAAQ7D,IACzDxY,KAAKomB,eAIDf,EAAA/kB,UAAAmmB,yBAAgB1V,GACtB,IAAMsI,EAAUtI,EAAO,IAAIL,EAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAAO,KACtE,OAAO7Q,KAAK8X,UAAU5E,QAAQmG,GAAWA,EAAU,0BArVtDpZ,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,uBACVoD,SAAU,gBACVC,KAAM,CACJqlB,UAAW,wCACXtgB,WAAY,8CACZE,SAAU,WACVH,aAAc,YAEhBI,UAAW,CAAC8T,GAA+B+I,GAA0BzN,iDAtC/DqH,UApBNpZ,EAAAA,kBACA+iB,EAAAA,wBACAhjB,EAAAA,iBACAijB,EAAAA,gCACAxa,EAAAA,cAwBMuJ,UADA1E,SADAmJ,sCAmK0ClO,EAAAA,OAAMzO,KAAA,CAACopB,EAAAA,kDAhHtDloB,EAAAA,2BAKAA,EAAAA,6BAKAA,EAAAA,8BAKAA,EAAAA,4BAMAA,EAAAA,uBAKAA,EAAAA,uBAKAA,EAAAA,0BAMAA,EAAAA,2BAMAA,EAAAA,yBAQAA,EAAAA,4BAKAA,EAAAA,+BAKAA,EAAAA,yBAQAA,EAAAA,yBAMAA,EAAAA,0BAQAgD,EAAAA,yBAMAA,EAAAA,yBAEAhD,EAAAA,cC5KHmoB,GAAA,WAqCE,SAAAA,EAAmBlV,GAAA9T,KAAA8T,KAAAA,SAEnBkV,EAAA1oB,UAAA2oB,QAAA,WAAY,OAAQjpB,KAAK2V,WAAa3V,KAAK+Q,KAAKH,QAAU5Q,KAAK0V,cAAgB1V,KAAKwC,+BAnCrFa,EAAAA,UAAS1D,KAAA,CAAC,CACTO,SAAU,yBACVqF,gBAAiBC,EAAAA,wBAAwBC,OACzCE,OAAQ,CAAC,0OAaTpC,KAAM,CACJC,QAAS,YACT0lB,qBAAsB,WACtBC,qBAAsB,WACtBC,qBAAsB,YACtBC,kBAAmB,YACnBljB,iBAAkB,WAEpBxC,SAAU,+EA1BJuS,4CA6BLrV,EAAAA,oBACAA,EAAAA,wBACAA,EAAAA,uBACAA,EAAAA,wBACAA,EAAAA,WAnCH,GCAAyoB,GAAA,WAgDE,SAAAA,EAAmBxV,GAAA9T,KAAA8T,KAAAA,cAFA,IAAI5S,EAAAA,oBAIvBooB,EAAAhpB,UAAAipB,YAAA,SAAY3Y,GAAiB5Q,KAAKoM,OAAOrJ,KAAK,IAAI2N,EAAQ1Q,KAAK+Q,KAAKJ,KAAMnS,EAAUoS,GAAQ,KAE5F0Y,EAAAhpB,UAAAkpB,WAAA,SAAW7Y,GAAgB3Q,KAAKoM,OAAOrJ,KAAK,IAAI2N,EAAQlS,EAAUmS,GAAO3Q,KAAK+Q,KAAKH,MAAO,yBA/C3FvN,EAAAA,UAAS1D,KAAA,CAAC,CACTO,SAAU,mCACVqF,gBAAiBC,EAAAA,wBAAwBC,OACzCE,OAAQ,CAAC,mNAWThC,SAAU,u7BAhBJuS,oCAsCLrV,EAAAA,wBACAA,EAAAA,sBACAA,EAAAA,qBACAA,EAAAA,sBAEAgD,EAAAA,YA9CH,qFCM+CmO,EAAAA,EAAAA,GAmB7CyX,EAAAnpB,UAAA2R,eAAA,WAAmB,OAAO,GAE1BwX,EAAAnpB,UAAA4R,UAAA,WAAc,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,KAEzDuX,EAAAnpB,UAAA6R,iBAAA,WAAqB,OAAO,GAE5BsX,EAAAnpB,UAAA8R,QAAA,SAAQrB,EAAesB,EAAyBC,GAG9C,YAHqB,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAC9CvB,EAAO,IAAIL,EAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAEvCwB,GACN,IAAK,IAIH,OAHAtB,EAAO/Q,KAAK0pB,SAAS3Y,EAAMA,EAAKJ,KAAO2B,IAClC1B,MAAQ,EACbG,EAAKF,IAAM,EACJE,EACT,IAAK,IAGH,OAFAA,EAAO/Q,KAAK2pB,UAAU5Y,EAAMA,EAAKH,MAAQ0B,IACpCzB,IAAM,EACJE,EACT,IAAK,IACH,OAAO/Q,KAAK4pB,QAAQ7Y,EAAMA,EAAKF,IAAMyB,GACvC,QACE,OAAOvB,IAIb0Y,EAAAnpB,UAAAkS,QAAA,SAAQzB,EAAesB,EAAyBC,GAAc,YAAvC,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAAqBtS,KAAKoS,QAAQrB,EAAMsB,GAASC,IAEjGmX,EAAAnpB,UAAAmS,WAAA,SAAW1B,GACT,IAAMF,EAAM7Q,KAAK6pB,YAAY9Y,GAAM2B,SAEnC,OAAe,IAAR7B,EAAY,EAAIA,GAGzB4Y,EAAAnpB,UAAAqS,cAAA,SAAcC,EAAiBC,GAEN,IAAnBA,IACFA,EAAiB,GAGnB,IACM9B,EAAO6B,GADU,GAAQC,GAAkB,GAG3CxB,EAASrR,KAAK6pB,YAAY9Y,GAChCM,EAAOkB,QAAQlB,EAAOG,UAAY,GAAKH,EAAOqB,UAAY,IAC1D,IAAMI,EAAOzB,EAAOM,UACdmY,EAAU9pB,KAAK6pB,YAAY,IAAInZ,EAAQK,EAAKJ,KAAM,EAAG,IAC3D,OAAO3R,KAAKM,MAAMN,KAAKgU,OAAOF,EAAOgX,EAAQnY,WAAa,OAAY,GAAK,GAG7E8X,EAAAnpB,UAAA2S,SAAA,WAAsB,OAAOjT,KAAK+pB,cAAc,IAAIrY,OAGpD+X,EAAAnpB,UAAA4S,QAAA,SAAQnC,GACN,OAAOA,GAAQ7R,EAAS6R,EAAKJ,OAASzR,EAAS6R,EAAKH,QAAU1R,EAAS6R,EAAKF,OACvE1R,MAAMa,KAAK6pB,YAAY9Y,GAAMY,YAG5B8X,EAAAnpB,UAAAspB,iBAAQ7Y,EAAeF,GAC7BA,GAAOA,EACP,IAAImZ,EAAQhqB,KAAKiqB,gBAAgBlZ,EAAKH,MAAOG,EAAKJ,MAClD,GAAIE,GAAO,EACT,KAAOA,GAAO,GACZE,EAAO/Q,KAAK2pB,UAAU5Y,EAAMA,EAAKH,MAAQ,GAEzCC,GADAmZ,EAAQhqB,KAAKiqB,gBAAgBlZ,EAAKH,MAAOG,EAAKJ,WAG3C,GAAUqZ,EAANnZ,EACT,KAAamZ,EAANnZ,GACLA,GAAOmZ,EACPjZ,EAAO/Q,KAAK2pB,UAAU5Y,EAAMA,EAAKH,MAAQ,GACzCoZ,EAAQhqB,KAAKiqB,gBAAgBlZ,EAAKH,MAAOG,EAAKJ,MAIlD,OADAI,EAAKF,IAAMA,EACJE,GAGD0Y,EAAAnpB,UAAAqpB,mBAAU5Y,EAAeH,GAI/B,OAHAA,GAASA,EACTG,EAAKJ,KAAOI,EAAKJ,KAAO3R,KAAKM,OAAOsR,EAAQ,GAAK,IACjDG,EAAKH,MAAQ5R,KAAKM,QAAQsR,EAAQ,GAAK,GAAK,IAAM,IAAM,EACjDG,GAGD0Y,EAAAnpB,UAAAopB,kBAAS3Y,EAAeJ,GAE9B,OADAI,EAAKJ,MAAQA,EACNI,uBA3GVrR,EAAAA,gBAC8CyT,GCQ/C,SAAA+W,GAA6BC,GAC3B,IAAMxZ,EAAOwZ,EAAM7Y,cACnB,OAAOX,EAAO,GAAM,GAAKA,EAAO,KAAQ,GAAKA,EAAO,KAAQ,EAoB9D,SAAAyZ,GAAalG,EAAWlV,GACtB,OAAOkV,EAAIlV,EAAIhQ,KAAKM,MAAM4kB,EAAIlV,GAYhC,IAAMqb,GAAkB,UAClBC,GAAgB,4FAGuBtY,EAAAA,EAAAA,GAK3CuY,EAAAjqB,UAAAypB,cAAA,SAAcI,GACZ,IAAMK,EAAQL,EAAM7Y,cAAemZ,EAASN,EAAM5Y,WAAYmZ,EAAOP,EAAM3Y,UAEvEmZ,EAAYN,GAAkB,EAAI,KAAOG,EAAQ,GAAKxrB,KAAKM,OAAOkrB,EAAQ,GAAK,IAC9ExrB,KAAKM,OAAOkrB,EAAQ,GAAK,KAAOxrB,KAAKM,OAAOkrB,EAAQ,GAAK,KAC1DxrB,KAAKM,OACA,KAAOmrB,EAAS,GAAK,KAAO,IAAMA,EAAS,GAAK,EAAI,EAAIP,GAAoBC,IAAU,GAAK,GAAKO,GAGnGzV,GAFN0V,EAAY3rB,KAAKM,MAAMqrB,GAAa,IAEXL,GACnBM,EAAQ5rB,KAAKM,OAAO,GAAK2V,EAAO,OAAS,OAC3C4V,EAAS7rB,KAAK8rB,MAAM7V,EAAO,GArCnC,SAAA8V,EAA6Bpa,GAC3B,OAAoB,KAAZA,EAAO,GAAW3R,KAAKM,OAAO,EAAI,GAAKqR,GAAQ,IAoCjBoa,CAAoBH,IAAU,MAClEC,EAAS7rB,KAAKD,IAAI8rB,EAAQ,IAC1B,IAAMG,EAAOhsB,KAAK8rB,KAAK7V,EA/C3B,SAAAgW,EAA8BL,EAAeC,GAC3C,OAAO7rB,KAAK8rB,KAAK,KAAOD,GAAwB,KAAbD,EAAQ,GAAW5rB,KAAKM,OAAO,EAAI,GAAKsrB,GAAS,IA8CpDK,CAAqBL,EAAOC,IAAW,EACrE,OAAO,IAAIna,EAAQka,EAAOC,EAAS,EAAGG,IAOxCT,EAAAjqB,UAAAupB,YAAA,SAAYqB,GACV,IAAMN,EAAQM,EAAMva,KACdka,EAASK,EAAMta,MAAQ,EAEvB+Z,EADOO,EAAMra,IAER7R,KAAK8rB,KAAK,KAAOD,GAAwB,KAAbD,EAAQ,GAAW5rB,KAAKM,OAAO,EAAI,GAAKsrB,GAAS,IAAMN,GAAgB,EAExGa,EAAMnsB,KAAKM,MAAMqrB,EAAY,IAAO,GAAKS,EAASD,EAAMd,GACxDgB,EAAarsB,KAAKM,MAAM8rB,EAAS,QAASE,EAAMlB,GAAIgB,EAAQ,QAASG,EAAOvsB,KAAKM,MAAMgsB,EAAM,OAC7FE,EAAQpB,GAAIkB,EAAK,OAAQG,EAAOzsB,KAAKM,MAAMksB,EAAQ,MAAOE,EAAQtB,GAAIoB,EAAO,MAC7EG,EAAS3sB,KAAKM,MAAMosB,EAAQ,KAC9B/a,EAAoB,IAAb0a,EAA0B,IAAPE,EAAoB,EAAPE,EAAWE,EACvC,IAATJ,GAAyB,IAAXI,GAClBhb,IAGF,IAGMib,EAAUT,GAHGd,GAAkB,KAAO1Z,EAAO,GAAK3R,KAAKM,OAAOqR,EAAO,GAAK,GAAK3R,KAAKM,OAAOqR,EAAO,GAAK,KACzG3R,KAAKM,OAAOqR,EAAO,GAAK,MAOtBkb,EAAUV,EAHJd,GAAkB,EAAI,KAAO1Z,EAAO,GAAK3R,KAAKM,OAAOqR,EAAO,GAAK,GAAK3R,KAAKM,OAAOqR,EAAO,GAAK,KACtG3R,KAAKM,OAAOqR,EAAO,GAAK,KAAO3R,KAAKM,MAAM,IAAM,IAAM4qB,GAAoB,IAAIxY,KAAKf,EAAM,EAAG,KAAO,GAAK,GAAK,GAErF,EAAIuZ,GAAoB,IAAIxY,KAAKf,EAAM,EAAG,IAAM,EAAI,EAE1EC,EAAQ5R,KAAKM,OAA6B,IAArBssB,EAAUC,GAAgB,KAAO,KACtDC,EAAOzB,GAAkB,EAAI,KAAO1Z,EAAO,GAAK3R,KAAKM,OAAOqR,EAAO,GAAK,GAAK3R,KAAKM,OAAOqR,EAAO,GAAK,KACvG3R,KAAKM,OAAOqR,EAAO,GAAK,KACxB3R,KAAKM,OACA,IAAMsR,EAAQ,KAAO,IAAMA,GAAS,EAAI,EAAIsZ,GAAoB,IAAIxY,KAAKf,EAAMC,EAAQ,EAAG,KAAO,GAAK,GACvG,GAIR,OAAO,IAAIc,KAAKf,EAAMC,EAAQ,EAFlBua,EAAMW,EAAO,IAU3BvB,EAAAjqB,UAAA2pB,gBAAA,SAAgBrZ,EAAeD,GAC7BA,GAAc3R,KAAKM,MAAMsR,EAAQ,IAEjC,IAAI7O,EAAS,IADb6O,GAAUA,EAAQ,GAAK,GAAM,GACH,EAI1B,OAHc,KAAVA,GAvHR,SAAAmb,EAA2BnB,GACzB,OAAQ,GAAK,GAAKA,GAAS,GAAK,GAsHVmB,CAAkBpb,IACpC5O,IAEKA,uBA7EVrC,EAAAA,gBAC4C+pB,IC1CvCuC,GAAuB,IAAIta,KAAK,KAAM,GAAI,IAC1Cua,GAAsB,IAAIva,KAAK,KAAM,GAAI,IACzCwa,GAAc,KAIdC,GAAe,CAEnB,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAg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","sourcesContent":["export function toInteger(value: any): number {\r\n  return parseInt(`${value}`, 10);\r\n}\r\n\r\nexport function toString(value: any): string {\r\n  return (value !== undefined && value !== null) ? `${value}` : '';\r\n}\r\n\r\nexport function getValueInRange(value: number, max: number, min = 0): number {\r\n  return Math.max(Math.min(value, max), min);\r\n}\r\n\r\nexport function isString(value: any): value is string {\r\n  return typeof value === 'string';\r\n}\r\n\r\nexport function isNumber(value: any): value is number {\r\n  return !isNaN(toInteger(value));\r\n}\r\n\r\nexport function isInteger(value: any): value is number {\r\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n}\r\n\r\nexport function isDefined(value: any): boolean {\r\n  return value !== undefined && value !== null;\r\n}\r\n\r\nexport function padNumber(value: number) {\r\n  if (isNumber(value)) {\r\n    return `0${value}`.slice(-2);\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\nexport function regExpEscape(text) {\r\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Configuration service for the NgbAccordion component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the accordions used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbAccordionConfig {\r\n  closeOthers = false;\r\n  type: string;\r\n}\r\n","import {\r\n  AfterContentChecked,\r\n  Component,\r\n  ContentChildren,\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef\r\n} from '@angular/core';\r\n\r\nimport {isString} from '../util/util';\r\n\r\nimport {NgbAccordionConfig} from './accordion-config';\r\n\r\nlet nextId = 0;\r\n\r\n/**\r\n * This directive should be used to wrap accordion panel titles that need to contain HTML markup or other directives.\r\n */\r\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\r\nexport class NgbPanelTitle {\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n\r\n/**\r\n * This directive must be used to wrap accordion panel content.\r\n */\r\n@Directive({selector: 'ng-template[ngbPanelContent]'})\r\nexport class NgbPanelContent {\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n\r\n/**\r\n * The NgbPanel directive represents an individual panel with the title and collapsible\r\n * content\r\n */\r\n@Directive({selector: 'ngb-panel'})\r\nexport class NgbPanel implements AfterContentChecked {\r\n  /**\r\n   *  A flag determining whether the panel is disabled or not.\r\n   *  When disabled, the panel cannot be toggled.\r\n   */\r\n  @Input() disabled = false;\r\n\r\n  /**\r\n   *  An optional id for the panel. The id should be unique.\r\n   *  If not provided, it will be auto-generated.\r\n   */\r\n  @Input() id = `ngb-panel-${nextId++}`;\r\n\r\n  /**\r\n   * A flag telling if the panel is currently open\r\n   */\r\n  isOpen = false;\r\n\r\n  /**\r\n   *  The title for the panel.\r\n   */\r\n  @Input() title: string;\r\n\r\n  /**\r\n   *  Accordion's types of panels to be applied per panel basis.\r\n   *  Bootstrap recognizes the following types: \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\"\r\n   * and \"dark\"\r\n   */\r\n  @Input() type: string;\r\n\r\n  titleTpl: NgbPanelTitle | null;\r\n  contentTpl: NgbPanelContent | null;\r\n\r\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\r\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\r\n\r\n  ngAfterContentChecked() {\r\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\r\n    // only @ContentChildren allows us to specify the {descendants: false} option.\r\n    // Without {descendants: false} we are hitting bugs described in:\r\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\r\n    this.titleTpl = this.titleTpls.first;\r\n    this.contentTpl = this.contentTpls.first;\r\n  }\r\n}\r\n\r\n/**\r\n * The payload of the change event fired right before toggling an accordion panel\r\n */\r\nexport interface NgbPanelChangeEvent {\r\n  /**\r\n   * Id of the accordion panel that is toggled\r\n   */\r\n  panelId: string;\r\n\r\n  /**\r\n   * Whether the panel will be opened (true) or closed (false)\r\n   */\r\n  nextState: boolean;\r\n\r\n  /**\r\n   * Function that will prevent panel toggling if called\r\n   */\r\n  preventDefault: () => void;\r\n}\r\n\r\n/**\r\n * The NgbAccordion directive is a collection of panels.\r\n * It can assure that only one panel can be opened at a time.\r\n */\r\n@Component({\r\n  selector: 'ngb-accordion',\r\n  exportAs: 'ngbAccordion',\r\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\r\n  template: `\r\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\r\n      <div class=\"card\">\r\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\r\n          <h5 class=\"mb-0\">\r\n            <button class=\"btn btn-link\" (click)=\"!!toggle(panel.id)\" [disabled]=\"panel.disabled\" [class.collapsed]=\"!panel.isOpen\"\r\n              [attr.aria-expanded]=\"panel.isOpen\" [attr.aria-controls]=\"panel.id\">\r\n              {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\r\n            </button>\r\n          </h5>\r\n        </div>\r\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\r\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\r\n          <div class=\"card-body\">\r\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  `\r\n})\r\nexport class NgbAccordion implements AfterContentChecked {\r\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\r\n\r\n  /**\r\n   * An array or comma separated strings of panel identifiers that should be opened\r\n   */\r\n  @Input() activeIds: string | string[] = [];\r\n\r\n  /**\r\n   *  Whether the other panels should be closed when a panel is opened\r\n   */\r\n  @Input('closeOthers') closeOtherPanels: boolean;\r\n\r\n  /**\r\n   * Whether the closed panels should be hidden without destroying them\r\n   */\r\n  @Input() destroyOnHide = true;\r\n\r\n  /**\r\n   *  Accordion's types of panels to be applied globally.\r\n   *  Bootstrap recognizes the following types: \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\"\r\n   * and \"dark\r\n   */\r\n  @Input() type: string;\r\n\r\n  /**\r\n   * A panel change event fired right before the panel toggle happens. See NgbPanelChangeEvent for payload details\r\n   */\r\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\r\n\r\n  constructor(config: NgbAccordionConfig) {\r\n    this.type = config.type;\r\n    this.closeOtherPanels = config.closeOthers;\r\n  }\r\n\r\n  /**\r\n   * Checks if a panel with a given id is expanded or not.\r\n   */\r\n  isExpanded(panelId: string): boolean { return this.activeIds.indexOf(panelId) > -1; }\r\n\r\n  /**\r\n   * Expands a panel with a given id. Has no effect if the panel is already expanded or disabled.\r\n   */\r\n  expand(panelId: string): void { this._changeOpenState(this._findPanelById(panelId), true); }\r\n\r\n  /**\r\n   * Expands all panels if [closeOthers]=\"false\". For the [closeOthers]=\"true\" case will have no effect if there is an\r\n   * open panel, otherwise the first panel will be expanded.\r\n   */\r\n  expandAll(): void {\r\n    if (this.closeOtherPanels) {\r\n      if (this.activeIds.length === 0 && this.panels.length) {\r\n        this._changeOpenState(this.panels.first, true);\r\n      }\r\n    } else {\r\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collapses a panel with a given id. Has no effect if the panel is already collapsed or disabled.\r\n   */\r\n  collapse(panelId: string) { this._changeOpenState(this._findPanelById(panelId), false); }\r\n\r\n  /**\r\n   * Collapses all open panels.\r\n   */\r\n  collapseAll() {\r\n    this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\r\n  }\r\n\r\n  /**\r\n   * Programmatically toggle a panel with a given id. Has no effect if the panel is disabled.\r\n   */\r\n  toggle(panelId: string) {\r\n    const panel = this._findPanelById(panelId);\r\n    if (panel) {\r\n      this._changeOpenState(panel, !panel.isOpen);\r\n    }\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    // active id updates\r\n    if (isString(this.activeIds)) {\r\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\r\n    }\r\n\r\n    // update panels open states\r\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\r\n\r\n    // closeOthers updates\r\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\r\n      this._closeOthers(this.activeIds[0]);\r\n      this._updateActiveIds();\r\n    }\r\n  }\r\n\r\n  private _changeOpenState(panel: NgbPanel, nextState: boolean) {\r\n    if (panel && !panel.disabled && panel.isOpen !== nextState) {\r\n      let defaultPrevented = false;\r\n\r\n      this.panelChange.emit(\r\n          {panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\r\n\r\n      if (!defaultPrevented) {\r\n        panel.isOpen = nextState;\r\n\r\n        if (nextState && this.closeOtherPanels) {\r\n          this._closeOthers(panel.id);\r\n        }\r\n        this._updateActiveIds();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _closeOthers(panelId: string) {\r\n    this.panels.forEach(panel => {\r\n      if (panel.id !== panelId) {\r\n        panel.isOpen = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private _findPanelById(panelId: string): NgbPanel | null { return this.panels.find(p => p.id === panelId); }\r\n\r\n  private _updateActiveIds() {\r\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\r\n  }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent} from './accordion';\r\n\r\nexport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelChangeEvent} from './accordion';\r\nexport {NgbAccordionConfig} from './accordion-config';\r\n\r\nconst NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent];\r\n\r\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\r\nexport class NgbAccordionModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAccordionModule}; }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Configuration service for the NgbAlert component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the alerts used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbAlertConfig {\r\n  dismissible = true;\r\n  type = 'warning';\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  Renderer2,\r\n  ElementRef,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges\r\n} from '@angular/core';\r\n\r\nimport {NgbAlertConfig} from './alert-config';\r\n\r\n/**\r\n * Alerts can be used to provide feedback messages.\r\n */\r\n@Component({\r\n  selector: 'ngb-alert',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible'},\r\n  template: `\r\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\r\n      (click)=\"closeHandler()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n    <ng-content></ng-content>\r\n    `,\r\n  styles: [`\r\n    :host {\r\n      display: block;\r\n    }\r\n  `]\r\n})\r\nexport class NgbAlert implements OnInit,\r\n    OnChanges {\r\n  /**\r\n   * A flag indicating if a given alert can be dismissed (closed) by a user. If this flag is set, a close button (in a\r\n   * form of an Ã) will be displayed.\r\n   */\r\n  @Input() dismissible: boolean;\r\n  /**\r\n   * Alert type (CSS class). Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\", \"danger\",\r\n   * \"primary\", \"secondary\", \"light\", \"dark\".\r\n   */\r\n  @Input() type: string;\r\n  /**\r\n   * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.\r\n   */\r\n  @Output() close = new EventEmitter<void>();\r\n\r\n  constructor(config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef) {\r\n    this.dismissible = config.dismissible;\r\n    this.type = config.type;\r\n  }\r\n\r\n  closeHandler() { this.close.emit(null); }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const typeChange = changes['type'];\r\n    if (typeChange && !typeChange.firstChange) {\r\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\r\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\r\n    }\r\n  }\r\n\r\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbAlert} from './alert';\r\n\r\nexport {NgbAlert} from './alert';\r\nexport {NgbAlertConfig} from './alert-config';\r\n\r\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\r\nexport class NgbAlertModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAlertModule}; }\r\n}\r\n","import {Directive} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ngbButtonLabel]',\r\n  host:\r\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\r\n})\r\nexport class NgbButtonLabel {\r\n  active: boolean;\r\n  disabled: boolean;\r\n  focused: boolean;\r\n}\r\n","import {Directive, forwardRef, Input} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\n\r\nimport {NgbButtonLabel} from './label';\r\n\r\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => NgbCheckBox),\r\n  multi: true\r\n};\r\n\r\n\r\n/**\r\n * Easily create Bootstrap-style checkbox buttons. A value of a checked button is bound to a variable\r\n * specified via ngModel.\r\n */\r\n@Directive({\r\n  selector: '[ngbButton][type=checkbox]',\r\n  host: {\r\n    'autocomplete': 'off',\r\n    '[checked]': 'checked',\r\n    '[disabled]': 'disabled',\r\n    '(change)': 'onInputChange($event)',\r\n    '(focus)': 'focused = true',\r\n    '(blur)': 'focused = false'\r\n  },\r\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\r\n})\r\nexport class NgbCheckBox implements ControlValueAccessor {\r\n  checked;\r\n\r\n  /**\r\n   * A flag indicating if a given checkbox button is disabled.\r\n   */\r\n  @Input() disabled = false;\r\n\r\n  /**\r\n   * Value to be propagated as model when the checkbox is checked.\r\n   */\r\n  @Input() valueChecked = true;\r\n\r\n  /**\r\n   * Value to be propagated as model when the checkbox is unchecked.\r\n   */\r\n  @Input() valueUnChecked = false;\r\n\r\n  onChange = (_: any) => {};\r\n  onTouched = () => {};\r\n\r\n  set focused(isFocused: boolean) {\r\n    this._label.focused = isFocused;\r\n    if (!isFocused) {\r\n      this.onTouched();\r\n    }\r\n  }\r\n\r\n  constructor(private _label: NgbButtonLabel) {}\r\n\r\n  onInputChange($event) {\r\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\r\n    this.onChange(modelToPropagate);\r\n    this.onTouched();\r\n    this.writeValue(modelToPropagate);\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this._label.disabled = isDisabled;\r\n  }\r\n\r\n  writeValue(value) {\r\n    this.checked = value === this.valueChecked;\r\n    this._label.active = this.checked;\r\n  }\r\n}\r\n","import {Directive, ElementRef, forwardRef, Input, OnDestroy, Renderer2} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\n\r\nimport {NgbButtonLabel} from './label';\r\n\r\nconst NGB_RADIO_VALUE_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => NgbRadioGroup),\r\n  multi: true\r\n};\r\n\r\nlet nextId = 0;\r\n\r\n/**\r\n * Easily create Bootstrap-style radio buttons. A value of a selected button is bound to a variable\r\n * specified via ngModel.\r\n */\r\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'group'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\r\nexport class NgbRadioGroup implements ControlValueAccessor {\r\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\r\n  private _value = null;\r\n  private _disabled: boolean;\r\n\r\n  get disabled() { return this._disabled; }\r\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\r\n\r\n  /**\r\n   * The name of the group. Unless enclosed inputs specify a name, this name is used as the name of the\r\n   * enclosed inputs. If not specified, a name is generated automatically.\r\n   */\r\n  @Input() name = `ngb-radio-${nextId++}`;\r\n\r\n  onChange = (_: any) => {};\r\n  onTouched = () => {};\r\n\r\n  onRadioChange(radio: NgbRadio) {\r\n    this.writeValue(radio.value);\r\n    this.onChange(radio.value);\r\n  }\r\n\r\n  onRadioValueUpdate() { this._updateRadiosValue(); }\r\n\r\n  register(radio: NgbRadio) { this._radios.add(radio); }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this._disabled = isDisabled;\r\n    this._updateRadiosDisabled();\r\n  }\r\n\r\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\r\n\r\n  writeValue(value) {\r\n    this._value = value;\r\n    this._updateRadiosValue();\r\n  }\r\n\r\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\r\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\r\n}\r\n\r\n\r\n/**\r\n * Marks an input of type \"radio\" as part of the NgbRadioGroup.\r\n */\r\n@Directive({\r\n  selector: '[ngbButton][type=radio]',\r\n  host: {\r\n    '[checked]': 'checked',\r\n    '[disabled]': 'disabled',\r\n    '[name]': 'nameAttr',\r\n    '(change)': 'onChange()',\r\n    '(focus)': 'focused = true',\r\n    '(blur)': 'focused = false'\r\n  }\r\n})\r\nexport class NgbRadio implements OnDestroy {\r\n  private _checked: boolean;\r\n  private _disabled: boolean;\r\n  private _value: any = null;\r\n\r\n  /**\r\n   * The name of the input. All inputs of a group should have the same name. If not specified,\r\n   * the name of the enclosing group is used.\r\n   */\r\n  @Input() name: string;\r\n\r\n  /**\r\n   * You can specify model value of a given radio by binding to the value property.\r\n   */\r\n  @Input('value')\r\n  set value(value: any) {\r\n    this._value = value;\r\n    const stringValue = value ? value.toString() : '';\r\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\r\n    this._group.onRadioValueUpdate();\r\n  }\r\n\r\n  /**\r\n   * A flag indicating if a given radio button is disabled.\r\n   */\r\n  @Input('disabled')\r\n  set disabled(isDisabled: boolean) {\r\n    this._disabled = isDisabled !== false;\r\n    this.updateDisabled();\r\n  }\r\n\r\n  set focused(isFocused: boolean) {\r\n    if (this._label) {\r\n      this._label.focused = isFocused;\r\n    }\r\n    if (!isFocused) {\r\n      this._group.onTouched();\r\n    }\r\n  }\r\n\r\n  get checked() { return this._checked; }\r\n\r\n  get disabled() { return this._group.disabled || this._disabled; }\r\n\r\n  get value() { return this._value; }\r\n\r\n  get nameAttr() { return this.name || this._group.name; }\r\n\r\n  constructor(\r\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\r\n      private _element: ElementRef<HTMLInputElement>) {\r\n    this._group.register(this);\r\n    this.updateDisabled();\r\n  }\r\n\r\n  ngOnDestroy() { this._group.unregister(this); }\r\n\r\n  onChange() { this._group.onRadioChange(this); }\r\n\r\n  updateValue(value) {\r\n    this._checked = this.value === value;\r\n    this._label.active = this._checked;\r\n  }\r\n\r\n  updateDisabled() { this._label.disabled = this.disabled; }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {NgbButtonLabel} from './label';\r\nimport {NgbCheckBox} from './checkbox';\r\nimport {NgbRadio, NgbRadioGroup} from './radio';\r\n\r\nexport {NgbButtonLabel} from './label';\r\nexport {NgbCheckBox} from './checkbox';\r\nexport {NgbRadio, NgbRadioGroup} from './radio';\r\n\r\n\r\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\r\n\r\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\r\nexport class NgbButtonsModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbButtonsModule}; }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Configuration service for the NgbCarousel component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the carousels used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbCarouselConfig {\r\n  interval = 5000;\r\n  wrap = true;\r\n  keyboard = true;\r\n  pauseOnHover = true;\r\n  showNavigationArrows = true;\r\n  showNavigationIndicators = true;\r\n}\r\n","import {\r\n  AfterContentChecked,\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  Directive,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Output,\r\n  PLATFORM_ID,\r\n  QueryList,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\n\r\nimport {NgbCarouselConfig} from './carousel-config';\r\n\r\nimport {Subject, timer} from 'rxjs';\r\nimport {filter, map, switchMap, takeUntil} from 'rxjs/operators';\r\n\r\nlet nextId = 0;\r\n\r\n/**\r\n * Represents an individual slide to be used within a carousel.\r\n */\r\n@Directive({selector: 'ng-template[ngbSlide]'})\r\nexport class NgbSlide {\r\n  /**\r\n   * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\r\n   * Will be auto-generated if not provided.\r\n   */\r\n  @Input() id = `ngb-slide-${nextId++}`;\r\n  constructor(public tplRef: TemplateRef<any>) {}\r\n}\r\n\r\n/**\r\n * Directive to easily create carousels based on Bootstrap's markup.\r\n */\r\n@Component({\r\n  selector: 'ngb-carousel',\r\n  exportAs: 'ngbCarousel',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    'class': 'carousel slide',\r\n    '[style.display]': '\"block\"',\r\n    'tabIndex': '0',\r\n    '(mouseenter)': 'pauseOnHover && pause()',\r\n    '(mouseleave)': 'pauseOnHover && cycle()',\r\n    '(keydown.arrowLeft)': 'keyboard && prev()',\r\n    '(keydown.arrowRight)': 'keyboard && next()'\r\n  },\r\n  template: `\r\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\r\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\r\n          (click)=\"select(slide.id); pauseOnHover && pause()\"></li>\r\n    </ol>\r\n    <div class=\"carousel-inner\">\r\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\r\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\r\n      </div>\r\n    </div>\r\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev()\" *ngIf=\"showNavigationArrows\">\r\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\r\n    </a>\r\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next()\" *ngIf=\"showNavigationArrows\">\r\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\r\n    </a>\r\n  `\r\n})\r\nexport class NgbCarousel implements AfterContentChecked,\r\n    AfterContentInit, OnChanges, OnDestroy {\r\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\r\n\r\n  private _start$ = new Subject<void>();\r\n  private _stop$ = new Subject<void>();\r\n\r\n  /**\r\n   * The active slide id.\r\n   */\r\n  @Input() activeId: string;\r\n\r\n\r\n  /**\r\n   * Amount of time in milliseconds before next slide is shown.\r\n   */\r\n  @Input() interval: number;\r\n\r\n  /**\r\n   * Whether can wrap from the last to the first slide.\r\n   */\r\n  @Input() wrap: boolean;\r\n\r\n  /**\r\n   * A flag for allowing navigation via keyboard\r\n   */\r\n  @Input() keyboard: boolean;\r\n\r\n  /**\r\n   * A flag to enable slide cycling pause/resume on mouseover.\r\n   * @since 2.2.0\r\n   */\r\n  @Input() pauseOnHover: boolean;\r\n\r\n  /**\r\n   * A flag to show / hide navigation arrows.\r\n   * @since 2.2.0\r\n   */\r\n  @Input() showNavigationArrows: boolean;\r\n\r\n  /**\r\n   * A flag to show / hide navigation indicators.\r\n   * @since 2.2.0\r\n   */\r\n  @Input() showNavigationIndicators: boolean;\r\n\r\n  /**\r\n   * A carousel slide event fired when the slide transition is completed.\r\n   * See NgbSlideEvent for payload details\r\n   */\r\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\r\n\r\n  constructor(\r\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\r\n      private _cd: ChangeDetectorRef) {\r\n    this.interval = config.interval;\r\n    this.wrap = config.wrap;\r\n    this.keyboard = config.keyboard;\r\n    this.pauseOnHover = config.pauseOnHover;\r\n    this.showNavigationArrows = config.showNavigationArrows;\r\n    this.showNavigationIndicators = config.showNavigationIndicators;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // setInterval() doesn't play well with SSR and protractor,\r\n    // so we should run it in the browser and outside Angular\r\n    if (isPlatformBrowser(this._platformId)) {\r\n      this._ngZone.runOutsideAngular(() => {\r\n        this._start$\r\n            .pipe(\r\n                map(() => this.interval), filter(interval => interval > 0),\r\n                switchMap(interval => timer(interval).pipe(takeUntil(this._stop$))))\r\n            .subscribe(() => this._ngZone.run(() => {\r\n              this.next();\r\n              this._cd.detectChanges();\r\n            }));\r\n\r\n        this._start$.next();\r\n      });\r\n    }\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    let activeSlide = this._getSlideById(this.activeId);\r\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\r\n  }\r\n\r\n  ngOnDestroy() { this._stop$.next(); }\r\n\r\n  ngOnChanges(changes) {\r\n    if ('interval' in changes && !changes['interval'].isFirstChange()) {\r\n      this._start$.next();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navigate to a slide with the specified identifier.\r\n   */\r\n  select(slideId: string) { this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId)); }\r\n\r\n  /**\r\n   * Navigate to the next slide.\r\n   */\r\n  prev() { this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT); }\r\n\r\n  /**\r\n   * Navigate to the next slide.\r\n   */\r\n  next() { this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT); }\r\n\r\n  /**\r\n   * Stops the carousel from cycling through items.\r\n   */\r\n  pause() { this._stop$.next(); }\r\n\r\n  /**\r\n   * Restarts cycling through the carousel slides from left to right.\r\n   */\r\n  cycle() { this._start$.next(); }\r\n\r\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection) {\r\n    let selectedSlide = this._getSlideById(slideIdx);\r\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\r\n      this.slide.emit({prev: this.activeId, current: selectedSlide.id, direction: direction});\r\n      this._start$.next();\r\n      this.activeId = selectedSlide.id;\r\n    }\r\n  }\r\n\r\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\r\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\r\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\r\n\r\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\r\n  }\r\n\r\n  private _getSlideById(slideId: string): NgbSlide { return this.slides.find(slide => slide.id === slideId); }\r\n\r\n  private _getSlideIdxById(slideId: string): number {\r\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\r\n  }\r\n\r\n  private _getNextSlide(currentSlideId: string): string {\r\n    const slideArr = this.slides.toArray();\r\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\r\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\r\n\r\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\r\n                         slideArr[currentSlideIdx + 1].id;\r\n  }\r\n\r\n  private _getPrevSlide(currentSlideId: string): string {\r\n    const slideArr = this.slides.toArray();\r\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\r\n    const isFirstSlide = currentSlideIdx === 0;\r\n\r\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\r\n                          slideArr[currentSlideIdx - 1].id;\r\n  }\r\n}\r\n\r\n/**\r\n * The payload of the slide event fired when the slide transition is completed\r\n */\r\nexport interface NgbSlideEvent {\r\n  /**\r\n   * Previous slide id\r\n   */\r\n  prev: string;\r\n\r\n  /**\r\n   * New slide ids\r\n   */\r\n  current: string;\r\n\r\n  /**\r\n   * Slide event direction\r\n   */\r\n  direction: NgbSlideEventDirection;\r\n}\r\n\r\n/**\r\n * Enum to define the carousel slide event direction\r\n */\r\nexport enum NgbSlideEventDirection {\r\n  LEFT = <any>'left',\r\n  RIGHT = <any>'right'\r\n}\r\n\r\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\r\n\r\nexport {NgbCarousel, NgbSlide, NgbSlideEvent} from './carousel';\r\nexport {NgbCarouselConfig} from './carousel-config';\r\n\r\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\r\nexport class NgbCarouselModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCarouselModule}; }\r\n}\r\n","import {Directive, Input} from '@angular/core';\r\n\r\n/**\r\n * The NgbCollapse directive provides a simple way to hide and show an element with animations.\r\n */\r\n@Directive({\r\n  selector: '[ngbCollapse]',\r\n  exportAs: 'ngbCollapse',\r\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\r\n})\r\nexport class NgbCollapse {\r\n  /**\r\n   * A flag indicating collapsed (true) or open (false) state.\r\n   */\r\n  @Input('ngbCollapse') collapsed = false;\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {NgbCollapse} from './collapse';\r\n\r\nexport {NgbCollapse} from './collapse';\r\n\r\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\r\nexport class NgbCollapseModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCollapseModule}; }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {NgbDateStruct} from './ngb-date-struct';\r\nimport {isInteger} from '../util/util';\r\n\r\n/**\r\n * Simple class used for a date representation that datepicker also uses internally\r\n *\r\n * @since 3.0.0\r\n */\r\nexport class NgbDate implements NgbDateStruct {\r\n  /**\r\n   * The year, for example 2016\r\n   */\r\n  year: number;\r\n\r\n  /**\r\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\r\n   */\r\n  month: number;\r\n\r\n  /**\r\n   * The day of month, starting with 1\r\n   */\r\n  day: number;\r\n\r\n  /**\r\n   * Static method. Creates a new date object from the NgbDateStruct, ex. NgbDate.from({year: 2000,\r\n   * month: 5, day: 1}). If the 'date' is already of NgbDate, the method will return the same object\r\n   */\r\n  static from(date: NgbDateStruct): NgbDate {\r\n    if (date instanceof NgbDate) {\r\n      return date;\r\n    }\r\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\r\n  }\r\n\r\n  constructor(year: number, month: number, day: number) {\r\n    this.year = isInteger(year) ? year : null;\r\n    this.month = isInteger(month) ? month : null;\r\n    this.day = isInteger(day) ? day : null;\r\n  }\r\n\r\n  /**\r\n   * Checks if current date is equal to another date\r\n   */\r\n  equals(other: NgbDate): boolean {\r\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\r\n  }\r\n\r\n  /**\r\n   * Checks if current date is before another date\r\n   */\r\n  before(other: NgbDate): boolean {\r\n    if (!other) {\r\n      return false;\r\n    }\r\n\r\n    if (this.year === other.year) {\r\n      if (this.month === other.month) {\r\n        return this.day === other.day ? false : this.day < other.day;\r\n      } else {\r\n        return this.month < other.month;\r\n      }\r\n    } else {\r\n      return this.year < other.year;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if current date is after another date\r\n   */\r\n  after(other: NgbDate): boolean {\r\n    if (!other) {\r\n      return false;\r\n    }\r\n    if (this.year === other.year) {\r\n      if (this.month === other.month) {\r\n        return this.day === other.day ? false : this.day > other.day;\r\n      } else {\r\n        return this.month > other.month;\r\n      }\r\n    } else {\r\n      return this.year > other.year;\r\n    }\r\n  }\r\n}\r\n","import {NgbDate} from './ngb-date';\r\nimport {Injectable} from '@angular/core';\r\nimport {isInteger} from '../util/util';\r\n\r\nfunction fromJSDate(jsDate: Date) {\r\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\r\n}\r\nfunction toJSDate(date: NgbDate) {\r\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\r\n  // this is done avoid 30 -> 1930 conversion\r\n  if (!isNaN(jsDate.getTime())) {\r\n    jsDate.setFullYear(date.year);\r\n  }\r\n  return jsDate;\r\n}\r\n\r\nexport type NgbPeriod = 'y' | 'm' | 'd';\r\n\r\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\r\n  return new NgbCalendarGregorian();\r\n}\r\n\r\n/**\r\n * Calendar used by the datepicker.\r\n * Default implementation uses Gregorian calendar.\r\n */\r\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY})\r\nexport abstract class NgbCalendar {\r\n  /**\r\n   * Returns number of days per week.\r\n   */\r\n  abstract getDaysPerWeek(): number;\r\n\r\n  /**\r\n   * Returns an array of months per year.\r\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\r\n   */\r\n  abstract getMonths(year?: number): number[];\r\n\r\n  /**\r\n   * Returns number of weeks per month.\r\n   */\r\n  abstract getWeeksPerMonth(): number;\r\n\r\n  /**\r\n   * Returns weekday number for a given day.\r\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\r\n   */\r\n  abstract getWeekday(date: NgbDate): number;\r\n\r\n  /**\r\n   * Adds a number of years, months or days to a given date.\r\n   * Period can be 'y', 'm' or 'd' and defaults to day.\r\n   * Number defaults to 1.\r\n   */\r\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\r\n\r\n  /**\r\n   * Subtracts a number of years, months or days from a given date.\r\n   * Period can be 'y', 'm' or 'd' and defaults to day.\r\n   * Number defaults to 1.\r\n   */\r\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\r\n\r\n  /**\r\n   * Returns week number for a given week.\r\n   */\r\n  abstract getWeekNumber(week: NgbDate[], firstDayOfWeek: number): number;\r\n\r\n  /**\r\n   * Returns today's date.\r\n   */\r\n  abstract getToday(): NgbDate;\r\n\r\n  /**\r\n   * Checks if a date is valid for a current calendar.\r\n   */\r\n  abstract isValid(date: NgbDate): boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class NgbCalendarGregorian extends NgbCalendar {\r\n  getDaysPerWeek() { return 7; }\r\n\r\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\r\n\r\n  getWeeksPerMonth() { return 6; }\r\n\r\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\r\n    let jsDate = toJSDate(date);\r\n\r\n    switch (period) {\r\n      case 'y':\r\n        return new NgbDate(date.year + number, 1, 1);\r\n      case 'm':\r\n        jsDate = new Date(date.year, date.month + number - 1, 1, 12);\r\n        break;\r\n      case 'd':\r\n        jsDate.setDate(jsDate.getDate() + number);\r\n        break;\r\n      default:\r\n        return date;\r\n    }\r\n\r\n    return fromJSDate(jsDate);\r\n  }\r\n\r\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\r\n\r\n  getWeekday(date: NgbDate) {\r\n    let jsDate = toJSDate(date);\r\n    let day = jsDate.getDay();\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    return day === 0 ? 7 : day;\r\n  }\r\n\r\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    if (firstDayOfWeek === 7) {\r\n      firstDayOfWeek = 0;\r\n    }\r\n\r\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\r\n    let date = week[thursdayIndex];\r\n\r\n    const jsDate = toJSDate(date);\r\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\r\n    const time = jsDate.getTime();\r\n    jsDate.setMonth(0);  // Compare with Jan 1\r\n    jsDate.setDate(1);\r\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\r\n  }\r\n\r\n  getToday(): NgbDate { return fromJSDate(new Date()); }\r\n\r\n  isValid(date: NgbDate): boolean {\r\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\r\n      return false;\r\n    }\r\n\r\n    const jsDate = toJSDate(date);\r\n\r\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\r\n        jsDate.getDate() === date.day;\r\n  }\r\n}\r\n","import {NgbDate} from './ngb-date';\r\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\r\nimport {NgbCalendar} from './ngb-calendar';\r\nimport {isDefined} from '../util/util';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\n\r\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\r\n  return !dateComparator(prev, next);\r\n}\r\n\r\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\r\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\r\n}\r\n\r\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\r\n  if (maxDate && minDate && maxDate.before(minDate)) {\r\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\r\n  }\r\n}\r\n\r\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\r\n  if (date && minDate && date.before(minDate)) {\r\n    return minDate;\r\n  }\r\n  if (date && maxDate && date.after(maxDate)) {\r\n    return maxDate;\r\n  }\r\n\r\n  return date;\r\n}\r\n\r\nexport function isDateSelectable(date: NgbDate, state: DatepickerViewModel) {\r\n  const {minDate, maxDate, disabled, markDisabled} = state;\r\n  // clang-format off\r\n  return !(\r\n    !isDefined(date) ||\r\n    disabled ||\r\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\r\n    (minDate && date.before(minDate)) ||\r\n    (maxDate && date.after(maxDate))\r\n  );\r\n  // clang-format on\r\n}\r\n\r\nexport function generateSelectBoxMonths(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\r\n  if (!date) {\r\n    return [];\r\n  }\r\n\r\n  let months = calendar.getMonths(date.year);\r\n\r\n  if (minDate && date.year === minDate.year) {\r\n    const index = months.findIndex(month => month === minDate.month);\r\n    months = months.slice(index);\r\n  }\r\n\r\n  if (maxDate && date.year === maxDate.year) {\r\n    const index = months.findIndex(month => month === maxDate.month);\r\n    months = months.slice(0, index + 1);\r\n  }\r\n\r\n  return months;\r\n}\r\n\r\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\r\n  if (!date) {\r\n    return [];\r\n  }\r\n\r\n  const start = minDate && minDate.year || date.year - 10;\r\n  const end = maxDate && maxDate.year || date.year + 10;\r\n\r\n  return Array.from({length: end - start + 1}, (e, i) => start + i);\r\n}\r\n\r\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate) {\r\n  return maxDate && calendar.getNext(date, 'm').after(maxDate);\r\n}\r\n\r\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate) {\r\n  const prevDate = calendar.getPrev(date, 'm');\r\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\r\n                     prevDate.year < minDate.year && minDate.month === 1);\r\n}\r\n\r\nexport function buildMonths(\r\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\r\n    force: boolean): MonthViewModel[] {\r\n  const {displayMonths, months} = state;\r\n  // move old months to a temporary array\r\n  const monthsToReuse = months.splice(0, months.length);\r\n\r\n  // generate new first dates, nullify or reuse months\r\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\r\n    const firstDate = calendar.getNext(date, 'm', i);\r\n    months[i] = null;\r\n\r\n    if (!force) {\r\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\r\n      // move reused month back to months\r\n      if (reusedIndex !== -1) {\r\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\r\n      }\r\n    }\r\n\r\n    return firstDate;\r\n  });\r\n\r\n  // rebuild nullified months\r\n  firstDates.forEach((firstDate, i) => {\r\n    if (months[i] === null) {\r\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\r\n    }\r\n  });\r\n\r\n  return months;\r\n}\r\n\r\nexport function buildMonth(\r\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\r\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\r\n  const {minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\r\n\r\n  month.firstDate = null;\r\n  month.lastDate = null;\r\n  month.number = date.month;\r\n  month.year = date.year;\r\n  month.weeks = month.weeks || [];\r\n  month.weekdays = month.weekdays || [];\r\n\r\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\r\n\r\n  // month has weeks\r\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\r\n    let weekObject = month.weeks[week];\r\n    if (!weekObject) {\r\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\r\n    }\r\n    const days = weekObject.days;\r\n\r\n    // week has days\r\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\r\n      if (week === 0) {\r\n        month.weekdays[day] = calendar.getWeekday(date);\r\n      }\r\n\r\n      const newDate = new NgbDate(date.year, date.month, date.day);\r\n      const nextDate = calendar.getNext(newDate);\r\n\r\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\r\n\r\n      // marking date as disabled\r\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\r\n      if (!disabled && markDisabled) {\r\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\r\n      }\r\n\r\n      // saving first date of the month\r\n      if (month.firstDate === null && newDate.month === month.number) {\r\n        month.firstDate = newDate;\r\n      }\r\n\r\n      // saving last date of the month\r\n      if (newDate.month === month.number && nextDate.month !== month.number) {\r\n        month.lastDate = newDate;\r\n      }\r\n\r\n      let dayObject = days[day];\r\n      if (!dayObject) {\r\n        dayObject = days[day] = {} as DayViewModel;\r\n      }\r\n      dayObject.date = newDate;\r\n      dayObject.context = Object.assign(\r\n          dayObject.context || {},\r\n          {date: newDate, currentMonth: month.number, disabled, focused: false, selected: false});\r\n      dayObject.tabindex = -1;\r\n      dayObject.ariaLabel = ariaLabel;\r\n      dayObject.hidden = false;\r\n\r\n      date = nextDate;\r\n    }\r\n\r\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\r\n\r\n    // marking week as collapsed\r\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\r\n        days[days.length - 1].date.month !== month.number;\r\n  }\r\n\r\n  return month;\r\n}\r\n\r\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\r\n  const daysPerWeek = calendar.getDaysPerWeek();\r\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\r\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\r\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\r\n}\r\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\r\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate} from '@angular/common';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\n\r\nexport function NGB_DATEPICKER_18N_FACTORY(locale) {\r\n  return new NgbDatepickerI18nDefault(locale);\r\n}\r\n\r\n/**\r\n * Type of the service supplying month and weekday names to to NgbDatepicker component.\r\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\r\n * as explained in the Angular i18n guide.\r\n * See the i18n demo for how to extend this class and define a custom provider for i18n.\r\n */\r\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID]})\r\nexport abstract class NgbDatepickerI18n {\r\n  /**\r\n   * Returns the short weekday name to display in the heading of the month view.\r\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\r\n   */\r\n  abstract getWeekdayShortName(weekday: number): string;\r\n\r\n  /**\r\n   * Returns the short month name to display in the date picker navigation.\r\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec\r\n   */\r\n  abstract getMonthShortName(month: number, year?: number): string;\r\n\r\n  /**\r\n   * Returns the full month name to display in the date picker navigation.\r\n   * With default calendar we use ISO 8601: 'month' is 1=January ... 12=December\r\n   */\r\n  abstract getMonthFullName(month: number, year?: number): string;\r\n\r\n  /**\r\n   * Returns the value of the 'aria-label' attribute for a specific date\r\n   *\r\n   * @since 2.0.0\r\n   */\r\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\r\n\r\n  /**\r\n   * Returns the textual representation of a day that is rendered in a day cell\r\n   *\r\n   * @since 3.0.0\r\n   */\r\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\r\n\r\n  /**\r\n   * Returns the textual representation of a week number rendered by date picker\r\n   *\r\n   * @since 3.0.0\r\n   */\r\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\r\n\r\n  /**\r\n   * Returns the textual representation of a year that is rendered\r\n   * in date picker year select box\r\n   *\r\n   * @since 3.0.0\r\n   */\r\n  getYearNumerals(year: number): string { return `${year}`; }\r\n}\r\n\r\n@Injectable()\r\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\r\n  private _weekdaysShort: Array<string>;\r\n  private _monthsShort: Array<string>;\r\n  private _monthsFull: Array<string>;\r\n\r\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\r\n    super();\r\n\r\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\r\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\r\n\r\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\r\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\r\n  }\r\n\r\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1]; }\r\n\r\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1]; }\r\n\r\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1]; }\r\n\r\n  getDayAriaLabel(date: NgbDateStruct): string {\r\n    const jsDate = new Date(date.year, date.month - 1, date.day);\r\n    return formatDate(jsDate, 'fullDate', this._locale);\r\n  }\r\n}\r\n","import {NgbCalendar, NgbPeriod} from './ngb-calendar';\r\nimport {NgbDate} from './ngb-date';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\nimport {DatepickerViewModel, NgbMarkDisabled} from './datepicker-view-model';\r\nimport {Injectable} from '@angular/core';\r\nimport {isInteger, toInteger} from '../util/util';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {\r\n  buildMonths,\r\n  checkDateInRange,\r\n  checkMinBeforeMax,\r\n  isChangedDate,\r\n  isDateSelectable,\r\n  generateSelectBoxYears,\r\n  generateSelectBoxMonths,\r\n  prevMonthDisabled,\r\n  nextMonthDisabled\r\n} from './datepicker-tools';\r\n\r\nimport {filter} from 'rxjs/operators';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\n\r\n@Injectable()\r\nexport class NgbDatepickerService {\r\n  private _model$ = new Subject<DatepickerViewModel>();\r\n\r\n  private _select$ = new Subject<NgbDate>();\r\n\r\n  private _state: DatepickerViewModel = {\r\n    disabled: false,\r\n    displayMonths: 1,\r\n    firstDayOfWeek: 1,\r\n    focusVisible: false,\r\n    months: [],\r\n    navigation: 'select',\r\n    outsideDays: 'visible',\r\n    prevDisabled: false,\r\n    nextDisabled: false,\r\n    selectBoxes: {years: [], months: []},\r\n    selectedDate: null\r\n  };\r\n\r\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\r\n\r\n  get select$(): Observable<NgbDate> { return this._select$.pipe(filter(date => date !== null)); }\r\n\r\n  set disabled(disabled: boolean) {\r\n    if (this._state.disabled !== disabled) {\r\n      this._nextState({disabled});\r\n    }\r\n  }\r\n\r\n  set displayMonths(displayMonths: number) {\r\n    displayMonths = toInteger(displayMonths);\r\n    if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\r\n      this._nextState({displayMonths});\r\n    }\r\n  }\r\n\r\n  set firstDayOfWeek(firstDayOfWeek: number) {\r\n    firstDayOfWeek = toInteger(firstDayOfWeek);\r\n    if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\r\n      this._nextState({firstDayOfWeek});\r\n    }\r\n  }\r\n\r\n  set focusVisible(focusVisible: boolean) {\r\n    if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\r\n      this._nextState({focusVisible});\r\n    }\r\n  }\r\n\r\n  set maxDate(date: NgbDate) {\r\n    const maxDate = this.toValidDate(date, null);\r\n    if (isChangedDate(this._state.maxDate, maxDate)) {\r\n      this._nextState({maxDate});\r\n    }\r\n  }\r\n\r\n  set markDisabled(markDisabled: NgbMarkDisabled) {\r\n    if (this._state.markDisabled !== markDisabled) {\r\n      this._nextState({markDisabled});\r\n    }\r\n  }\r\n\r\n  set minDate(date: NgbDate) {\r\n    const minDate = this.toValidDate(date, null);\r\n    if (isChangedDate(this._state.minDate, minDate)) {\r\n      this._nextState({minDate});\r\n    }\r\n  }\r\n\r\n  set navigation(navigation: 'select' | 'arrows' | 'none') {\r\n    if (this._state.navigation !== navigation) {\r\n      this._nextState({navigation});\r\n    }\r\n  }\r\n\r\n  set outsideDays(outsideDays: 'visible' | 'collapsed' | 'hidden') {\r\n    if (this._state.outsideDays !== outsideDays) {\r\n      this._nextState({outsideDays});\r\n    }\r\n  }\r\n\r\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\r\n\r\n  focus(date: NgbDate) {\r\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\r\n      this._nextState({focusDate: date});\r\n    }\r\n  }\r\n\r\n  focusMove(period?: NgbPeriod, number?: number) {\r\n    this.focus(this._calendar.getNext(this._state.focusDate, period, number));\r\n  }\r\n\r\n  focusSelect() {\r\n    if (isDateSelectable(this._state.focusDate, this._state)) {\r\n      this.select(this._state.focusDate, {emitEvent: true});\r\n    }\r\n  }\r\n\r\n  open(date: NgbDate) {\r\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\r\n    if (!this._state.disabled) {\r\n      this._nextState({firstDate});\r\n    }\r\n  }\r\n\r\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\r\n    const selectedDate = this.toValidDate(date, null);\r\n    if (!this._state.disabled) {\r\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\r\n        this._nextState({selectedDate});\r\n      }\r\n\r\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\r\n        this._select$.next(selectedDate);\r\n      }\r\n    }\r\n  }\r\n\r\n  toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate {\r\n    const ngbDate = NgbDate.from(date);\r\n    if (defaultValue === undefined) {\r\n      defaultValue = this._calendar.getToday();\r\n    }\r\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\r\n  }\r\n\r\n  private _nextState(patch: Partial<DatepickerViewModel>) {\r\n    const newState = this._updateState(patch);\r\n    this._patchContexts(newState);\r\n    this._state = newState;\r\n    this._model$.next(this._state);\r\n  }\r\n\r\n  private _patchContexts(state: DatepickerViewModel) {\r\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\r\n    state.months.forEach(month => {\r\n      month.weeks.forEach(week => {\r\n        week.days.forEach(day => {\r\n\r\n          // patch focus flag\r\n          if (focusDate) {\r\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\r\n          }\r\n\r\n          // calculating tabindex\r\n          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\r\n\r\n          // override context disabled\r\n          if (disabled === true) {\r\n            day.context.disabled = true;\r\n          }\r\n\r\n          // patch selection flag\r\n          if (selectedDate !== undefined) {\r\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\r\n          }\r\n\r\n          // visibility\r\n          if (month.number !== day.date.month) {\r\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\r\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\r\n                 day.date.before(months[displayMonths - 1].lastDate));\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\r\n    // patching fields\r\n    const state = Object.assign({}, this._state, patch);\r\n\r\n    let startDate = state.firstDate;\r\n\r\n    // min/max dates changed\r\n    if ('minDate' in patch || 'maxDate' in patch) {\r\n      checkMinBeforeMax(state.minDate, state.maxDate);\r\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\r\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\r\n      startDate = state.focusDate;\r\n    }\r\n\r\n    // disabled\r\n    if ('disabled' in patch) {\r\n      state.focusVisible = false;\r\n    }\r\n\r\n    // initial rebuild via 'select()'\r\n    if ('selectedDate' in patch && this._state.months.length === 0) {\r\n      startDate = state.selectedDate;\r\n    }\r\n\r\n    // focus date changed\r\n    if ('focusDate' in patch) {\r\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\r\n      startDate = state.focusDate;\r\n\r\n      // nothing to rebuild if only focus changed and it is still visible\r\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\r\n          !state.focusDate.after(state.lastDate)) {\r\n        return state;\r\n      }\r\n    }\r\n\r\n    // first date changed\r\n    if ('firstDate' in patch) {\r\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\r\n      startDate = state.firstDate;\r\n    }\r\n\r\n    // rebuilding months\r\n    if (startDate) {\r\n      const forceRebuild = 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch ||\r\n          'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\r\n\r\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\r\n\r\n      // updating months and boundary dates\r\n      state.months = months;\r\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\r\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\r\n\r\n      // reset selected date if 'markDisabled' returns true\r\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\r\n        state.selectedDate = null;\r\n      }\r\n\r\n      // adjusting focus after months were built\r\n      if ('firstDate' in patch) {\r\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\r\n            state.focusDate.after(state.lastDate)) {\r\n          state.focusDate = startDate;\r\n        }\r\n      }\r\n\r\n      // adjusting months/years for the select box navigation\r\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\r\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\r\n      if (state.navigation === 'select') {\r\n        // years ->  boundaries (min/max were changed)\r\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\r\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\r\n        }\r\n\r\n        // months -> when current year or boundaries change\r\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\r\n          state.selectBoxes.months =\r\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\r\n        }\r\n      } else {\r\n        state.selectBoxes = {years: [], months: []};\r\n      }\r\n\r\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\r\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\r\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\r\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\r\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\r\n      }\r\n    }\r\n\r\n    return state;\r\n  }\r\n}\r\n","export enum Key {\r\n  Tab = 9,\r\n  Enter = 13,\r\n  Escape = 27,\r\n  Space = 32,\r\n  PageUp = 33,\r\n  PageDown = 34,\r\n  End = 35,\r\n  Home = 36,\r\n  ArrowLeft = 37,\r\n  ArrowUp = 38,\r\n  ArrowRight = 39,\r\n  ArrowDown = 40\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbDatepickerService} from './datepicker-service';\r\nimport {NgbCalendar} from './ngb-calendar';\r\nimport {toString} from '../util/util';\r\nimport {Key} from '../util/key';\r\nimport {NgbDate} from './ngb-date';\r\n\r\n@Injectable()\r\nexport class NgbDatepickerKeyMapService {\r\n  private _minDate: NgbDate;\r\n  private _maxDate: NgbDate;\r\n  private _firstViewDate: NgbDate;\r\n  private _lastViewDate: NgbDate;\r\n\r\n  constructor(private _service: NgbDatepickerService, private _calendar: NgbCalendar) {\r\n    _service.model$.subscribe(model => {\r\n      this._minDate = model.minDate;\r\n      this._maxDate = model.maxDate;\r\n      this._firstViewDate = model.firstDate;\r\n      this._lastViewDate = model.lastDate;\r\n    });\r\n  }\r\n\r\n  processKey(event: KeyboardEvent) {\r\n    if (Key[toString(event.which)]) {\r\n      switch (event.which) {\r\n        case Key.PageUp:\r\n          this._service.focusMove(event.shiftKey ? 'y' : 'm', -1);\r\n          break;\r\n        case Key.PageDown:\r\n          this._service.focusMove(event.shiftKey ? 'y' : 'm', 1);\r\n          break;\r\n        case Key.End:\r\n          this._service.focus(event.shiftKey ? this._maxDate : this._lastViewDate);\r\n          break;\r\n        case Key.Home:\r\n          this._service.focus(event.shiftKey ? this._minDate : this._firstViewDate);\r\n          break;\r\n        case Key.ArrowLeft:\r\n          this._service.focusMove('d', -1);\r\n          break;\r\n        case Key.ArrowUp:\r\n          this._service.focusMove('d', -this._calendar.getDaysPerWeek());\r\n          break;\r\n        case Key.ArrowRight:\r\n          this._service.focusMove('d', 1);\r\n          break;\r\n        case Key.ArrowDown:\r\n          this._service.focusMove('d', this._calendar.getDaysPerWeek());\r\n          break;\r\n        case Key.Enter:\r\n        case Key.Space:\r\n          this._service.focusSelect();\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n","import {NgbDate} from './ngb-date';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\nimport {DayTemplateContext} from './datepicker-day-template-context';\r\n\r\nexport type NgbMarkDisabled = (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\r\n\r\nexport type DayViewModel = {\r\n  date: NgbDate,\r\n  context: DayTemplateContext,\r\n  tabindex: number,\r\n  ariaLabel: string,\r\n  hidden: boolean\r\n};\r\n\r\nexport type WeekViewModel = {\r\n  number: number,\r\n  days: DayViewModel[],\r\n  collapsed: boolean\r\n};\r\n\r\nexport type MonthViewModel = {\r\n  firstDate: NgbDate,\r\n  lastDate: NgbDate,\r\n  number: number,\r\n  year: number,\r\n  weeks: WeekViewModel[],\r\n  weekdays: number[]\r\n};\r\n\r\n// clang-format off\r\nexport type DatepickerViewModel = {\r\n  disabled: boolean,\r\n  displayMonths: number,\r\n  firstDate?: NgbDate,\r\n  firstDayOfWeek: number,\r\n  focusDate?: NgbDate,\r\n  focusVisible: boolean,\r\n  lastDate?: NgbDate,\r\n  markDisabled?: NgbMarkDisabled,\r\n  maxDate?: NgbDate,\r\n  minDate?: NgbDate,\r\n  months: MonthViewModel[],\r\n  navigation: 'select' | 'arrows' | 'none',\r\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\r\n  prevDisabled: boolean,\r\n  nextDisabled: boolean,\r\n  selectBoxes: {\r\n    years: number[],\r\n    months: number[]\r\n  },\r\n  selectedDate: NgbDate\r\n};\r\n// clang-format on\r\n\r\nexport enum NavigationEvent {\r\n  PREV,\r\n  NEXT\r\n}\r\n","import {Injectable, TemplateRef} from '@angular/core';\r\nimport {DayTemplateContext} from './datepicker-day-template-context';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\n\r\n/**\r\n * Configuration service for the NgbDatepicker component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the datepickers used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbDatepickerConfig {\r\n  dayTemplate: TemplateRef<DayTemplateContext>;\r\n  displayMonths = 1;\r\n  firstDayOfWeek = 1;\r\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\r\n  minDate: NgbDateStruct;\r\n  maxDate: NgbDateStruct;\r\n  navigation: 'select' | 'arrows' | 'none' = 'select';\r\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\r\n  showWeekdays = true;\r\n  showWeekNumbers = false;\r\n  startDate: {year: number, month: number};\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbDateStruct} from '../ngb-date-struct';\r\n\r\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\r\n  return new NgbDateStructAdapter();\r\n}\r\n\r\n/**\r\n * Abstract type serving as a DI token for the service converting from your application Date model to internal\r\n * NgbDateStruct model.\r\n * A default implementation converting from and to NgbDateStruct is provided for retro-compatibility,\r\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\r\n */\r\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY})\r\nexport abstract class NgbDateAdapter<D> {\r\n  /**\r\n   * Converts user-model date into an NgbDateStruct for internal use in the library\r\n   */\r\n  abstract fromModel(value: D): NgbDateStruct;\r\n\r\n  /**\r\n   * Converts internal date value NgbDateStruct to user-model date\r\n   * The returned type is supposed to be of the same type as fromModel() input-value param\r\n   */\r\n  abstract toModel(date: NgbDateStruct): D;\r\n}\r\n\r\n@Injectable()\r\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\r\n  /**\r\n   * Converts a NgbDateStruct value into NgbDateStruct value\r\n   */\r\n  fromModel(date: NgbDateStruct): NgbDateStruct {\r\n    return (date && date.year && date.month && date.day) ? {year: date.year, month: date.month, day: date.day} : null;\r\n  }\r\n\r\n  /**\r\n   * Converts a NgbDateStruct value into NgbDateStruct value\r\n   */\r\n  toModel(date: NgbDateStruct): NgbDateStruct {\r\n    return (date && date.year && date.month && date.day) ? {year: date.year, month: date.month, day: date.day} : null;\r\n  }\r\n}\r\n","import {Subscription} from 'rxjs';\r\nimport {take} from 'rxjs/operators';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  TemplateRef,\r\n  forwardRef,\r\n  OnInit,\r\n  SimpleChanges,\r\n  EventEmitter,\r\n  Output,\r\n  OnDestroy,\r\n  ElementRef,\r\n  NgZone\r\n} from '@angular/core';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\r\nimport {NgbCalendar} from './ngb-calendar';\r\nimport {NgbDate} from './ngb-date';\r\nimport {NgbDatepickerService} from './datepicker-service';\r\nimport {NgbDatepickerKeyMapService} from './datepicker-keymap-service';\r\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\r\nimport {DayTemplateContext} from './datepicker-day-template-context';\r\nimport {NgbDatepickerConfig} from './datepicker-config';\r\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\nimport {isChangedDate} from './datepicker-tools';\r\n\r\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => NgbDatepicker),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * The payload of the datepicker navigation event\r\n */\r\nexport interface NgbDatepickerNavigateEvent {\r\n  /**\r\n   * Currently displayed month\r\n   */\r\n  current: {year: number, month: number};\r\n\r\n  /**\r\n   * Month we're navigating to\r\n   */\r\n  next: {year: number, month: number};\r\n}\r\n\r\n/**\r\n * A lightweight and highly configurable datepicker directive\r\n */\r\n@Component({\r\n  exportAs: 'ngbDatepicker',\r\n  selector: 'ngb-datepicker',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [`\r\n    :host {\r\n      border: 1px solid #dfdfdf;\r\n      border-radius: 0.25rem;\r\n      display: inline-block;\r\n    }\r\n    .ngb-dp-month {\r\n      pointer-events: none;\r\n    }\r\n    .ngb-dp-header {\r\n      border-bottom: 0;\r\n      border-radius: 0.25rem 0.25rem 0 0;\r\n      padding-top: 0.25rem;\r\n    }\r\n    ngb-datepicker-month-view {\r\n      pointer-events: auto;\r\n    }\r\n    .ngb-dp-month-name {\r\n      font-size: larger;\r\n      height: 2rem;\r\n      line-height: 2rem;\r\n      text-align: center;\r\n    }\r\n    /deep/ .ngb-dp-month + .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week {\r\n      padding-left: 1rem;\r\n    }\r\n    /deep/ .ngb-dp-month + .ngb-dp-month > .ngb-dp-month-name {\r\n      padding-left: 1rem;\r\n    }\r\n    /deep/ .ngb-dp-month:last-child .ngb-dp-week {\r\n      padding-right: .25rem;\r\n    }\r\n    /deep/ .ngb-dp-month:first-child .ngb-dp-week {\r\n      padding-left: .25rem;\r\n    }\r\n    /deep/ .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week:last-child {\r\n      padding-bottom: .25rem;\r\n    }\r\n    .ngb-dp-months {\r\n      display: -ms-flexbox;\r\n      display: flex;\r\n    }\r\n  `],\r\n  template: `\r\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\r\n      <div ngbDatepickerDayView\r\n        [date]=\"date\"\r\n        [currentMonth]=\"currentMonth\"\r\n        [selected]=\"selected\"\r\n        [disabled]=\"disabled\"\r\n        [focused]=\"focused\">\r\n      </div>\r\n    </ng-template>\r\n\r\n    <div class=\"ngb-dp-header bg-light\">\r\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\r\n        [date]=\"model.firstDate\"\r\n        [months]=\"model.months\"\r\n        [disabled]=\"model.disabled\"\r\n        [showSelect]=\"model.navigation === 'select'\"\r\n        [prevDisabled]=\"model.prevDisabled\"\r\n        [nextDisabled]=\"model.nextDisabled\"\r\n        [selectBoxes]=\"model.selectBoxes\"\r\n        (navigate)=\"onNavigateEvent($event)\"\r\n        (select)=\"onNavigateDateSelect($event)\">\r\n      </ngb-datepicker-navigation>\r\n    </div>\r\n\r\n    <div class=\"ngb-dp-months\" (keydown)=\"onKeyDown($event)\" (focusin)=\"showFocus(true)\" (focusout)=\"showFocus(false)\">\r\n      <ng-template ngFor let-month [ngForOf]=\"model.months\" let-i=\"index\">\r\n        <div class=\"ngb-dp-month\">\r\n          <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\"\r\n                class=\"ngb-dp-month-name bg-light\">\r\n            {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\r\n          </div>\r\n          <ngb-datepicker-month-view\r\n            [month]=\"month\"\r\n            [dayTemplate]=\"dayTemplate || dt\"\r\n            [showWeekdays]=\"showWeekdays\"\r\n            [showWeekNumbers]=\"showWeekNumbers\"\r\n            (select)=\"onDateSelect($event)\">\r\n          </ngb-datepicker-month-view>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  `,\r\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService, NgbDatepickerKeyMapService]\r\n})\r\nexport class NgbDatepicker implements OnDestroy,\r\n    OnChanges, OnInit, ControlValueAccessor {\r\n  model: DatepickerViewModel;\r\n\r\n  private _subscription: Subscription;\r\n  private _selectSubscription: Subscription;\r\n  /**\r\n   * Reference for the custom template for the day display\r\n   */\r\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\r\n\r\n  /**\r\n   * Number of months to display\r\n   */\r\n  @Input() displayMonths: number;\r\n\r\n  /**\r\n   * First day of the week. With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\r\n   */\r\n  @Input() firstDayOfWeek: number;\r\n\r\n  /**\r\n   * Callback to mark a given date as disabled.\r\n   * 'Current' contains the month that will be displayed in the view\r\n   */\r\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\r\n\r\n  /**\r\n   * Max date for the navigation. If not provided, 'year' select box will display 10 years after current month\r\n   */\r\n  @Input() maxDate: NgbDateStruct;\r\n\r\n  /**\r\n   * Min date for the navigation. If not provided, 'year' select box will display 10 years before current month\r\n   */\r\n  @Input() minDate: NgbDateStruct;\r\n\r\n  /**\r\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\r\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\r\n   */\r\n  @Input() navigation: 'select' | 'arrows' | 'none';\r\n\r\n  /**\r\n   * The way to display days that don't belong to current month: `visible` (default),\r\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\r\n   */\r\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\r\n\r\n  /**\r\n   * Whether to display days of the week\r\n   */\r\n  @Input() showWeekdays: boolean;\r\n\r\n  /**\r\n   * Whether to display week numbers\r\n   */\r\n  @Input() showWeekNumbers: boolean;\r\n\r\n  /**\r\n   * Date to open calendar with.\r\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n   * If nothing or invalid date provided, calendar will open with current month.\r\n   * Use 'navigateTo(date)' as an alternative\r\n   */\r\n  @Input() startDate: {year: number, month: number};\r\n\r\n  /**\r\n   * An event fired when navigation happens and currently displayed month changes.\r\n   * See NgbDatepickerNavigateEvent for the payload info.\r\n   */\r\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\r\n\r\n  /**\r\n   * An event fired when user selects a date using keyboard or mouse.\r\n   * The payload of the event is currently selected NgbDate.\r\n   */\r\n  @Output() select = new EventEmitter<NgbDate>();\r\n\r\n  onChange = (_: any) => {};\r\n  onTouched = () => {};\r\n\r\n  constructor(\r\n      private _keyMapService: NgbDatepickerKeyMapService, public _service: NgbDatepickerService,\r\n      private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n, config: NgbDatepickerConfig,\r\n      private _cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\r\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\r\n    ['dayTemplate', 'displayMonths', 'firstDayOfWeek', 'markDisabled', 'minDate', 'maxDate', 'navigation',\r\n     'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\r\n        .forEach(input => this[input] = config[input]);\r\n\r\n    this._selectSubscription = _service.select$.subscribe(date => { this.select.emit(date); });\r\n\r\n    this._subscription = _service.model$.subscribe(model => {\r\n      const newDate = model.firstDate;\r\n      const oldDate = this.model ? this.model.firstDate : null;\r\n      const newSelectedDate = model.selectedDate;\r\n      const oldSelectedDate = this.model ? this.model.selectedDate : null;\r\n      const newFocusedDate = model.focusDate;\r\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\r\n\r\n      this.model = model;\r\n\r\n      // handling selection change\r\n      if (isChangedDate(newSelectedDate, oldSelectedDate)) {\r\n        this.onTouched();\r\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\r\n      }\r\n\r\n      // handling focus change\r\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\r\n        this.focus();\r\n      }\r\n\r\n      // emitting navigation event if the first month changes\r\n      if (!newDate.equals(oldDate)) {\r\n        this.navigate.emit({\r\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\r\n          next: {year: newDate.year, month: newDate.month}\r\n        });\r\n      }\r\n      _cd.markForCheck();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Manually focus the focusable day in the datepicker\r\n   */\r\n  focus() {\r\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\r\n      const elementToFocus =\r\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\r\n      if (elementToFocus) {\r\n        elementToFocus.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Navigates current view to provided date.\r\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n   * If nothing or invalid date provided calendar will open current month.\r\n   * Use 'startDate' input as an alternative\r\n   */\r\n  navigateTo(date?: {year: number, month: number}) {\r\n    this._service.open(NgbDate.from(date ? {...date, day: 1} : null));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._subscription.unsubscribe();\r\n    this._selectSubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.model === undefined) {\r\n      ['displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays'].forEach(\r\n          input => this._service[input] = this[input]);\r\n      this.navigateTo(this.startDate);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    ['displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays']\r\n        .filter(input => input in changes)\r\n        .forEach(input => this._service[input] = this[input]);\r\n\r\n    if ('startDate' in changes) {\r\n      this.navigateTo(this.startDate);\r\n    }\r\n  }\r\n\r\n  onDateSelect(date: NgbDate) {\r\n    this._service.focus(date);\r\n    this._service.select(date, {emitEvent: true});\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent) { this._keyMapService.processKey(event); }\r\n\r\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\r\n\r\n  onNavigateEvent(event: NavigationEvent) {\r\n    switch (event) {\r\n      case NavigationEvent.PREV:\r\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\r\n        break;\r\n      case NavigationEvent.NEXT:\r\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\r\n        break;\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\r\n\r\n  setDisabledState(isDisabled: boolean) { this._service.disabled = isDisabled; }\r\n\r\n  showFocus(focusVisible: boolean) { this._service.focusVisible = focusVisible; }\r\n\r\n  writeValue(value) { this._service.select(NgbDate.from(this._ngbDateAdapter.fromModel(value))); }\r\n}\r\n","import {Component, Input, TemplateRef, Output, EventEmitter} from '@angular/core';\r\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\r\nimport {NgbDate} from './ngb-date';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\nimport {DayTemplateContext} from './datepicker-day-template-context';\r\n\r\n@Component({\r\n  selector: 'ngb-datepicker-month-view',\r\n  host: {'role': 'grid'},\r\n  styles: [`\r\n    :host {\r\n      display: block;\r\n    }\r\n    .ngb-dp-weekday, .ngb-dp-week-number {\r\n      line-height: 2rem;\r\n      text-align: center;\r\n      font-style: italic;\r\n    }\r\n    .ngb-dp-weekday {\r\n      color: #5bc0de;\r\n      color: var(--info);\r\n    }\r\n    .ngb-dp-week {\r\n      border-radius: 0.25rem;\r\n      display: -ms-flexbox;\r\n      display: flex;\r\n    }\r\n    .ngb-dp-weekdays {\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.125);\r\n      border-radius: 0;\r\n    }\r\n    .ngb-dp-day, .ngb-dp-weekday, .ngb-dp-week-number {\r\n      width: 2rem;\r\n      height: 2rem;\r\n    }\r\n    .ngb-dp-day {\r\n      cursor: pointer;\r\n    }\r\n    .ngb-dp-day.disabled, .ngb-dp-day.hidden {\r\n      cursor: default;\r\n    }\r\n  `],\r\n  template: `\r\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays bg-light\">\r\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\r\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small\">\r\n        {{ i18n.getWeekdayShortName(w) }}\r\n      </div>\r\n    </div>\r\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\r\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\r\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\r\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" role=\"gridcell\"\r\n          [class.disabled]=\"day.context.disabled\"\r\n          [tabindex]=\"day.tabindex\"\r\n          [class.hidden]=\"day.hidden\"\r\n          [attr.aria-label]=\"day.ariaLabel\">\r\n          <ng-template [ngIf]=\"!day.hidden\">\r\n            <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  `\r\n})\r\nexport class NgbDatepickerMonthView {\r\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\r\n  @Input() month: MonthViewModel;\r\n  @Input() showWeekdays;\r\n  @Input() showWeekNumbers;\r\n\r\n  @Output() select = new EventEmitter<NgbDate>();\r\n\r\n  constructor(public i18n: NgbDatepickerI18n) {}\r\n\r\n  doSelect(day: DayViewModel) {\r\n    if (!day.context.disabled && !day.hidden) {\r\n      this.select.emit(day.date);\r\n    }\r\n  }\r\n}\r\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy} from '@angular/core';\r\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\r\nimport {NgbDate} from './ngb-date';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\n\r\n// The -ms- and -webkit- element for the CSS can be removed if we are generating the CSS using SASS.\r\n@Component({\r\n  selector: 'ngb-datepicker-navigation',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [`\r\n    :host {\r\n      display: -ms-flexbox;\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n    .ngb-dp-navigation-chevron {\r\n      border-style: solid;\r\n      border-width: 0.2em 0.2em 0 0;\r\n      display: inline-block;\r\n      width: 0.75em;\r\n      height: 0.75em;\r\n      margin-left: 0.25em;\r\n      margin-right: 0.15em;\r\n      transform: rotate(-135deg);\r\n      -ms-transform: rotate(-135deg);\r\n    }\r\n    .right .ngb-dp-navigation-chevron {\r\n      -ms-transform: rotate(45deg);\r\n      transform: rotate(45deg);\r\n      margin-left: 0.15em;\r\n      margin-right: 0.25em;\r\n    }\r\n    .ngb-dp-arrow {\r\n      display: -ms-flexbox;\r\n      display: flex;\r\n      -ms-flex: 1 1 auto;\r\n      flex-grow: 1;\r\n      padding-right: 0;\r\n      padding-left: 0;\r\n      margin: 0;\r\n      width: 2rem;\r\n      height: 2rem;\r\n    }\r\n    .ngb-dp-arrow.right {\r\n      -ms-flex-pack: end;\r\n      justify-content: flex-end;\r\n    }\r\n    .ngb-dp-arrow-btn {\r\n      padding: 0 0.25rem;\r\n      margin: 0 0.5rem;\r\n      border: none;\r\n      background-color: transparent;\r\n      z-index: 1;\r\n    }\r\n    .ngb-dp-arrow-btn:focus {\r\n      outline: auto 1px;\r\n    }\r\n    .ngb-dp-month-name {\r\n      font-size: larger;\r\n      height: 2rem;\r\n      line-height: 2rem;\r\n      text-align: center;\r\n    }\r\n    .ngb-dp-navigation-select {\r\n      display: -ms-flexbox;\r\n      display: flex;\r\n      -ms-flex: 1 1 9rem;\r\n      flex-grow: 1;\r\n      flex-basis: 9rem;\r\n    }\r\n  `],\r\n  template: `\r\n    <div class=\"ngb-dp-arrow\">\r\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"!!navigate.emit(navigation.PREV)\" [disabled]=\"prevDisabled\"\r\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\r\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\r\n        <span class=\"ngb-dp-navigation-chevron\"></span>\r\n      </button>\r\n    </div>\r\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\r\n      [date]=\"date\"\r\n      [disabled] = \"disabled\"\r\n      [months]=\"selectBoxes.months\"\r\n      [years]=\"selectBoxes.years\"\r\n      (select)=\"select.emit($event)\">\r\n    </ngb-datepicker-navigation-select>\r\n\r\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\r\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\r\n      <div class=\"ngb-dp-month-name\">\r\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\r\n      </div>\r\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\r\n    </ng-template>\r\n    <div class=\"ngb-dp-arrow right\">\r\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"!!navigate.emit(navigation.NEXT)\" [disabled]=\"nextDisabled\"\r\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\r\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\r\n        <span class=\"ngb-dp-navigation-chevron\"></span>\r\n      </button>\r\n    </div>\r\n    `\r\n})\r\nexport class NgbDatepickerNavigation {\r\n  navigation = NavigationEvent;\r\n\r\n  @Input() date: NgbDate;\r\n  @Input() disabled: boolean;\r\n  @Input() months: MonthViewModel[] = [];\r\n  @Input() showSelect: boolean;\r\n  @Input() prevDisabled: boolean;\r\n  @Input() nextDisabled: boolean;\r\n  @Input() selectBoxes: {years: number[], months: number[]};\r\n\r\n  @Output() navigate = new EventEmitter<NavigationEvent>();\r\n  @Output() select = new EventEmitter<NgbDate>();\r\n\r\n  constructor(public i18n: NgbDatepickerI18n) {}\r\n}\r\n","import {padNumber, toInteger, isNumber} from '../util/util';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\nimport {Injectable} from '@angular/core';\r\n\r\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\r\n  return new NgbDateISOParserFormatter();\r\n}\r\n\r\n/**\r\n * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker\r\n * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation\r\n * to use an alternative format.\r\n */\r\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY})\r\nexport abstract class NgbDateParserFormatter {\r\n  /**\r\n   * Parses the given value to an NgbDateStruct. Implementations should try their best to provide a result, even\r\n   * partial. They must return null if the value can't be parsed.\r\n   * @param value the value to parse\r\n   */\r\n  abstract parse(value: string): NgbDateStruct;\r\n\r\n  /**\r\n   * Formats the given date to a string. Implementations should return an empty string if the given date is null,\r\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\r\n   * @param date the date to format as a string\r\n   */\r\n  abstract format(date: NgbDateStruct): string;\r\n}\r\n\r\n@Injectable()\r\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\r\n  parse(value: string): NgbDateStruct {\r\n    if (value) {\r\n      const dateParts = value.trim().split('-');\r\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\r\n        return {year: toInteger(dateParts[0]), month: null, day: null};\r\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\r\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\r\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\r\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  format(date: NgbDateStruct): string {\r\n    return date ?\r\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\r\n        '';\r\n  }\r\n}\r\n","// previous version:\r\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\r\nexport class Positioning {\r\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\r\n\r\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\r\n\r\n  private isStaticPositioned(element: HTMLElement): boolean {\r\n    return (this.getStyle(element, 'position') || 'static') === 'static';\r\n  }\r\n\r\n  private offsetParent(element: HTMLElement): HTMLElement {\r\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\r\n\r\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\r\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\r\n    }\r\n\r\n    return offsetParentEl || document.documentElement;\r\n  }\r\n\r\n  position(element: HTMLElement, round = true): ClientRect {\r\n    let elPosition: ClientRect;\r\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\r\n\r\n    if (this.getStyle(element, 'position') === 'fixed') {\r\n      elPosition = element.getBoundingClientRect();\r\n    } else {\r\n      const offsetParentEl = this.offsetParent(element);\r\n\r\n      elPosition = this.offset(element, false);\r\n\r\n      if (offsetParentEl !== document.documentElement) {\r\n        parentOffset = this.offset(offsetParentEl, false);\r\n      }\r\n\r\n      parentOffset.top += offsetParentEl.clientTop;\r\n      parentOffset.left += offsetParentEl.clientLeft;\r\n    }\r\n\r\n    elPosition.top -= parentOffset.top;\r\n    elPosition.bottom -= parentOffset.top;\r\n    elPosition.left -= parentOffset.left;\r\n    elPosition.right -= parentOffset.left;\r\n\r\n    if (round) {\r\n      elPosition.top = Math.round(elPosition.top);\r\n      elPosition.bottom = Math.round(elPosition.bottom);\r\n      elPosition.left = Math.round(elPosition.left);\r\n      elPosition.right = Math.round(elPosition.right);\r\n    }\r\n\r\n    return elPosition;\r\n  }\r\n\r\n  offset(element: HTMLElement, round = true): ClientRect {\r\n    const elBcr = element.getBoundingClientRect();\r\n    const viewportOffset = {\r\n      top: window.pageYOffset - document.documentElement.clientTop,\r\n      left: window.pageXOffset - document.documentElement.clientLeft\r\n    };\r\n\r\n    let elOffset = {\r\n      height: elBcr.height || element.offsetHeight,\r\n      width: elBcr.width || element.offsetWidth,\r\n      top: elBcr.top + viewportOffset.top,\r\n      bottom: elBcr.bottom + viewportOffset.top,\r\n      left: elBcr.left + viewportOffset.left,\r\n      right: elBcr.right + viewportOffset.left\r\n    };\r\n\r\n    if (round) {\r\n      elOffset.height = Math.round(elOffset.height);\r\n      elOffset.width = Math.round(elOffset.width);\r\n      elOffset.top = Math.round(elOffset.top);\r\n      elOffset.bottom = Math.round(elOffset.bottom);\r\n      elOffset.left = Math.round(elOffset.left);\r\n      elOffset.right = Math.round(elOffset.right);\r\n    }\r\n\r\n    return elOffset;\r\n  }\r\n\r\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\r\n      ClientRect {\r\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\r\n    const targetElStyles = this.getAllStyles(targetElement);\r\n    const targetElBCR = targetElement.getBoundingClientRect();\r\n    const placementPrimary = placement.split('-')[0] || 'top';\r\n    const placementSecondary = placement.split('-')[1] || 'center';\r\n\r\n    let targetElPosition: ClientRect = {\r\n      'height': targetElBCR.height || targetElement.offsetHeight,\r\n      'width': targetElBCR.width || targetElement.offsetWidth,\r\n      'top': 0,\r\n      'bottom': targetElBCR.height || targetElement.offsetHeight,\r\n      'left': 0,\r\n      'right': targetElBCR.width || targetElement.offsetWidth\r\n    };\r\n\r\n    switch (placementPrimary) {\r\n      case 'top':\r\n        targetElPosition.top =\r\n            hostElPosition.top - (targetElement.offsetHeight + parseFloat(targetElStyles.marginBottom));\r\n        break;\r\n      case 'bottom':\r\n        targetElPosition.top = hostElPosition.top + hostElPosition.height;\r\n        break;\r\n      case 'left':\r\n        targetElPosition.left =\r\n            hostElPosition.left - (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\r\n        break;\r\n      case 'right':\r\n        targetElPosition.left = hostElPosition.left + hostElPosition.width;\r\n        break;\r\n    }\r\n\r\n    switch (placementSecondary) {\r\n      case 'top':\r\n        targetElPosition.top = hostElPosition.top;\r\n        break;\r\n      case 'bottom':\r\n        targetElPosition.top = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\r\n        break;\r\n      case 'left':\r\n        targetElPosition.left = hostElPosition.left;\r\n        break;\r\n      case 'right':\r\n        targetElPosition.left = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\r\n        break;\r\n      case 'center':\r\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\r\n          targetElPosition.left = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\r\n        } else {\r\n          targetElPosition.top = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\r\n        }\r\n        break;\r\n    }\r\n\r\n    targetElPosition.top = Math.round(targetElPosition.top);\r\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\r\n    targetElPosition.left = Math.round(targetElPosition.left);\r\n    targetElPosition.right = Math.round(targetElPosition.right);\r\n\r\n    return targetElPosition;\r\n  }\r\n\r\n  // get the available placements of the target element in the viewport depending on the host element\r\n  getAvailablePlacements(hostElement: HTMLElement, targetElement: HTMLElement): string[] {\r\n    let availablePlacements: Array<string> = [];\r\n    let hostElemClientRect = hostElement.getBoundingClientRect();\r\n    let targetElemClientRect = targetElement.getBoundingClientRect();\r\n    let html = document.documentElement;\r\n    let windowHeight = window.innerHeight || html.clientHeight;\r\n    let windowWidth = window.innerWidth || html.clientWidth;\r\n    let hostElemClientRectHorCenter = hostElemClientRect.left + hostElemClientRect.width / 2;\r\n    let hostElemClientRectVerCenter = hostElemClientRect.top + hostElemClientRect.height / 2;\r\n\r\n    // left: check if target width can be placed between host left and viewport start and also height of target is\r\n    // inside viewport\r\n    if (targetElemClientRect.width < hostElemClientRect.left) {\r\n      // check for left only\r\n      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\r\n          windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\r\n        availablePlacements.splice(availablePlacements.length, 1, 'left');\r\n      }\r\n      // check for left-top and left-bottom\r\n      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'left', availablePlacements);\r\n    }\r\n\r\n    // top: target height is less than host top\r\n    if (targetElemClientRect.height < hostElemClientRect.top) {\r\n      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\r\n          windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\r\n        availablePlacements.splice(availablePlacements.length, 1, 'top');\r\n      }\r\n      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'top', availablePlacements);\r\n    }\r\n\r\n    // right: check if target width can be placed between host right and viewport end and also height of target is\r\n    // inside viewport\r\n    if (windowWidth - hostElemClientRect.right > targetElemClientRect.width) {\r\n      // check for right only\r\n      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\r\n          windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\r\n        availablePlacements.splice(availablePlacements.length, 1, 'right');\r\n      }\r\n      // check for right-top and right-bottom\r\n      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'right', availablePlacements);\r\n    }\r\n\r\n    // bottom: check if there is enough space between host bottom and viewport end for target height\r\n    if (windowHeight - hostElemClientRect.bottom > targetElemClientRect.height) {\r\n      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\r\n          windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\r\n        availablePlacements.splice(availablePlacements.length, 1, 'bottom');\r\n      }\r\n      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'bottom', availablePlacements);\r\n    }\r\n\r\n    return availablePlacements;\r\n  }\r\n\r\n  /**\r\n   * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\r\n   * primaryplacement: left|right\r\n   * availablePlacementArr: array in which available placements to be set\r\n   */\r\n  private setSecondaryPlacementForLeftRight(\r\n      hostElemClientRect: ClientRect, targetElemClientRect: ClientRect, primaryPlacement: string,\r\n      availablePlacementArr: Array<string>) {\r\n    let html = document.documentElement;\r\n    // check for left-bottom\r\n    if (targetElemClientRect.height <= hostElemClientRect.bottom) {\r\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-bottom');\r\n    }\r\n    if ((window.innerHeight || html.clientHeight) - hostElemClientRect.top >= targetElemClientRect.height) {\r\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-top');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\r\n   * primaryplacement: top|bottom\r\n   * availablePlacementArr: array in which available placements to be set\r\n   */\r\n  private setSecondaryPlacementForTopBottom(\r\n      hostElemClientRect: ClientRect, targetElemClientRect: ClientRect, primaryPlacement: string,\r\n      availablePlacementArr: Array<string>) {\r\n    let html = document.documentElement;\r\n    // check for left-bottom\r\n    if ((window.innerWidth || html.clientWidth) - hostElemClientRect.left >= targetElemClientRect.width) {\r\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-left');\r\n    }\r\n    if (targetElemClientRect.width <= hostElemClientRect.right) {\r\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-right');\r\n    }\r\n  }\r\n}\r\n\r\nconst positionService = new Positioning();\r\n\r\n/*\r\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\r\n * Returns the applied placement.\r\n * In case of auto placement, placements are selected in order\r\n *   'top', 'bottom', 'left', 'right',\r\n *   'top-left', 'top-right',\r\n *   'bottom-left', 'bottom-right',\r\n *   'left-top', 'left-bottom',\r\n *   'right-top', 'right-bottom'.\r\n * */\r\nexport function positionElements(\r\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\r\n    appendToBody?: boolean): Placement {\r\n  let placementVals: Array<Placement> = Array.isArray(placement) ? placement : [placement as Placement];\r\n\r\n  // replace auto placement with other placements\r\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\r\n  if (hasAuto >= 0) {\r\n    ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top',\r\n     'left-bottom', 'right-top', 'right-bottom',\r\n    ].forEach(function(obj) {\r\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\r\n        placementVals.splice(hasAuto++, 1, obj as Placement);\r\n      }\r\n    });\r\n  }\r\n\r\n  // coordinates where to position\r\n  let topVal = 0, leftVal = 0;\r\n  let appliedPlacement: Placement;\r\n  // get available placements\r\n  let availablePlacements = positionService.getAvailablePlacements(hostElement, targetElement);\r\n  // iterate over all the passed placements\r\n  for (let { item, index } of toItemIndexes(placementVals)) {\r\n    // check if passed placement is present in the available placement or otherwise apply the last placement in the\r\n    // passed placement list\r\n    if ((availablePlacements.find(val => val === item) != null) || (placementVals.length === index + 1)) {\r\n      appliedPlacement = <Placement>item;\r\n      const pos = positionService.positionElements(hostElement, targetElement, item, appendToBody);\r\n      topVal = pos.top;\r\n      leftVal = pos.left;\r\n      break;\r\n    }\r\n  }\r\n  targetElement.style.top = `${topVal}px`;\r\n  targetElement.style.left = `${leftVal}px`;\r\n  return appliedPlacement;\r\n}\r\n\r\n// function to get index and item of an array\r\nfunction toItemIndexes<T>(a: T[]) {\r\n  return a.map((item, index) => ({item, index}));\r\n}\r\n\r\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\r\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\r\n\r\nexport type PlacementArray = Placement | Array<Placement>;\r\n","import {fromEvent, Observable} from 'rxjs';\r\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\r\nimport {Key} from '../util/key';\r\n\r\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\r\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\r\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\r\n].join(', ');\r\n\r\n/**\r\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\r\n */\r\nfunction getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\r\n  const list: NodeListOf<HTMLElement> = element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\r\n  return [list[0], list[list.length - 1]];\r\n}\r\n\r\n/**\r\n * Function that enforces browser focus to be trapped inside a DOM element.\r\n *\r\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\r\n *\r\n * @param element The element around which focus will be trapped inside\r\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\r\n * and free internal resources\r\n */\r\nexport const ngbFocusTrap = (element: HTMLElement, stopFocusTrap$: Observable<any>) => {\r\n  // last focused element\r\n  const lastFocusedElement$ =\r\n      fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\r\n\r\n  // 'tab' / 'shift+tab' stream\r\n  fromEvent<KeyboardEvent>(element, 'keydown')\r\n      .pipe(takeUntil(stopFocusTrap$), filter(e => e.which === Key.Tab), withLatestFrom(lastFocusedElement$))\r\n      .subscribe(([tabEvent, focusedElement]) => {\r\n        const[first, last] = getFocusableBoundaryElements(element);\r\n\r\n        if (focusedElement === first && tabEvent.shiftKey) {\r\n          last.focus();\r\n          tabEvent.preventDefault();\r\n        }\r\n\r\n        if (focusedElement === last && !tabEvent.shiftKey) {\r\n          first.focus();\r\n          tabEvent.preventDefault();\r\n        }\r\n      });\r\n\r\n  // inside click\r\n  fromEvent(element, 'click')\r\n      .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\r\n      .subscribe(lastFocusedElement => lastFocusedElement.focus());\r\n};\r\n","import {\r\n  Directive,\r\n  Input,\r\n  ComponentRef,\r\n  ElementRef,\r\n  ViewContainerRef,\r\n  Renderer2,\r\n  ComponentFactoryResolver,\r\n  NgZone,\r\n  TemplateRef,\r\n  forwardRef,\r\n  EventEmitter,\r\n  Output,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  Inject\r\n} from '@angular/core';\r\nimport {AbstractControl, ControlValueAccessor, Validator, NG_VALUE_ACCESSOR, NG_VALIDATORS} from '@angular/forms';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\nimport {NgbDate} from './ngb-date';\r\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\r\nimport {DayTemplateContext} from './datepicker-day-template-context';\r\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\r\n\r\nimport {positionElements, PlacementArray} from '../util/positioning';\r\nimport {ngbFocusTrap} from '../util/focus-trap';\r\nimport {Key} from '../util/key';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\r\nimport {NgbCalendar} from './ngb-calendar';\r\nimport {NgbDatepickerService} from './datepicker-service';\r\n\r\nimport {Subject, fromEvent, race, NEVER} from 'rxjs';\r\nimport {filter, takeUntil} from 'rxjs/operators';\r\n\r\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => NgbInputDatepicker),\r\n  multi: true\r\n};\r\n\r\nconst NGB_DATEPICKER_VALIDATOR = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => NgbInputDatepicker),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * A directive that makes it possible to have datepickers on input fields.\r\n * Manages integration with the input field itself (data entry) and ngModel (validation etc.).\r\n */\r\n@Directive({\r\n  selector: 'input[ngbDatepicker]',\r\n  exportAs: 'ngbDatepicker',\r\n  host: {\r\n    '(input)': 'manualDateChange($event.target.value)',\r\n    '(change)': 'manualDateChange($event.target.value, true)',\r\n    '(blur)': 'onBlur()',\r\n    '[disabled]': 'disabled'\r\n  },\r\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR, NgbDatepickerService]\r\n})\r\nexport class NgbInputDatepicker implements OnChanges,\r\n    OnDestroy, ControlValueAccessor, Validator {\r\n  private _closed$ = new Subject();\r\n  private _cRef: ComponentRef<NgbDatepicker> = null;\r\n  private _disabled = false;\r\n  private _model: NgbDate;\r\n  private _zoneSubscription: any;\r\n\r\n  /**\r\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\r\n   *\r\n   * By default the popup will close on both date selection and outside click. If the value is 'false' the popup has to\r\n   * be closed manually via '.close()' or '.toggle()' methods. If the value is set to 'inside' the popup will close on\r\n   * date selection only. For the 'outside' the popup will close only on the outside click.\r\n   *\r\n   * @since 3.0.0\r\n   */\r\n  @Input() autoClose: boolean | 'inside' | 'outside' = true;\r\n\r\n  /**\r\n   * Reference for the custom template for the day display\r\n   */\r\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\r\n\r\n  /**\r\n   * Number of months to display\r\n   */\r\n  @Input() displayMonths: number;\r\n\r\n  /**\r\n   * First day of the week. With default calendar we use ISO 8601: 1=Mon ... 7=Sun\r\n   */\r\n  @Input() firstDayOfWeek: number;\r\n\r\n  /**\r\n   * Callback to mark a given date as disabled.\r\n   * 'Current' contains the month that will be displayed in the view\r\n   */\r\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\r\n\r\n  /**\r\n   * Min date for the navigation. If not provided will be 10 years before today or `startDate`\r\n   */\r\n  @Input() minDate: NgbDateStruct;\r\n\r\n  /**\r\n   * Max date for the navigation. If not provided will be 10 years from today or `startDate`\r\n   */\r\n  @Input() maxDate: NgbDateStruct;\r\n\r\n  /**\r\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\r\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\r\n   */\r\n  @Input() navigation: 'select' | 'arrows' | 'none';\r\n\r\n  /**\r\n   * The way to display days that don't belong to current month: `visible` (default),\r\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\r\n   */\r\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\r\n\r\n  /**\r\n   * Placement of a datepicker popup accepts:\r\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\r\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\r\n   * and array of above values.\r\n   */\r\n  @Input() placement: PlacementArray = 'bottom-left';\r\n\r\n  /**\r\n   * Whether to display days of the week\r\n   */\r\n  @Input() showWeekdays: boolean;\r\n\r\n  /**\r\n   * Whether to display week numbers\r\n   */\r\n  @Input() showWeekNumbers: boolean;\r\n\r\n  /**\r\n   * Date to open calendar with.\r\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n   * If nothing or invalid date provided, calendar will open with current month.\r\n   * Use 'navigateTo(date)' as an alternative\r\n   */\r\n  @Input() startDate: {year: number, month: number};\r\n\r\n  /**\r\n   * A selector specifying the element the datepicker popup should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  @Input() container: string;\r\n\r\n  /**\r\n   * An event fired when user selects a date using keyboard or mouse.\r\n   * The payload of the event is currently selected NgbDate.\r\n   *\r\n   * @since 1.1.1\r\n   */\r\n  @Output() dateSelect = new EventEmitter<NgbDate>();\r\n\r\n  /**\r\n   * An event fired when navigation happens and currently displayed month changes.\r\n   * See NgbDatepickerNavigateEvent for the payload info.\r\n   */\r\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\r\n\r\n  @Input()\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: any) {\r\n    this._disabled = value === '' || (value && value !== 'false');\r\n\r\n    if (this.isOpen()) {\r\n      this._cRef.instance.setDisabledState(this._disabled);\r\n    }\r\n  }\r\n\r\n  private _onChange = (_: any) => {};\r\n  private _onTouched = () => {};\r\n  private _validatorChange = () => {};\r\n\r\n\r\n  constructor(\r\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\r\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\r\n      private _ngZone: NgZone, private _service: NgbDatepickerService, private _calendar: NgbCalendar,\r\n      private _dateAdapter: NgbDateAdapter<any>, @Inject(DOCUMENT) private _document: any) {\r\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\r\n      if (this._cRef) {\r\n        positionElements(\r\n            this._elRef.nativeElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\r\n      }\r\n    });\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\r\n\r\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\r\n\r\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\r\n\r\n  validate(c: AbstractControl): {[key: string]: any} {\r\n    const value = c.value;\r\n\r\n    if (value === null || value === undefined) {\r\n      return null;\r\n    }\r\n\r\n    const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\r\n\r\n    if (!this._calendar.isValid(ngbDate)) {\r\n      return {'ngbDate': {invalid: c.value}};\r\n    }\r\n\r\n    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\r\n      return {'ngbDate': {requiredBefore: this.minDate}};\r\n    }\r\n\r\n    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\r\n      return {'ngbDate': {requiredAfter: this.maxDate}};\r\n    }\r\n  }\r\n\r\n  writeValue(value) {\r\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\r\n    this._writeModelValue(this._model);\r\n  }\r\n\r\n  manualDateChange(value: string, updateView = false) {\r\n    this._model = this._fromDateStruct(this._parserFormatter.parse(value));\r\n    this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\r\n    if (updateView && this._model) {\r\n      this._writeModelValue(this._model);\r\n    }\r\n  }\r\n\r\n  isOpen() { return !!this._cRef; }\r\n\r\n  /**\r\n   * Opens the datepicker with the selected date indicated by the ngModel value.\r\n   */\r\n  open() {\r\n    if (!this.isOpen()) {\r\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\r\n      this._cRef = this._vcRef.createComponent(cf);\r\n\r\n      this._applyPopupStyling(this._cRef.location.nativeElement);\r\n      this._applyDatepickerInputs(this._cRef.instance);\r\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\r\n      this._cRef.instance.ngOnInit();\r\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\r\n\r\n      // date selection event handling\r\n      this._cRef.instance.registerOnChange((selectedDate) => {\r\n        this.writeValue(selectedDate);\r\n        this._onChange(selectedDate);\r\n      });\r\n\r\n      this._cRef.changeDetectorRef.detectChanges();\r\n\r\n      this._cRef.instance.setDisabledState(this.disabled);\r\n\r\n      if (this.container === 'body') {\r\n        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\r\n      }\r\n\r\n      // focus handling\r\n      ngbFocusTrap(this._cRef.location.nativeElement, this._closed$);\r\n\r\n      this._cRef.instance.focus();\r\n\r\n      // closing on ESC and outside clicks\r\n      this._ngZone.runOutsideAngular(() => {\r\n\r\n        const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\r\n                             .pipe(takeUntil(this._closed$), filter(e => e.which === Key.Escape));\r\n\r\n        let outsideClicks$;\r\n        if (this.autoClose === true || this.autoClose === 'outside') {\r\n          // we don't know how the popup was opened, so if it was opened with a click,\r\n          // we have to skip the first one to avoid closing it immediately\r\n          let isOpening = true;\r\n          requestAnimationFrame(() => isOpening = false);\r\n\r\n          outsideClicks$ =\r\n              fromEvent<MouseEvent>(this._document, 'click')\r\n                  .pipe(\r\n                      takeUntil(this._closed$), filter(event => !isOpening && this._shouldCloseOnOutsideClick(event)));\r\n        } else {\r\n          outsideClicks$ = NEVER;\r\n        }\r\n\r\n        race<Event>([escapes$, outsideClicks$]).subscribe(() => this._ngZone.run(() => this.close()));\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the datepicker popup.\r\n   */\r\n  close() {\r\n    if (this.isOpen()) {\r\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\r\n      this._cRef = null;\r\n      this._closed$.next();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the datepicker popup (opens when closed and closes when opened).\r\n   */\r\n  toggle() {\r\n    if (this.isOpen()) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navigates current view to provided date.\r\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n   * If nothing or invalid date provided calendar will open current month.\r\n   * Use 'startDate' input as an alternative\r\n   */\r\n  navigateTo(date?: {year: number, month: number}) {\r\n    if (this.isOpen()) {\r\n      this._cRef.instance.navigateTo(date);\r\n    }\r\n  }\r\n\r\n  onBlur() { this._onTouched(); }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['minDate'] || changes['maxDate']) {\r\n      this._validatorChange();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.close();\r\n    this._zoneSubscription.unsubscribe();\r\n  }\r\n\r\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\r\n    ['dayTemplate', 'displayMonths', 'firstDayOfWeek', 'markDisabled', 'minDate', 'maxDate', 'navigation',\r\n     'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\r\n        .forEach((optionName: string) => {\r\n          if (this[optionName] !== undefined) {\r\n            datepickerInstance[optionName] = this[optionName];\r\n          }\r\n        });\r\n    datepickerInstance.startDate = this.startDate || this._model;\r\n  }\r\n\r\n  private _applyPopupStyling(nativeElement: any) {\r\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\r\n    this._renderer.setStyle(nativeElement, 'padding', '0');\r\n    this._renderer.addClass(nativeElement, 'show');\r\n  }\r\n\r\n  private _shouldCloseOnOutsideClick(event: MouseEvent) {\r\n    return ![this._elRef.nativeElement, this._cRef.location.nativeElement].some(el => el.contains(event.target));\r\n  }\r\n\r\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\r\n    datepickerInstance.navigate.subscribe(date => this.navigate.emit(date));\r\n    datepickerInstance.select.subscribe(date => {\r\n      this.dateSelect.emit(date);\r\n      if (this.autoClose === true || this.autoClose === 'inside') {\r\n        this.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  private _writeModelValue(model: NgbDate) {\r\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', this._parserFormatter.format(model));\r\n    if (this.isOpen()) {\r\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\r\n      this._onTouched();\r\n    }\r\n  }\r\n\r\n  private _fromDateStruct(date: NgbDateStruct): NgbDate {\r\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\r\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\r\n  }\r\n}\r\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {NgbDate} from './ngb-date';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\n\r\n@Component({\r\n  selector: '[ngbDatepickerDayView]',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [`\r\n    :host {\r\n      text-align: center;\r\n      width: 2rem;\r\n      height: 2rem;\r\n      line-height: 2rem;\r\n      border-radius: 0.25rem;\r\n      background: transparent;\r\n    }\r\n    :host.outside {\r\n      opacity: 0.5;\r\n    }\r\n  `],\r\n  host: {\r\n    'class': 'btn-light',\r\n    '[class.bg-primary]': 'selected',\r\n    '[class.text-white]': 'selected',\r\n    '[class.text-muted]': 'isMuted()',\r\n    '[class.outside]': 'isMuted()',\r\n    '[class.active]': 'focused'\r\n  },\r\n  template: `{{ i18n.getDayNumerals(date) }}`\r\n})\r\nexport class NgbDatepickerDayView {\r\n  @Input() currentMonth: number;\r\n  @Input() date: NgbDate;\r\n  @Input() disabled: boolean;\r\n  @Input() focused: boolean;\r\n  @Input() selected: boolean;\r\n\r\n  constructor(public i18n: NgbDatepickerI18n) {}\r\n\r\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\r\n}\r\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy} from '@angular/core';\r\nimport {NgbDate} from './ngb-date';\r\nimport {toInteger} from '../util/util';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\n\r\n@Component({\r\n  selector: 'ngb-datepicker-navigation-select',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [`\r\n    :host>select {\r\n      display: flex;\r\n      display: -ms-flexbox;\r\n      -ms-flex: 1 1 auto;\r\n      width: 100%;\r\n      padding: 0 0.5rem;\r\n      font-size: 0.875rem;\r\n      height: 1.85rem;\r\n    }\r\n  `],\r\n  template: `\r\n    <select\r\n      [disabled]=\"disabled\"\r\n      class=\"custom-select\"\r\n      [value]=\"date?.month\"\r\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\r\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\r\n      (change)=\"changeMonth($event.target.value)\">\r\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\r\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\r\n    </select><select\r\n      [disabled]=\"disabled\"\r\n      class=\"custom-select\"\r\n      [value]=\"date?.year\"\r\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\r\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\r\n      (change)=\"changeYear($event.target.value)\">\r\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\r\n    </select>\r\n  `\r\n})\r\nexport class NgbDatepickerNavigationSelect {\r\n  @Input() date: NgbDate;\r\n  @Input() disabled: boolean;\r\n  @Input() months: number[];\r\n  @Input() years: number[];\r\n\r\n  @Output() select = new EventEmitter<NgbDate>();\r\n\r\n  constructor(public i18n: NgbDatepickerI18n) {}\r\n\r\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\r\n\r\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\r\n}\r\n","import {NgbDate} from '../ngb-date';\r\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\r\nimport {Injectable} from '@angular/core';\r\nimport {isNumber} from '../../util/util';\r\n\r\n@Injectable()\r\nexport abstract class NgbCalendarHijri extends NgbCalendar {\r\n  /**\r\n   * Returns the number of days in a specific Hijri month.\r\n   * `month` is 1 for Muharram, 2 for Safar, etc.\r\n   * `year` is any Hijri year.\r\n   */\r\n  abstract getDaysPerMonth(month: number, year: number): number;\r\n\r\n  /**\r\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\r\n   * `gDate` is s JS Date to be converted to Hijri.\r\n   */\r\n  abstract fromGregorian(gDate: Date): NgbDate;\r\n\r\n  /**\r\n   * Converts the current Hijri date to Gregorian.\r\n   */\r\n  abstract toGregorian(hDate: NgbDate): Date;\r\n\r\n  getDaysPerWeek() { return 7; }\r\n\r\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\r\n\r\n  getWeeksPerMonth() { return 6; }\r\n\r\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\r\n    date = new NgbDate(date.year, date.month, date.day);\r\n\r\n    switch (period) {\r\n      case 'y':\r\n        date = this._setYear(date, date.year + number);\r\n        date.month = 1;\r\n        date.day = 1;\r\n        return date;\r\n      case 'm':\r\n        date = this._setMonth(date, date.month + number);\r\n        date.day = 1;\r\n        return date;\r\n      case 'd':\r\n        return this._setDay(date, date.day + number);\r\n      default:\r\n        return date;\r\n    }\r\n  }\r\n\r\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\r\n\r\n  getWeekday(date: NgbDate) {\r\n    const day = this.toGregorian(date).getDay();\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    return day === 0 ? 7 : day;\r\n  }\r\n\r\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    if (firstDayOfWeek === 7) {\r\n      firstDayOfWeek = 0;\r\n    }\r\n\r\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\r\n    const date = week[thursdayIndex];\r\n\r\n    const jsDate = this.toGregorian(date);\r\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\r\n    const time = jsDate.getTime();\r\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\r\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\r\n  }\r\n\r\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\r\n\r\n\r\n  isValid(date: NgbDate): boolean {\r\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\r\n        !isNaN(this.toGregorian(date).getTime());\r\n  }\r\n\r\n  private _setDay(date: NgbDate, day: number): NgbDate {\r\n    day = +day;\r\n    let mDays = this.getDaysPerMonth(date.month, date.year);\r\n    if (day <= 0) {\r\n      while (day <= 0) {\r\n        date = this._setMonth(date, date.month - 1);\r\n        mDays = this.getDaysPerMonth(date.month, date.year);\r\n        day += mDays;\r\n      }\r\n    } else if (day > mDays) {\r\n      while (day > mDays) {\r\n        day -= mDays;\r\n        date = this._setMonth(date, date.month + 1);\r\n        mDays = this.getDaysPerMonth(date.month, date.year);\r\n      }\r\n    }\r\n    date.day = day;\r\n    return date;\r\n  }\r\n\r\n  private _setMonth(date: NgbDate, month: number): NgbDate {\r\n    month = +month;\r\n    date.year = date.year + Math.floor((month - 1) / 12);\r\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\r\n    return date;\r\n  }\r\n\r\n  private _setYear(date: NgbDate, year: number): NgbDate {\r\n    date.year = +year;\r\n    return date;\r\n  }\r\n}\r\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\r\nimport {NgbDate} from '../ngb-date';\r\nimport {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Checks if islamic year is a leap year\r\n */\r\nfunction isIslamicLeapYear(hYear: number): boolean {\r\n  return (14 + 11 * hYear) % 30 < 11;\r\n}\r\n\r\n/**\r\n * Checks if gregorian years is a leap year\r\n */\r\nfunction isGregorianLeapYear(gDate: Date): boolean {\r\n  const year = gDate.getFullYear();\r\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\r\n}\r\n\r\n/**\r\n * Returns the start of Hijri Month.\r\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\r\n * `hYear` is any Hijri hYear.\r\n */\r\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\r\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\r\n}\r\n\r\n/**\r\n * Returns the start of Hijri year.\r\n * `year` is any Hijri year.\r\n */\r\nfunction getIslamicYearStart(year: number): number {\r\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\r\n}\r\n\r\nfunction mod(a: number, b: number): number {\r\n  return a - b * Math.floor(a / b);\r\n}\r\n\r\n/**\r\n * The civil calendar is one type of Hijri calendars used in islamic countries.\r\n * Uses a fixed cycle of alternating 29- and 30-day months,\r\n * with a leap day added to the last month of 11 out of every 30 years.\r\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\r\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\r\n * Dershowitz.\r\n */\r\n\r\nconst GREGORIAN_EPOCH = 1721425.5;\r\nconst ISLAMIC_EPOCH = 1948439.5;\r\n\r\n@Injectable()\r\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\r\n  /**\r\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\r\n   * `gDate` is a JS Date to be converted to Hijri.\r\n   */\r\n  fromGregorian(gDate: Date): NgbDate {\r\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\r\n\r\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\r\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\r\n        Math.floor(\r\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\r\n    julianDay = Math.floor(julianDay) + 0.5;\r\n\r\n    const days = julianDay - ISLAMIC_EPOCH;\r\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\r\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\r\n    hMonth = Math.min(hMonth, 11);\r\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\r\n    return new NgbDate(hYear, hMonth + 1, hDay);\r\n  }\r\n\r\n  /**\r\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\r\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\r\n   */\r\n  toGregorian(hDate: NgbDate): Date {\r\n    const hYear = hDate.year;\r\n    const hMonth = hDate.month - 1;\r\n    const hDay = hDate.day;\r\n    const julianDay =\r\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\r\n\r\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\r\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\r\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\r\n          yindex = Math.floor(dquad / 365);\r\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\r\n    if (!(cent === 4 || yindex === 4)) {\r\n      year++;\r\n    }\r\n\r\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\r\n        Math.floor((year - 1) / 400);\r\n\r\n    const yearday = wjd - gYearStart;\r\n\r\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\r\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\r\n\r\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\r\n\r\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\r\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\r\n        Math.floor((year - 1) / 400) +\r\n        Math.floor(\r\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\r\n            1);\r\n\r\n    const day = wjd - tjd2 + 1;\r\n\r\n    return new Date(year, month - 1, day);\r\n  }\r\n\r\n  /**\r\n   * Returns the number of days in a specific Hijri month.\r\n   * `month` is 1 for Muharram, 2 for Safar, etc.\r\n   * `year` is any Hijri year.\r\n   */\r\n  getDaysPerMonth(month: number, year: number): number {\r\n    year = year + Math.floor(month / 13);\r\n    month = ((month - 1) % 12) + 1;\r\n    let length = 29 + month % 2;\r\n    if (month === 12 && isIslamicLeapYear(year)) {\r\n      length++;\r\n    }\r\n    return length;\r\n  }\r\n}\r\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\r\nimport {NgbDate} from '../ngb-date';\r\nimport {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\r\n * This Calendar is used by Saudi Arabia for administrative purpose.\r\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\r\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\r\n */\r\n\r\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\r\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\r\nconst HIJRI_BEGIN = 1300;\r\nconst HIJRI_END = 1600;\r\nconst ONE_DAY = 1000 * 60 * 60 * 24;\r\n\r\nconst MONTH_LENGTH = [\r\n  // 1300-1304\r\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\r\n  // 1305-1309\r\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\r\n  // 1310-1314\r\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\r\n  // 1315-1319\r\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\r\n  // 1320-1324\r\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\r\n  // 1325-1329\r\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\r\n  // 1330-1334\r\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\r\n  // 1335-1339\r\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\r\n  // 1340-1344\r\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\r\n  // 1345-1349\r\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\r\n  // 1350-1354\r\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\r\n  // 1355-1359\r\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\r\n  // 1360-1364\r\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\r\n  // 1365-1369\r\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\r\n  // 1370-1374\r\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\r\n  // 1375-1379\r\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\r\n  // 1380-1384\r\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\r\n  // 1385-1389\r\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\r\n  // 1390-1394\r\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\r\n  // 1395-1399\r\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\r\n  // 1400-1404\r\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\r\n  // 1405-1409\r\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\r\n  // 1410-1414\r\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\r\n  // 1415-1419\r\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\r\n  // 1420-1424\r\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\r\n  // 1425-1429\r\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\r\n  // 1430-1434\r\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\r\n  // 1435-1439\r\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\r\n  // 1440-1444\r\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\r\n  // 1445-1449\r\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\r\n  // 1450-1454\r\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\r\n  // 1455-1459\r\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\r\n  // 1460-1464\r\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\r\n  // 1465-1469\r\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\r\n  // 1470-1474\r\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\r\n  // 1475-1479\r\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\r\n  // 1480-1484\r\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\r\n  // 1485-1489\r\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\r\n  // 1490-1494\r\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\r\n  // 1495-1499\r\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\r\n  // 1500-1504\r\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\r\n  // 1505-1509\r\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\r\n  // 1510-1514\r\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\r\n  // 1515-1519\r\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\r\n  // 1520-1524\r\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\r\n  // 1525-1529\r\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\r\n  // 1530-1534\r\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\r\n  // 1535-1539\r\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\r\n  // 1540-1544\r\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\r\n  // 1545-1549\r\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\r\n  // 1550-1554\r\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\r\n  // 1555-1559\r\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\r\n  // 1560-1564\r\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\r\n  // 1565-1569\r\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\r\n  // 1570-1574\r\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\r\n  // 1575-1579\r\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\r\n  // 1580-1584\r\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\r\n  // 1585-1589\r\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\r\n  // 1590-1594\r\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\r\n  // 1595-1599\r\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\r\n  // 1600\r\n  '001010011101'\r\n];\r\n\r\nfunction getDaysDiff(date1: Date, date2: Date): number {\r\n  const diff = Math.abs(date1.getTime() - date2.getTime());\r\n  return Math.round(diff / ONE_DAY);\r\n}\r\n\r\n@Injectable()\r\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\r\n  /**\r\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\r\n  * `gdate` is s JS Date to be converted to Hijri.\r\n  */\r\n  fromGregorian(gDate: Date): NgbDate {\r\n    let hDay = 1, hMonth = 0, hYear = 1300;\r\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\r\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\r\n      let year = 1300;\r\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\r\n        for (let j = 0; j < 12; j++) {\r\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\r\n          if (daysDiff <= numOfDays) {\r\n            hDay = daysDiff + 1;\r\n            if (hDay > numOfDays) {\r\n              hDay = 1;\r\n              j++;\r\n            }\r\n            if (j > 11) {\r\n              j = 0;\r\n              year++;\r\n            }\r\n            hMonth = j;\r\n            hYear = year;\r\n            return new NgbDate(hYear, hMonth + 1, hDay);\r\n          }\r\n          daysDiff = daysDiff - numOfDays;\r\n        }\r\n      }\r\n    } else {\r\n      return super.fromGregorian(gDate);\r\n    }\r\n  }\r\n  /**\r\n  * Converts the current Hijri date to Gregorian.\r\n  */\r\n  toGregorian(hDate: NgbDate): Date {\r\n    const hYear = hDate.year;\r\n    const hMonth = hDate.month - 1;\r\n    const hDay = hDate.day;\r\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\r\n    let dayDiff = hDay - 1;\r\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\r\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\r\n        for (let m = 0; m < 12; m++) {\r\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\r\n        }\r\n      }\r\n      for (let m = 0; m < hMonth; m++) {\r\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\r\n      }\r\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\r\n    } else {\r\n      gDate = super.toGregorian(hDate);\r\n    }\r\n    return gDate;\r\n  }\r\n  /**\r\n  * Returns the number of days in a specific Hijri hMonth.\r\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\r\n  * `hYear` is any Hijri hYear.\r\n  */\r\n  getDaysPerMonth(hMonth: number, hYear: number): number {\r\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\r\n      const pos = hYear - HIJRI_BEGIN;\r\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\r\n    }\r\n    return super.getDaysPerMonth(hMonth, hYear);\r\n  }\r\n}\r\n","import {NgbDate} from '../ngb-date';\r\n\r\n/**\r\n * Returns the equivalent JS date value for a give input Jalali date.\r\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\r\n */\r\nexport function toGregorian(jalaliDate: NgbDate): Date {\r\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\r\n  let date = julianToGregorian(jdn);\r\n  date.setHours(6, 30, 3, 200);\r\n  return date;\r\n}\r\n\r\n/**\r\n * Returns the equivalent jalali date value for a give input Gregorian date.\r\n * `gdate` is a JS Date to be converted to jalali.\r\n * utc to local\r\n */\r\nexport function fromGregorian(gdate: Date): NgbDate {\r\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\r\n  return julianToJalali(g2d);\r\n}\r\n\r\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\r\n  date.year = +yearValue;\r\n  return date;\r\n}\r\n\r\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\r\n  month = +month;\r\n  date.year = date.year + Math.floor((month - 1) / 12);\r\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\r\n  return date;\r\n}\r\n\r\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\r\n  let mDays = getDaysPerMonth(date.month, date.year);\r\n  if (day <= 0) {\r\n    while (day <= 0) {\r\n      date = setJalaliMonth(date, date.month - 1);\r\n      mDays = getDaysPerMonth(date.month, date.year);\r\n      day += mDays;\r\n    }\r\n  } else if (day > mDays) {\r\n    while (day > mDays) {\r\n      day -= mDays;\r\n      date = setJalaliMonth(date, date.month + 1);\r\n      mDays = getDaysPerMonth(date.month, date.year);\r\n    }\r\n  }\r\n  date.day = day;\r\n  return date;\r\n}\r\n\r\nfunction mod(a: number, b: number): number {\r\n  return a - b * Math.floor(a / b);\r\n}\r\n\r\nfunction div(a: number, b: number) {\r\n  return Math.trunc(a / b);\r\n}\r\n\r\n/*\r\n This function determines if the Jalali (Persian) year is\r\n leap (366-day long) or is the common year (365 days), and\r\n finds the day in March (Gregorian calendar) of the first\r\n day of the Jalali year (jalaliYear).\r\n @param jalaliYear Jalali calendar year (-61 to 3177)\r\n @return\r\n leap: number of years since the last leap year (0 to 4)\r\n gYear: Gregorian year of the beginning of Jalali year\r\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\r\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\r\n @see: http://www.fourmilab.ch/documents/calendar/\r\n */\r\nfunction jalCal(jalaliYear: number) {\r\n  // Jalali years starting the 33-year rule.\r\n  let breaks =\r\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\r\n  const breaksLength = breaks.length;\r\n  const gYear = jalaliYear + 621;\r\n  let leapJ = -14;\r\n  let jp = breaks[0];\r\n\r\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\r\n    throw new Error('Invalid Jalali year ' + jalaliYear);\r\n  }\r\n\r\n  // Find the limiting years for the Jalali year jalaliYear.\r\n  let jump;\r\n  for (let i = 1; i < breaksLength; i += 1) {\r\n    const jm = breaks[i];\r\n    jump = jm - jp;\r\n    if (jalaliYear < jm) {\r\n      break;\r\n    }\r\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\r\n    jp = jm;\r\n  }\r\n  let n = jalaliYear - jp;\r\n\r\n  // Find the number of leap years from AD 621 to the beginning\r\n  // of the current Jalali year in the Persian calendar.\r\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\r\n  if (mod(jump, 33) === 4 && jump - n === 4) {\r\n    leapJ += 1;\r\n  }\r\n\r\n  // And the same in the Gregorian calendar (until the year gYear).\r\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\r\n\r\n  // Determine the Gregorian date of Farvardin the 1st.\r\n  const march = 20 + leapJ - leapG;\r\n\r\n  // Find how many years have passed since the last leap year.\r\n  if (jump - n < 6) {\r\n    n = n - jump + div(jump + 4, 33) * 33;\r\n  }\r\n  let leap = mod(mod(n + 1, 33) - 1, 4);\r\n  if (leap === -1) {\r\n    leap = 4;\r\n  }\r\n\r\n  return {leap: leap, gy: gYear, march: march};\r\n}\r\n\r\n/*\r\n Calculates Gregorian and Julian calendar dates from the Julian Day number\r\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\r\n calendars) to some millions years ahead of the present.\r\n @param jdn Julian Day number\r\n @return\r\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\r\n gMonth: Calendar month (1 to 12)\r\n gDay: Calendar day of the month M (1 to 28/29/30/31)\r\n */\r\nfunction julianToGregorian(julianDayNumber: number) {\r\n  let j = 4 * julianDayNumber + 139361631;\r\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\r\n  const i = div(mod(j, 1461), 4) * 5 + 308;\r\n  const gDay = div(mod(i, 153), 5) + 1;\r\n  const gMonth = mod(div(i, 153), 12) + 1;\r\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\r\n\r\n  return new Date(gYear, gMonth - 1, gDay);\r\n}\r\n\r\n/*\r\n Converts a date of the Jalali calendar to the Julian Day number.\r\n @param jy Jalali year (1 to 3100)\r\n @param jm Jalali month (1 to 12)\r\n @param jd Jalali day (1 to 29/31)\r\n @return Julian Day number\r\n */\r\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\r\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\r\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\r\n  return d;\r\n}\r\n\r\n/*\r\n Converts the Julian Day number to a date in the Jalali calendar.\r\n @param julianDayNumber Julian Day number\r\n @return\r\n jalaliYear: Jalali year (1 to 3100)\r\n jalaliMonth: Jalali month (1 to 12)\r\n jalaliDay: Jalali day (1 to 29/31)\r\n */\r\nfunction julianToJalali(julianDayNumber: number) {\r\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\r\n      ,\r\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\r\n      jalaliMonth, numberOfDays;\r\n\r\n  // Find number of days that passed since 1 Farvardin.\r\n  numberOfDays = julianDayNumber - gregorianDay;\r\n  if (numberOfDays >= 0) {\r\n    if (numberOfDays <= 185) {\r\n      // The first 6 months.\r\n      jalaliMonth = 1 + div(numberOfDays, 31);\r\n      jalaliDay = mod(numberOfDays, 31) + 1;\r\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\r\n    } else {\r\n      // The remaining months.\r\n      numberOfDays -= 186;\r\n    }\r\n  } else {\r\n    // Previous Jalali year.\r\n    jalaliYear -= 1;\r\n    numberOfDays += 179;\r\n    if (r.leap === 1) {\r\n      numberOfDays += 1;\r\n    }\r\n  }\r\n  jalaliMonth = 7 + div(numberOfDays, 30);\r\n  jalaliDay = mod(numberOfDays, 30) + 1;\r\n\r\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\r\n}\r\n\r\n/*\r\n Converts a date of the Jalali calendar to the Julian Day number.\r\n @param jYear Jalali year (1 to 3100)\r\n @param jMonth Jalali month (1 to 12)\r\n @param jDay Jalali day (1 to 29/31)\r\n @return Julian Day number\r\n */\r\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\r\n  let r = jalCal(jYear);\r\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\r\n}\r\n\r\n/**\r\n * Returns the number of days in a specific jalali month.\r\n */\r\nfunction getDaysPerMonth(month: number, year: number): number {\r\n  if (month <= 6) {\r\n    return 31;\r\n  }\r\n  if (month <= 11) {\r\n    return 30;\r\n  }\r\n  if (jalCal(year).leap === 0) {\r\n    return 30;\r\n  }\r\n  return 29;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbDate} from '../ngb-date';\r\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\r\nimport {isInteger} from '../../util/util';\r\n\r\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\r\n\r\n@Injectable()\r\nexport class NgbCalendarPersian extends NgbCalendar {\r\n  getDaysPerWeek() { return 7; }\r\n\r\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\r\n\r\n  getWeeksPerMonth() { return 6; }\r\n\r\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\r\n    date = new NgbDate(date.year, date.month, date.day);\r\n\r\n    switch (period) {\r\n      case 'y':\r\n        date = setJalaliYear(date, date.year + number);\r\n        date.month = 1;\r\n        date.day = 1;\r\n        return date;\r\n      case 'm':\r\n        date = setJalaliMonth(date, date.month + number);\r\n        date.day = 1;\r\n        return date;\r\n      case 'd':\r\n        return setJalaliDay(date, date.day + number);\r\n      default:\r\n        return date;\r\n    }\r\n  }\r\n\r\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\r\n\r\n  getWeekday(date: NgbDate) {\r\n    const day = toGregorian(date).getDay();\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    return day === 0 ? 7 : day;\r\n  }\r\n\r\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    if (firstDayOfWeek === 7) {\r\n      firstDayOfWeek = 0;\r\n    }\r\n\r\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\r\n    const date = week[thursdayIndex];\r\n\r\n    const jsDate = toGregorian(date);\r\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\r\n    const time = jsDate.getTime();\r\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\r\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\r\n  }\r\n\r\n  getToday(): NgbDate { return fromGregorian(new Date()); }\r\n\r\n  isValid(date: NgbDate): boolean {\r\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\r\n        !isNaN(toGregorian(date).getTime());\r\n  }\r\n}\r\n","import {NgbDate} from '../ngb-date';\r\nimport {NgbDateStruct} from '../ngb-date-struct';\r\n\r\nconst PARTS_PER_HOUR = 1080;\r\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\r\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\r\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\r\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\r\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\r\nconst GREGORIAN_EPOCH = 1721425.5;\r\n\r\nfunction isGregorianLeapYear(year: number): boolean {\r\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\r\n}\r\n\r\nfunction numberOfFirstDayInYear(year: number): number {\r\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\r\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\r\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\r\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\r\n\r\n  let dayOfWeek = dayNumber % 7;  // 0 == Monday\r\n\r\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\r\n    dayNumber++;\r\n    dayOfWeek = dayNumber % 7;\r\n  }\r\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\r\n    dayNumber += 2;\r\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\r\n    dayNumber++;\r\n  }\r\n  return dayNumber;\r\n}\r\n\r\nfunction getDaysInGregorianMonth(month: number, year: number): number {\r\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n  if (isGregorianLeapYear(year)) {\r\n    days[1]++;\r\n  }\r\n  return days[month - 1];\r\n}\r\n\r\nfunction getHebrewMonths(year: number): number {\r\n  return isHebrewLeapYear(year) ? 13 : 12;\r\n}\r\n\r\n/**\r\n * Returns the number of days in a specific Hebrew year.\r\n * `year` is any Hebrew year.\r\n */\r\nfunction getDaysInHebrewYear(year: number): number {\r\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\r\n}\r\n\r\nexport function isHebrewLeapYear(year: number): boolean {\r\n  let b = (year * 12 + 17) % 19;\r\n  return b >= ((b < 0) ? -7 : 12);\r\n}\r\n\r\n/**\r\n * Returns the number of days in a specific Hebrew month.\r\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\r\n * `year` is any Hebrew year.\r\n */\r\nexport function getDaysInHebrewMonth(month: number, year: number): number {\r\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\r\n  let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\r\n  let leapYear = isHebrewLeapYear(year);\r\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\r\n                               [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\r\n  if (yearType > 0) {\r\n    daysInMonth[2]++;  // Kislev gets an extra day in normal or complete years.\r\n  }\r\n  if (yearType > 1) {\r\n    daysInMonth[1]++;  // Heshvan gets an extra day in complete years only.\r\n  }\r\n  return daysInMonth[month - 1];\r\n}\r\n\r\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\r\n  let numberOfDay = 0;\r\n  for (let i = 1; i < date.month; i++) {\r\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\r\n  }\r\n  return numberOfDay + date.day;\r\n}\r\n\r\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\r\n  let after = val >= 0;\r\n  if (!after) {\r\n    val = -val;\r\n  }\r\n  while (val > 0) {\r\n    if (after) {\r\n      if (val > getHebrewMonths(date.year) - date.month) {\r\n        val -= getHebrewMonths(date.year) - date.month + 1;\r\n        date.year++;\r\n        date.month = 1;\r\n      } else {\r\n        date.month += val;\r\n        val = 0;\r\n      }\r\n    } else {\r\n      if (val >= date.month) {\r\n        date.year--;\r\n        val -= date.month;\r\n        date.month = getHebrewMonths(date.year);\r\n      } else {\r\n        date.month -= val;\r\n        val = 0;\r\n      }\r\n    }\r\n  }\r\n  return date;\r\n}\r\n\r\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\r\n  let after = val >= 0;\r\n  if (!after) {\r\n    val = -val;\r\n  }\r\n  while (val > 0) {\r\n    if (after) {\r\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\r\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\r\n        date.year++;\r\n        date.month = 1;\r\n        date.day = 1;\r\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\r\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\r\n        date.month++;\r\n        date.day = 1;\r\n      } else {\r\n        date.day += val;\r\n        val = 0;\r\n      }\r\n    } else {\r\n      if (val >= date.day) {\r\n        val -= date.day;\r\n        date.month--;\r\n        if (date.month === 0) {\r\n          date.year--;\r\n          date.month = getHebrewMonths(date.year);\r\n        }\r\n        date.day = getDaysInHebrewMonth(date.month, date.year);\r\n      } else {\r\n        date.day -= val;\r\n        val = 0;\r\n      }\r\n    }\r\n  }\r\n  return date;\r\n}\r\n\r\n/**\r\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\r\n * `gdate` is a JS Date to be converted to Hebrew date.\r\n */\r\nexport function fromGregorian(gdate: Date): NgbDate {\r\n  const date = new Date(gdate);\r\n  const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\r\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\r\n      Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\r\n      Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\r\n  julianDay = Math.floor(julianDay + 0.5);\r\n  let daysSinceHebEpoch = julianDay - 347997;\r\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\r\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\r\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\r\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\r\n  while (dayOfYear < 1) {\r\n    hYear--;\r\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\r\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\r\n  }\r\n  let hMonth = 1;\r\n  let hDay = dayOfYear;\r\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\r\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\r\n    hMonth++;\r\n  }\r\n  return new NgbDate(hYear, hMonth, hDay);\r\n}\r\n\r\n/**\r\n * Returns the equivalent JS date value for a given Hebrew date.\r\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\r\n */\r\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\r\n  const hYear = hebrewDate.year;\r\n  const hMonth = hebrewDate.month;\r\n  const hDay = hebrewDate.day;\r\n  let days = numberOfFirstDayInYear(hYear);\r\n  for (let i = 1; i < hMonth; i++) {\r\n    days += getDaysInHebrewMonth(i, hYear);\r\n  }\r\n  days += hDay;\r\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\r\n  let after = diffDays >= 0;\r\n  if (!after) {\r\n    diffDays = -diffDays;\r\n  }\r\n  let gYear = 1970;\r\n  let gMonth = 1;\r\n  let gDay = 1;\r\n  while (diffDays > 0) {\r\n    if (after) {\r\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\r\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\r\n        gYear++;\r\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\r\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\r\n        gMonth++;\r\n      } else {\r\n        gDay += diffDays;\r\n        diffDays = 0;\r\n      }\r\n    } else {\r\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\r\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\r\n        gYear--;\r\n      } else {\r\n        if (gMonth > 1) {\r\n          gMonth--;\r\n        } else {\r\n          gMonth = 12;\r\n          gYear--;\r\n        }\r\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\r\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\r\n        } else {\r\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\r\n          diffDays = 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return new Date(gYear, gMonth - 1, gDay);\r\n}\r\n\r\nexport function hebrewNumerals(numerals: number): string {\r\n  if (!numerals) {\r\n    return '';\r\n  }\r\n  const hArray0_9 = ['', '×', '×', '×', '×', '×', '×', '×', '×', '×'];\r\n  const hArray10_19 =\r\n      ['×', '××â¬', '××â¬', '××â¬', '××â¬', '××', '××â¬', '××â¬', '××â¬', '××â¬'];\r\n  const hArray20_90 = ['', '', '×', '×', '×', '× ', '×¡', '×¢', '×¤', '×¦'];\r\n  const hArray100_900 = ['', '×§', '×¨', '×©', '×ª', '×ª×§', '×ª×¨', '×ª×©', '×ª×ª', '×ª×ª×§'];\r\n  const hArray1000_9000 = ['', '×', '×', '××', '××', '×', '××', '××', '×××', '×××'];\r\n  const geresh = '×³', gershaim = '×´';\r\n  let mem = 0;\r\n  let result = [];\r\n  let step = 0;\r\n  while (numerals > 0) {\r\n    let m = numerals % 10;\r\n    if (step === 0) {\r\n      mem = m;\r\n    } else if (step === 1) {\r\n      if (m !== 1) {\r\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\r\n      } else {\r\n        result.unshift(hArray10_19[mem]);\r\n      }\r\n    } else if (step === 2) {\r\n      result.unshift(hArray100_900[m]);\r\n    } else {\r\n      if (m !== 5) {\r\n        result.unshift(hArray1000_9000[m], geresh, ' ');\r\n      }\r\n      break;\r\n    }\r\n    numerals = Math.floor(numerals / 10);\r\n    if (step === 0 && numerals === 0) {\r\n      result.unshift(hArray0_9[m]);\r\n    }\r\n    step++;\r\n  }\r\n  result = result.join('').split('');\r\n  if (result.length === 1) {\r\n    result.push(geresh);\r\n  } else if (result.length > 1) {\r\n    result.splice(result.length - 1, 0, gershaim);\r\n  }\r\n  return result.join('');\r\n}\r\n","import {NgbDate} from '../ngb-date';\r\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\r\nimport {Injectable} from '@angular/core';\r\nimport {isNumber} from '../../util/util';\r\nimport {\r\n  fromGregorian,\r\n  getDayNumberInHebrewYear,\r\n  getDaysInHebrewMonth,\r\n  isHebrewLeapYear,\r\n  toGregorian,\r\n  setHebrewDay,\r\n  setHebrewMonth\r\n} from './hebrew';\r\n\r\n/**\r\n * The Hebrew or Jewish calendar is a lunisolar calendar.\r\n * In Israel, it is used for religious purposes and frequently - as an official calendar for civil purposes.\r\n *\r\n * @since 3.2.0\r\n */\r\n@Injectable()\r\nexport class NgbCalendarHebrew extends NgbCalendar {\r\n  getDaysPerWeek() { return 7; }\r\n\r\n  getMonths(year?: number) {\r\n    if (year && isHebrewLeapYear(year)) {\r\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\r\n    } else {\r\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n    }\r\n  }\r\n\r\n  getWeeksPerMonth() { return 6; }\r\n\r\n  isValid(date: NgbDate): boolean {\r\n    let b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\r\n    b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\r\n    b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\r\n    return b && !isNaN(toGregorian(date).getTime());\r\n  }\r\n\r\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\r\n    date = new NgbDate(date.year, date.month, date.day);\r\n\r\n    switch (period) {\r\n      case 'y':\r\n        date.year += number;\r\n        date.month = 1;\r\n        date.day = 1;\r\n        return date;\r\n      case 'm':\r\n        date = setHebrewMonth(date, number);\r\n        date.day = 1;\r\n        return date;\r\n      case 'd':\r\n        return setHebrewDay(date, number);\r\n      default:\r\n        return date;\r\n    }\r\n  }\r\n\r\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\r\n\r\n  getWeekday(date: NgbDate) {\r\n    const day = toGregorian(date).getDay();\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    return day === 0 ? 7 : day;\r\n  }\r\n\r\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\r\n    const date = week[week.length - 1];\r\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\r\n  }\r\n\r\n  getToday(): NgbDate { return fromGregorian(new Date()); }\r\n}\r\n","import {NgbDatepickerI18n} from '../datepicker-i18n';\r\nimport {NgbDateStruct} from '../../index';\r\nimport {hebrewNumerals, isHebrewLeapYear} from './hebrew';\r\nimport {Injectable} from '@angular/core';\r\n\r\n\r\nconst WEEKDAYS = ['××³', '××³', '××³', '××³', '××³', '×©×³', '××³'];\r\nconst MONTHS = ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\r\nconst MONTHS_LEAP =\r\n    ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨ ××³', '×××¨ ××³', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\r\n\r\n/**\r\n * @since 3.2.0\r\n */\r\n@Injectable()\r\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\r\n  getMonthShortName(month: number, year?: number): string { return this.getMonthFullName(month, year); }\r\n\r\n  getMonthFullName(month: number, year?: number): string {\r\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\r\n  }\r\n\r\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS[weekday - 1]; }\r\n\r\n  getDayAriaLabel(date: NgbDateStruct): string {\r\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\r\n  }\r\n\r\n  getDayNumerals(date: NgbDateStruct): string { return hebrewNumerals(date.day); }\r\n\r\n  getWeekNumerals(weekNumber: number): string { return hebrewNumerals(weekNumber); }\r\n\r\n  getYearNumerals(year: number): string { return hebrewNumerals(year); }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbDateAdapter} from './ngb-date-adapter';\r\nimport {NgbDateStruct} from '../ngb-date-struct';\r\n\r\n@Injectable()\r\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\r\n  fromModel(date: Date): NgbDateStruct {\r\n    return (date instanceof Date) ? {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()} : null;\r\n  }\r\n\r\n  toModel(date: NgbDateStruct): Date {\r\n    return date && date.year && date.month ? new Date(date.year, date.month - 1, date.day, 12) : null;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbDateAdapter} from './ngb-date-adapter';\r\nimport {NgbDateStruct} from '../ngb-date-struct';\r\n\r\n/**\r\n * @since 3.2.0\r\n */\r\n@Injectable()\r\nexport class NgbDateNativeUTCAdapter extends NgbDateAdapter<Date> {\r\n  fromModel(date: Date): NgbDateStruct {\r\n    return (date instanceof Date) ?\r\n        {year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate()} :\r\n        null;\r\n  }\r\n\r\n  toModel(date: NgbDateStruct): Date {\r\n    return date && date.year && date.month ? new Date(Date.UTC(date.year, date.month - 1, date.day)) : null;\r\n  }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {NgbDatepicker} from './datepicker';\r\nimport {NgbDatepickerMonthView} from './datepicker-month-view';\r\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\r\nimport {NgbInputDatepicker} from './datepicker-input';\r\nimport {NgbDatepickerDayView} from './datepicker-day-view';\r\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\r\n\r\nexport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\r\nexport {NgbInputDatepicker} from './datepicker-input';\r\nexport {NgbCalendar, NgbPeriod} from './ngb-calendar';\r\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\r\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\r\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\r\nexport {NgbCalendarHebrew} from './hebrew/ngb-calendar-hebrew';\r\nexport {NgbDatepickerI18nHebrew} from './hebrew/datepicker-i18n-hebrew';\r\nexport {NgbDatepickerMonthView} from './datepicker-month-view';\r\nexport {NgbDatepickerDayView} from './datepicker-day-view';\r\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\r\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\r\nexport {NgbDatepickerConfig} from './datepicker-config';\r\nexport {NgbDatepickerI18n} from './datepicker-i18n';\r\nexport {NgbDateStruct} from './ngb-date-struct';\r\nexport {NgbDate} from './ngb-date';\r\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\r\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\r\nexport {NgbDateNativeUTCAdapter} from './adapters/ngb-date-native-utc-adapter';\r\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgbDatepicker, NgbDatepickerMonthView, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView,\r\n    NgbInputDatepicker\r\n  ],\r\n  exports: [NgbDatepicker, NgbInputDatepicker],\r\n  imports: [CommonModule, FormsModule],\r\n  entryComponents: [NgbDatepicker]\r\n})\r\nexport class NgbDatepickerModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbDatepickerModule}; }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {PlacementArray} from '../util/positioning';\r\n\r\n/**\r\n * Configuration service for the NgbDropdown directive.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the dropdowns used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbDropdownConfig {\r\n  autoClose: boolean | 'outside' | 'inside' = true;\r\n  placement: PlacementArray = 'bottom-left';\r\n}\r\n","import {\r\n  forwardRef,\r\n  Inject,\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  ContentChild,\r\n  NgZone,\r\n  Renderer2,\r\n  OnInit,\r\n  OnDestroy,\r\n  ChangeDetectorRef,\r\n  ContentChildren,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {fromEvent, race, Subject, Subscription, merge} from 'rxjs';\r\nimport {filter, takeUntil} from 'rxjs/operators';\r\nimport {NgbDropdownConfig} from './dropdown-config';\r\nimport {positionElements, PlacementArray, Placement} from '../util/positioning';\r\nimport {Key} from '../util/key';\r\n\r\n/**\r\n */\r\n@Directive({selector: '.dropdown-item:not(.disabled)'})\r\nexport class NgbDropdownItem {\r\n  dropdownItemEl: HTMLElement;\r\n\r\n  @Input('disabled') private _disabled;\r\n\r\n  constructor(private _elementRef: ElementRef<HTMLElement>) { this.dropdownItemEl = _elementRef.nativeElement; }\r\n\r\n  get disabled(): boolean { return this._disabled != null; }\r\n}\r\n\r\n/**\r\n */\r\n@Directive({\r\n  selector: '[ngbDropdownMenu]',\r\n  host: {'[class.dropdown-menu]': 'true', '[class.show]': 'dropdown.isOpen()', '[attr.x-placement]': 'placement'}\r\n})\r\nexport class NgbDropdownMenu {\r\n  placement: Placement = 'bottom';\r\n  isOpen = false;\r\n\r\n  @ContentChildren(NgbDropdownItem) menuItems: NgbDropdownItem[];\r\n\r\n  constructor(\r\n      @Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>,\r\n      private _renderer: Renderer2) {}\r\n\r\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\r\n\r\n  position(triggerEl, placement) {\r\n    this.applyPlacement(positionElements(triggerEl, this._elementRef.nativeElement, placement));\r\n  }\r\n\r\n  applyPlacement(_placement: Placement) {\r\n    // remove the current placement classes\r\n    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropup');\r\n    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropdown');\r\n    this.placement = _placement;\r\n    /**\r\n     * apply the new placement\r\n     * in case of top use up-arrow or down-arrow otherwise\r\n     */\r\n    if (_placement.search('^top') !== -1) {\r\n      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropup');\r\n    } else {\r\n      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropdown');\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Marks an element to which dropdown menu will be anchored. This is a simple version\r\n * of the NgbDropdownToggle directive. It plays the same role as NgbDropdownToggle but\r\n * doesn't listen to click events to toggle dropdown menu thus enabling support for\r\n * events other than click.\r\n *\r\n * @since 1.1.0\r\n */\r\n@Directive({\r\n  selector: '[ngbDropdownAnchor]',\r\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\r\n})\r\nexport class NgbDropdownAnchor {\r\n  anchorEl;\r\n\r\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>) {\r\n    this.anchorEl = _elementRef.nativeElement;\r\n  }\r\n\r\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\r\n}\r\n\r\n/**\r\n * Allows the dropdown to be toggled via click. This directive is optional: you can use NgbDropdownAnchor as an\r\n * alternative.\r\n */\r\n@Directive({\r\n  selector: '[ngbDropdownToggle]',\r\n  host: {\r\n    'class': 'dropdown-toggle',\r\n    'aria-haspopup': 'true',\r\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\r\n    '(click)': 'toggleOpen()'\r\n  },\r\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\r\n})\r\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\r\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\r\n    super(dropdown, elementRef);\r\n  }\r\n\r\n  toggleOpen() { this.dropdown.toggle(); }\r\n}\r\n\r\n/**\r\n * Transforms a node into a dropdown.\r\n */\r\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\r\nexport class NgbDropdown implements AfterViewInit, OnInit, OnDestroy {\r\n  private _closed$ = new Subject<void>();\r\n  private _zoneSubscription: Subscription;\r\n\r\n  @ContentChild(NgbDropdownMenu) private _menu: NgbDropdownMenu;\r\n\r\n  @ContentChild(NgbDropdownMenu, {read: ElementRef}) private _menuElementRef: ElementRef<HTMLElement>;\r\n\r\n  @ContentChild(NgbDropdownAnchor) private _anchor: NgbDropdownAnchor;\r\n\r\n  /**\r\n   * Indicates that dropdown should be closed when selecting one of dropdown items (click) or pressing ESC.\r\n   * When it is true (default) dropdowns are automatically closed on both outside and inside (menu) clicks.\r\n   * When it is false dropdowns are never automatically closed.\r\n   * When it is 'outside' dropdowns are automatically closed on outside clicks but not on menu clicks.\r\n   * When it is 'inside' dropdowns are automatically on menu clicks but not on outside clicks.\r\n   */\r\n  @Input() autoClose: boolean | 'outside' | 'inside';\r\n\r\n  /**\r\n   *  Defines whether or not the dropdown-menu is open initially.\r\n   */\r\n  @Input('open') _open = false;\r\n\r\n  /**\r\n   * Placement of a popover accepts:\r\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\r\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\r\n   * and array of above values.\r\n   */\r\n  @Input() placement: PlacementArray;\r\n\r\n  /**\r\n   *  An event fired when the dropdown is opened or closed.\r\n   *  Event's payload equals whether dropdown is open.\r\n   */\r\n  @Output() openChange = new EventEmitter();\r\n\r\n  constructor(\r\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\r\n      private _ngZone: NgZone) {\r\n    this.placement = config.placement;\r\n    this.autoClose = config.autoClose;\r\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this._menu) {\r\n      this._menu.applyPlacement(Array.isArray(this.placement) ? (this.placement[0]) : this.placement as Placement);\r\n    }\r\n\r\n    if (this._open) {\r\n      this._setCloseHandlers();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() { this._setKeyboardHandlers(); }\r\n\r\n  /**\r\n   * Checks if the dropdown menu is open or not.\r\n   */\r\n  isOpen(): boolean { return this._open; }\r\n\r\n  /**\r\n   * Opens the dropdown menu of a given navbar or tabbed navigation.\r\n   */\r\n  open(): void {\r\n    if (!this._open) {\r\n      this._open = true;\r\n      this._positionMenu();\r\n      this.openChange.emit(true);\r\n      this._setCloseHandlers();\r\n    }\r\n  }\r\n\r\n  private _setCloseHandlers() {\r\n    if (this.autoClose) {\r\n      this._ngZone.runOutsideAngular(() => {\r\n        const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\r\n                             .pipe(takeUntil(this._closed$), filter(event => event.which === Key.Escape));\r\n\r\n        const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\r\n                            .pipe(takeUntil(this._closed$), filter(event => this._shouldCloseFromClick(event)));\r\n\r\n        race<Event>([escapes$, clicks$]).pipe(takeUntil(this._closed$)).subscribe(() => this._ngZone.run(() => {\r\n          this.close();\r\n          this._changeDetector.markForCheck();\r\n        }));\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the dropdown menu of a given navbar or tabbed navigation.\r\n   */\r\n  close(): void {\r\n    if (this._open) {\r\n      this._open = false;\r\n      this._closed$.next();\r\n      this.openChange.emit(false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the dropdown menu of a given navbar or tabbed navigation.\r\n   */\r\n  toggle(): void {\r\n    if (this.isOpen()) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  private _shouldCloseFromClick(event: MouseEvent) {\r\n    if (event.button !== 2 && !this._isEventFromToggle(event)) {\r\n      if (this.autoClose === true) {\r\n        return true;\r\n      } else if (this.autoClose === 'inside' && this._isEventFromMenu(event)) {\r\n        return true;\r\n      } else if (this.autoClose === 'outside' && !this._isEventFromMenu(event)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._closed$.next();\r\n    this._zoneSubscription.unsubscribe();\r\n  }\r\n\r\n  private _isEventFromToggle($event) { return this._anchor.isEventFrom($event); }\r\n\r\n  private _isEventFromMenu($event) { return this._menu ? this._menu.isEventFrom($event) : false; }\r\n\r\n  private _positionMenu() {\r\n    if (this.isOpen() && this._menu) {\r\n      this._menu.position(this._anchor.anchorEl, this.placement);\r\n    }\r\n  }\r\n\r\n  private _setKeyboardHandlers() {\r\n    const listeners = [];\r\n    if (this._anchor) {\r\n      const anchor$ = fromEvent<KeyboardEvent>(this._anchor.anchorEl, 'keydown').pipe(filter(filterKeyboardEvents));\r\n      listeners.push(anchor$);\r\n    }\r\n    if (this._menu) {\r\n      const items$ =\r\n          merge(...this._menu.menuItems.map(item => fromEvent<KeyboardEvent>(item.dropdownItemEl, 'keydown')))\r\n              .pipe(filter(filterKeyboardEvents));\r\n      listeners.push(items$);\r\n    }\r\n\r\n    merge(...listeners).subscribe(this.onKeyDown.bind(this));\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent) {\r\n    if (!this.isOpen()) {\r\n      this.open();\r\n    }\r\n    const list = this._getMenuElements();\r\n\r\n    if (list.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let position = list.findIndex(element => element === this._document.activeElement);\r\n    switch (event.which) {\r\n      case Key.ArrowDown:\r\n        position = Math.min(position + 1, list.length - 1);\r\n        break;\r\n      case Key.ArrowUp:\r\n        position = Math.max(position - 1, 0);\r\n        break;\r\n      case Key.Home:\r\n        position = 0;\r\n        break;\r\n      case Key.End:\r\n        position = list.length - 1;\r\n        break;\r\n    }\r\n    const elm: HTMLElement = list[position];\r\n    elm.focus();\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  private _getMenuElements(): HTMLElement[] {\r\n    if (this._menu == null) {\r\n      return [];\r\n    }\r\n    return this._menu.menuItems.filter(item => !item.disabled).map(item => item.dropdownItemEl);\r\n  }\r\n}\r\n\r\nfunction filterKeyboardEvents(event: KeyboardEvent): boolean {\r\n  return event.which === Key.ArrowDown || event.which === Key.ArrowUp || event.which === Key.Home ||\r\n      event.which === Key.End;\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem} from './dropdown';\r\n\r\nexport {NgbDropdown, NgbDropdownToggle, NgbDropdownMenu} from './dropdown';\r\nexport {NgbDropdownConfig} from './dropdown-config';\r\n\r\nconst NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem];\r\n\r\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\r\nexport class NgbDropdownModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbDropdownModule}; }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngb-modal-backdrop',\r\n  template: '',\r\n  host:\r\n      {'[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050'}\r\n})\r\nexport class NgbModalBackdrop {\r\n  @Input() backdropClass: string;\r\n}\r\n","export enum ModalDismissReasons {\r\n  BACKDROP_CLICK,\r\n  ESC\r\n}\r\n","import {DOCUMENT} from '@angular/common';\r\nimport {\r\n  Component,\r\n  Output,\r\n  EventEmitter,\r\n  Input,\r\n  Inject,\r\n  ElementRef,\r\n  OnInit,\r\n  AfterViewInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\r\n\r\n@Component({\r\n  selector: 'ngb-modal-window',\r\n  host: {\r\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\r\n    'role': 'dialog',\r\n    'tabindex': '-1',\r\n    '(keyup.esc)': 'escKey($event)',\r\n    '(click)': 'backdropClick($event)',\r\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\r\n  },\r\n  template: `\r\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\" role=\"document\">\r\n        <div class=\"modal-content\"><ng-content></ng-content></div>\r\n    </div>\r\n    `\r\n})\r\nexport class NgbModalWindow implements OnInit,\r\n    AfterViewInit, OnDestroy {\r\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\r\n\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() backdrop: boolean | string = true;\r\n  @Input() centered: string;\r\n  @Input() keyboard = true;\r\n  @Input() size: string;\r\n  @Input() windowClass: string;\r\n\r\n  @Output('dismiss') dismissEvent = new EventEmitter();\r\n\r\n  constructor(@Inject(DOCUMENT) private _document: any, private _elRef: ElementRef<HTMLElement>) {}\r\n\r\n  backdropClick($event): void {\r\n    if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\r\n      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\r\n    }\r\n  }\r\n\r\n  escKey($event): void {\r\n    if (this.keyboard && !$event.defaultPrevented) {\r\n      this.dismiss(ModalDismissReasons.ESC);\r\n    }\r\n  }\r\n\r\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\r\n\r\n  ngOnInit() { this._elWithFocus = this._document.activeElement; }\r\n\r\n  ngAfterViewInit() {\r\n    if (!this._elRef.nativeElement.contains(document.activeElement)) {\r\n      this._elRef.nativeElement['focus'].apply(this._elRef.nativeElement, []);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const body = this._document.body;\r\n    const elWithFocus = this._elWithFocus;\r\n\r\n    let elementToFocus;\r\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\r\n      elementToFocus = elWithFocus;\r\n    } else {\r\n      elementToFocus = body;\r\n    }\r\n    elementToFocus['focus'].apply(elementToFocus, []);\r\n\r\n    this._elWithFocus = null;\r\n  }\r\n}\r\n","import {Injectable, Injector} from '@angular/core';\r\n\r\n/**\r\n * Represent options available when opening new modal windows.\r\n */\r\nexport interface NgbModalOptions {\r\n  /**\r\n   * Sets the aria attribute aria-labelledby to a modal window.\r\n   *\r\n   * @since 2.2.0\r\n   */\r\n  ariaLabelledBy?: string;\r\n\r\n  /**\r\n   * Whether a backdrop element should be created for a given modal (true by default).\r\n   * Alternatively, specify 'static' for a backdrop which doesn't close the modal on click.\r\n   */\r\n  backdrop?: boolean | 'static';\r\n\r\n  /**\r\n   * Function called when a modal will be dismissed.\r\n   * If this function returns false, the promise is resolved with false or the promise is rejected, the modal is not\r\n   * dismissed.\r\n   */\r\n  beforeDismiss?: () => boolean | Promise<boolean>;\r\n\r\n  /**\r\n   * To center the modal vertically (false by default).\r\n   *\r\n   * @since 1.1.0\r\n   */\r\n  centered?: boolean;\r\n\r\n  /**\r\n   * An element to which to attach newly opened modal windows.\r\n   */\r\n  container?: string;\r\n\r\n  /**\r\n   * Injector to use for modal content.\r\n   */\r\n  injector?: Injector;\r\n\r\n  /**\r\n   * Whether to close the modal when escape key is pressed (true by default).\r\n   */\r\n  keyboard?: boolean;\r\n\r\n  /**\r\n   * Size of a new modal window.\r\n   */\r\n  size?: 'sm' | 'lg';\r\n\r\n  /**\r\n   * Custom class to append to the modal window\r\n   */\r\n  windowClass?: string;\r\n\r\n  /**\r\n   * Custom class to append to the modal backdrop\r\n   *\r\n   * @since 1.1.0\r\n   */\r\n  backdropClass?: string;\r\n}\r\n\r\n/**\r\n* Configuration object token for the NgbModal service.\r\n* You can provide this configuration, typically in your root module in order to provide default option values for every\r\n* modal.\r\n*\r\n* @since 3.1.0\r\n*/\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbModalConfig implements NgbModalOptions {\r\n  backdrop: boolean | 'static' = true;\r\n  keyboard = true;\r\n}\r\n","import {\r\n  Injector,\r\n  TemplateRef,\r\n  ViewRef,\r\n  ViewContainerRef,\r\n  Renderer2,\r\n  ComponentRef,\r\n  ComponentFactoryResolver\r\n} from '@angular/core';\r\n\r\nexport class ContentRef {\r\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\r\n}\r\n\r\nexport class PopupService<T> {\r\n  private _windowRef: ComponentRef<T>;\r\n  private _contentRef: ContentRef;\r\n\r\n  constructor(\r\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\r\n      private _renderer: Renderer2, private _componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  open(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\r\n    if (!this._windowRef) {\r\n      this._contentRef = this._getContentRef(content, context);\r\n      this._windowRef = this._viewContainerRef.createComponent(\r\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), 0, this._injector,\r\n          this._contentRef.nodes);\r\n    }\r\n\r\n    return this._windowRef;\r\n  }\r\n\r\n  close() {\r\n    if (this._windowRef) {\r\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\r\n      this._windowRef = null;\r\n\r\n      if (this._contentRef.viewRef) {\r\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\r\n        this._contentRef = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  private _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\r\n    if (!content) {\r\n      return new ContentRef([]);\r\n    } else if (content instanceof TemplateRef) {\r\n      const viewRef = this._viewContainerRef.createEmbeddedView(<TemplateRef<T>>content, context);\r\n      return new ContentRef([viewRef.rootNodes], viewRef);\r\n    } else {\r\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\r\n    }\r\n  }\r\n}\r\n","import {Injectable, Inject} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n\r\nconst noop = () => {};\r\n\r\n\r\n\r\n/** Type for the callback used to revert the scrollbar compensation. */\r\nexport type CompensationReverter = () => void;\r\n\r\n\r\n\r\n/**\r\n * Utility to handle the scrollbar.\r\n *\r\n * It allows to compensate the lack of a vertical scrollbar by adding an\r\n * equivalent padding on the right of the body, and to remove this compensation.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class ScrollBar {\r\n  constructor(@Inject(DOCUMENT) private _document: any) {}\r\n\r\n  /**\r\n   * Detects if a scrollbar is present and if yes, already compensates for its\r\n   * removal by adding an equivalent padding on the right of the body.\r\n   *\r\n   * @return a callback used to revert the compensation (noop if there was none,\r\n   * otherwise a function removing the padding)\r\n   */\r\n  compensate(): CompensationReverter { return !this._isPresent() ? noop : this._adjustBody(this._getWidth()); }\r\n\r\n  /**\r\n   * Adds a padding of the given width on the right of the body.\r\n   *\r\n   * @return a callback used to revert the padding to its previous value\r\n   */\r\n  private _adjustBody(width: number): CompensationReverter {\r\n    const body = this._document.body;\r\n    const userSetPadding = body.style.paddingRight;\r\n    const paddingAmount = parseFloat(window.getComputedStyle(body)['padding-right']);\r\n    body.style['padding-right'] = `${paddingAmount + width}px`;\r\n    return () => body.style['padding-right'] = userSetPadding;\r\n  }\r\n\r\n  /**\r\n   * Tells whether a scrollbar is currently present on the body.\r\n   *\r\n   * @return true if scrollbar is present, false otherwise\r\n   */\r\n  private _isPresent(): boolean {\r\n    const rect = this._document.body.getBoundingClientRect();\r\n    return rect.left + rect.right < window.innerWidth;\r\n  }\r\n\r\n  /**\r\n   * Calculates and returns the width of a scrollbar.\r\n   *\r\n   * @return the width of a scrollbar on this page\r\n   */\r\n  private _getWidth(): number {\r\n    const measurer = this._document.createElement('div');\r\n    measurer.className = 'modal-scrollbar-measure';\r\n\r\n    const body = this._document.body;\r\n    body.appendChild(measurer);\r\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\r\n    body.removeChild(measurer);\r\n\r\n    return width;\r\n  }\r\n}\r\n","import {ComponentRef} from '@angular/core';\r\n\r\nimport {NgbModalBackdrop} from './modal-backdrop';\r\nimport {NgbModalWindow} from './modal-window';\r\n\r\nimport {ContentRef} from '../util/popup';\r\n\r\n/**\r\n * A reference to an active (currently opened) modal. Instances of this class\r\n * can be injected into components passed as modal content.\r\n */\r\nexport class NgbActiveModal {\r\n  /**\r\n   * Can be used to close a modal, passing an optional result.\r\n   */\r\n  close(result?: any): void {}\r\n\r\n  /**\r\n   * Can be used to dismiss a modal, passing an optional reason.\r\n   */\r\n  dismiss(reason?: any): void {}\r\n}\r\n\r\n/**\r\n * A reference to a newly opened modal.\r\n */\r\nexport class NgbModalRef {\r\n  private _resolve: (result?: any) => void;\r\n  private _reject: (reason?: any) => void;\r\n\r\n  /**\r\n   * The instance of component used as modal's content.\r\n   * Undefined when a TemplateRef is used as modal's content.\r\n   */\r\n  get componentInstance(): any {\r\n    if (this._contentRef.componentRef) {\r\n      return this._contentRef.componentRef.instance;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A promise that is resolved when a modal is closed and rejected when a modal is dismissed.\r\n   */\r\n  result: Promise<any>;\r\n\r\n  constructor(\r\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\r\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\r\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\r\n\r\n    this.result = new Promise((resolve, reject) => {\r\n      this._resolve = resolve;\r\n      this._reject = reject;\r\n    });\r\n    this.result.then(null, () => {});\r\n  }\r\n\r\n  /**\r\n   * Can be used to close a modal, passing an optional result.\r\n   */\r\n  close(result?: any): void {\r\n    if (this._windowCmptRef) {\r\n      this._resolve(result);\r\n      this._removeModalElements();\r\n    }\r\n  }\r\n\r\n  private _dismiss(reason?: any) {\r\n    this._reject(reason);\r\n    this._removeModalElements();\r\n  }\r\n\r\n  /**\r\n   * Can be used to dismiss a modal, passing an optional reason.\r\n   */\r\n  dismiss(reason?: any): void {\r\n    if (this._windowCmptRef) {\r\n      if (!this._beforeDismiss) {\r\n        this._dismiss(reason);\r\n      } else {\r\n        const dismiss = this._beforeDismiss();\r\n        if (dismiss && dismiss.then) {\r\n          dismiss.then(\r\n              result => {\r\n                if (result !== false) {\r\n                  this._dismiss(reason);\r\n                }\r\n              },\r\n              () => {});\r\n        } else if (dismiss !== false) {\r\n          this._dismiss(reason);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _removeModalElements() {\r\n    const windowNativeEl = this._windowCmptRef.location.nativeElement;\r\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\r\n    this._windowCmptRef.destroy();\r\n\r\n    if (this._backdropCmptRef) {\r\n      const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\r\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\r\n      this._backdropCmptRef.destroy();\r\n    }\r\n\r\n    if (this._contentRef && this._contentRef.viewRef) {\r\n      this._contentRef.viewRef.destroy();\r\n    }\r\n\r\n    this._windowCmptRef = null;\r\n    this._backdropCmptRef = null;\r\n    this._contentRef = null;\r\n  }\r\n}\r\n","import {DOCUMENT} from '@angular/common';\r\nimport {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  Injector,\r\n  RendererFactory2,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {ngbFocusTrap} from '../util/focus-trap';\r\nimport {ContentRef} from '../util/popup';\r\nimport {ScrollBar} from '../util/scrollbar';\r\nimport {isDefined, isString} from '../util/util';\r\nimport {NgbModalBackdrop} from './modal-backdrop';\r\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\r\nimport {NgbModalWindow} from './modal-window';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbModalStack {\r\n  private _windowAttributes = ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'size', 'windowClass'];\r\n  private _backdropAttributes = ['backdropClass'];\r\n  private _modalRefs: NgbModalRef[] = [];\r\n  private _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\r\n  private _activeWindowCmptHasChanged = new Subject();\r\n\r\n  constructor(\r\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document: any,\r\n      private _scrollBar: ScrollBar, private _rendererFactory: RendererFactory2) {\r\n    // Trap focus on active WindowCmpt\r\n    this._activeWindowCmptHasChanged.subscribe(() => {\r\n      if (this._windowCmpts.length) {\r\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\r\n        ngbFocusTrap(activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\r\n      }\r\n    });\r\n  }\r\n\r\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\r\n    const containerEl =\r\n        isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\r\n    const renderer = this._rendererFactory.createRenderer(null, null);\r\n\r\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\r\n    const removeBodyClass = () => {\r\n      if (!this._modalRefs.length) {\r\n        renderer.removeClass(this._document.body, 'modal-open');\r\n      }\r\n    };\r\n\r\n    if (!containerEl) {\r\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\r\n    }\r\n\r\n    const activeModal = new NgbActiveModal();\r\n    const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal);\r\n\r\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\r\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\r\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\r\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\r\n\r\n    this._registerModalRef(ngbModalRef);\r\n    this._registerWindowCmpt(windowCmptRef);\r\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\r\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\r\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\r\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\r\n\r\n    this._applyWindowOptions(windowCmptRef.instance, options);\r\n    if (this._modalRefs.length === 1) {\r\n      renderer.addClass(this._document.body, 'modal-open');\r\n    }\r\n\r\n    if (backdropCmptRef && backdropCmptRef.instance) {\r\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\r\n    }\r\n    return ngbModalRef;\r\n  }\r\n\r\n  dismissAll(reason?: any) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\r\n\r\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\r\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\r\n    let backdropCmptRef = backdropFactory.create(this._injector);\r\n    this._applicationRef.attachView(backdropCmptRef.hostView);\r\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\r\n    return backdropCmptRef;\r\n  }\r\n\r\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\r\n      ComponentRef<NgbModalWindow> {\r\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\r\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\r\n    this._applicationRef.attachView(windowCmptRef.hostView);\r\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\r\n    return windowCmptRef;\r\n  }\r\n\r\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\r\n    this._windowAttributes.forEach((optionName: string) => {\r\n      if (isDefined(options[optionName])) {\r\n        windowInstance[optionName] = options[optionName];\r\n      }\r\n    });\r\n  }\r\n\r\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\r\n    this._backdropAttributes.forEach((optionName: string) => {\r\n      if (isDefined(options[optionName])) {\r\n        backdropInstance[optionName] = options[optionName];\r\n      }\r\n    });\r\n  }\r\n\r\n  private _getContentRef(\r\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\r\n      activeModal: NgbActiveModal): ContentRef {\r\n    if (!content) {\r\n      return new ContentRef([]);\r\n    } else if (content instanceof TemplateRef) {\r\n      return this._createFromTemplateRef(content, activeModal);\r\n    } else if (isString(content)) {\r\n      return this._createFromString(content);\r\n    } else {\r\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal);\r\n    }\r\n  }\r\n\r\n  private _createFromTemplateRef(content: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\r\n    const context = {\r\n      $implicit: activeModal,\r\n      close(result) { activeModal.close(result); },\r\n      dismiss(reason) { activeModal.dismiss(reason); }\r\n    };\r\n    const viewRef = content.createEmbeddedView(context);\r\n    this._applicationRef.attachView(viewRef);\r\n    return new ContentRef([viewRef.rootNodes], viewRef);\r\n  }\r\n\r\n  private _createFromString(content: string): ContentRef {\r\n    const component = this._document.createTextNode(`${content}`);\r\n    return new ContentRef([[component]]);\r\n  }\r\n\r\n  private _createFromComponent(\r\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\r\n      context: NgbActiveModal): ContentRef {\r\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\r\n    const modalContentInjector =\r\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\r\n    const componentRef = contentCmptFactory.create(modalContentInjector);\r\n    this._applicationRef.attachView(componentRef.hostView);\r\n    return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\r\n  }\r\n\r\n  private _registerModalRef(ngbModalRef: NgbModalRef) {\r\n    const unregisterModalRef = () => {\r\n      const index = this._modalRefs.indexOf(ngbModalRef);\r\n      if (index > -1) {\r\n        this._modalRefs.splice(index, 1);\r\n      }\r\n    };\r\n    this._modalRefs.push(ngbModalRef);\r\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\r\n  }\r\n\r\n  private _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\r\n    this._windowCmpts.push(ngbWindowCmpt);\r\n    this._activeWindowCmptHasChanged.next();\r\n\r\n    ngbWindowCmpt.onDestroy(() => {\r\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\r\n      if (index > -1) {\r\n        this._windowCmpts.splice(index, 1);\r\n        this._activeWindowCmptHasChanged.next();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\r\n\r\nimport {NgbModalOptions, NgbModalConfig} from './modal-config';\r\nimport {NgbModalRef} from './modal-ref';\r\nimport {NgbModalStack} from './modal-stack';\r\n\r\n/**\r\n * A service to open modal windows. Creating a modal is straightforward: create a template and pass it as an argument to\r\n * the \"open\" method!\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbModal {\r\n  constructor(\r\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack,\r\n      private _config: NgbModalConfig) {}\r\n\r\n  /**\r\n   * Opens a new modal window with the specified content and using supplied options. Content can be provided\r\n   * as a TemplateRef or a component type. If you pass a component type as content than instances of those\r\n   * components can be injected with an instance of the NgbActiveModal class. You can use methods on the\r\n   * NgbActiveModal class to close / dismiss modals from \"inside\" of a component.\r\n   */\r\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\r\n    const combinedOptions = Object.assign({}, this._config, options);\r\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\r\n  }\r\n\r\n  /**\r\n   * Dismiss all currently displayed modal windows with the supplied reason.\r\n   *\r\n   * @since 3.1.0\r\n   */\r\n  dismissAll(reason?: any) { this._modalStack.dismissAll(reason); }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\n\r\nimport {NgbModalBackdrop} from './modal-backdrop';\r\nimport {NgbModalWindow} from './modal-window';\r\nimport {NgbModal} from './modal';\r\n\r\nexport {NgbModal} from './modal';\r\nexport {NgbModalConfig, NgbModalOptions} from './modal-config';\r\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\r\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\r\n\r\n@NgModule({\r\n  declarations: [NgbModalBackdrop, NgbModalWindow],\r\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\r\n  providers: [NgbModal]\r\n})\r\nexport class NgbModalModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbModalModule}; }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Configuration service for the NgbPagination component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the paginations used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbPaginationConfig {\r\n  disabled = false;\r\n  boundaryLinks = false;\r\n  directionLinks = true;\r\n  ellipses = true;\r\n  maxSize = 0;\r\n  pageSize = 10;\r\n  rotate = false;\r\n  size: 'sm' | 'lg';\r\n}\r\n","import {Component, EventEmitter, Input, Output, OnChanges, ChangeDetectionStrategy, SimpleChanges} from '@angular/core';\r\nimport {getValueInRange, isNumber} from '../util/util';\r\nimport {NgbPaginationConfig} from './pagination-config';\r\n\r\n/**\r\n * A directive that will take care of visualising a pagination bar and enable / disable buttons correctly!\r\n */\r\n@Component({\r\n  selector: 'ngb-pagination',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {'role': 'navigation'},\r\n  template: `\r\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\r\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\r\n        [class.disabled]=\"!hasPrevious() || disabled\">\r\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\r\n          (click)=\"!!selectPage(1)\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\r\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span>\r\n        </a>\r\n      </li>\r\n\r\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\r\n        [class.disabled]=\"!hasPrevious() || disabled\">\r\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\r\n          (click)=\"!!selectPage(page-1)\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\r\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span>\r\n        </a>\r\n      </li>\r\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\r\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\">\r\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\">...</a>\r\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"!!selectPage(pageNumber)\">\r\n          {{pageNumber}}\r\n          <span *ngIf=\"pageNumber === page\" class=\"sr-only\">(current)</span>\r\n        </a>\r\n      </li>\r\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\r\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\r\n          (click)=\"!!selectPage(page+1)\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\r\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span>\r\n        </a>\r\n      </li>\r\n\r\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\r\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\r\n          (click)=\"!!selectPage(pageCount)\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\r\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  `\r\n})\r\nexport class NgbPagination implements OnChanges {\r\n  pageCount = 0;\r\n  pages: number[] = [];\r\n\r\n  /**\r\n   * Whether to disable buttons from user input\r\n   */\r\n  @Input() disabled: boolean;\r\n\r\n  /**\r\n   *  Whether to show the \"First\" and \"Last\" page links\r\n   */\r\n  @Input() boundaryLinks: boolean;\r\n\r\n  /**\r\n   *  Whether to show the \"Next\" and \"Previous\" page links\r\n   */\r\n  @Input() directionLinks: boolean;\r\n\r\n  /**\r\n   *  Whether to show ellipsis symbols and first/last page numbers when maxSize > number of pages\r\n   */\r\n  @Input() ellipses: boolean;\r\n\r\n  /**\r\n   *  Whether to rotate pages when maxSize > number of pages.\r\n   *  Current page will be in the middle\r\n   */\r\n  @Input() rotate: boolean;\r\n\r\n  /**\r\n   *  Number of items in collection.\r\n   */\r\n  @Input() collectionSize: number;\r\n\r\n  /**\r\n   *  Maximum number of pages to display.\r\n   */\r\n  @Input() maxSize: number;\r\n\r\n  /**\r\n   *  Current page. Page numbers start with 1\r\n   */\r\n  @Input() page = 1;\r\n\r\n  /**\r\n   *  Number of items per page.\r\n   */\r\n  @Input() pageSize: number;\r\n\r\n  /**\r\n   *  An event fired when the page is changed.\r\n   *  Event's payload equals to the newly selected page.\r\n   *  Will fire only if collection size is set and all values are valid.\r\n   *  Page numbers start with 1\r\n   */\r\n  @Output() pageChange = new EventEmitter<number>(true);\r\n\r\n  /**\r\n   * Pagination display size: small or large\r\n   */\r\n  @Input() size: 'sm' | 'lg';\r\n\r\n  constructor(config: NgbPaginationConfig) {\r\n    this.disabled = config.disabled;\r\n    this.boundaryLinks = config.boundaryLinks;\r\n    this.directionLinks = config.directionLinks;\r\n    this.ellipses = config.ellipses;\r\n    this.maxSize = config.maxSize;\r\n    this.pageSize = config.pageSize;\r\n    this.rotate = config.rotate;\r\n    this.size = config.size;\r\n  }\r\n\r\n  hasPrevious(): boolean { return this.page > 1; }\r\n\r\n  hasNext(): boolean { return this.page < this.pageCount; }\r\n\r\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\r\n\r\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\r\n\r\n  /**\r\n   * Appends ellipses and first/last page number to the displayed pages\r\n   */\r\n  private _applyEllipses(start: number, end: number) {\r\n    if (this.ellipses) {\r\n      if (start > 0) {\r\n        if (start > 1) {\r\n          this.pages.unshift(-1);\r\n        }\r\n        this.pages.unshift(1);\r\n      }\r\n      if (end < this.pageCount) {\r\n        if (end < (this.pageCount - 1)) {\r\n          this.pages.push(-1);\r\n        }\r\n        this.pages.push(this.pageCount);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Rotates page numbers based on maxSize items visible.\r\n   * Currently selected page stays in the middle:\r\n   *\r\n   * Ex. for selected page = 6:\r\n   * [5,*6*,7] for maxSize = 3\r\n   * [4,5,*6*,7] for maxSize = 4\r\n   */\r\n  private _applyRotation(): [number, number] {\r\n    let start = 0;\r\n    let end = this.pageCount;\r\n    let leftOffset = Math.floor(this.maxSize / 2);\r\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\r\n\r\n    if (this.page <= leftOffset) {\r\n      // very beginning, no rotation -> [0..maxSize]\r\n      end = this.maxSize;\r\n    } else if (this.pageCount - this.page < leftOffset) {\r\n      // very end, no rotation -> [len-maxSize..len]\r\n      start = this.pageCount - this.maxSize;\r\n    } else {\r\n      // rotate\r\n      start = this.page - leftOffset - 1;\r\n      end = this.page + rightOffset;\r\n    }\r\n\r\n    return [start, end];\r\n  }\r\n\r\n  /**\r\n   * Paginates page numbers based on maxSize items per page\r\n   */\r\n  private _applyPagination(): [number, number] {\r\n    let page = Math.ceil(this.page / this.maxSize) - 1;\r\n    let start = page * this.maxSize;\r\n    let end = start + this.maxSize;\r\n\r\n    return [start, end];\r\n  }\r\n\r\n  private _setPageInRange(newPageNo) {\r\n    const prevPageNo = this.page;\r\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\r\n\r\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\r\n      this.pageChange.emit(this.page);\r\n    }\r\n  }\r\n\r\n  private _updatePages(newPage: number) {\r\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\r\n\r\n    if (!isNumber(this.pageCount)) {\r\n      this.pageCount = 0;\r\n    }\r\n\r\n    // fill-in model needed to render pages\r\n    this.pages.length = 0;\r\n    for (let i = 1; i <= this.pageCount; i++) {\r\n      this.pages.push(i);\r\n    }\r\n\r\n    // set page within 1..max range\r\n    this._setPageInRange(newPage);\r\n\r\n    // apply maxSize if necessary\r\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\r\n      let start = 0;\r\n      let end = this.pageCount;\r\n\r\n      // either paginating or rotating page numbers\r\n      if (this.rotate) {\r\n        [start, end] = this._applyRotation();\r\n      } else {\r\n        [start, end] = this._applyPagination();\r\n      }\r\n\r\n      this.pages = this.pages.slice(start, end);\r\n\r\n      // adding ellipses\r\n      this._applyEllipses(start, end);\r\n    }\r\n  }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbPagination} from './pagination';\r\n\r\nexport {NgbPagination} from './pagination';\r\nexport {NgbPaginationConfig} from './pagination-config';\r\n\r\n@NgModule({declarations: [NgbPagination], exports: [NgbPagination], imports: [CommonModule]})\r\nexport class NgbPaginationModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPaginationModule}; }\r\n}\r\n","export class Trigger {\r\n  constructor(public open: string, public close?: string) {\r\n    if (!close) {\r\n      this.close = open;\r\n    }\r\n  }\r\n\r\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\r\n}\r\n\r\nconst DEFAULT_ALIASES = {\r\n  'hover': ['mouseenter', 'mouseleave']\r\n};\r\n\r\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\r\n  const trimmedTriggers = (triggers || '').trim();\r\n\r\n  if (trimmedTriggers.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\r\n    let alias = aliases[triggerPair[0]] || triggerPair;\r\n    return new Trigger(alias[0], alias[1]);\r\n  });\r\n\r\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\r\n\r\n  if (manualTriggers.length > 1) {\r\n    throw 'Triggers parse error: only one manual trigger is allowed';\r\n  }\r\n\r\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\r\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\r\n  }\r\n\r\n  return parsedTriggers;\r\n}\r\n\r\nconst noopFn = () => {};\r\n\r\nexport function listenToTriggers(renderer: any, nativeElement: any, triggers: string, openFn, closeFn, toggleFn) {\r\n  const parsedTriggers = parseTriggers(triggers);\r\n  const listeners = [];\r\n\r\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\r\n    return noopFn;\r\n  }\r\n\r\n  parsedTriggers.forEach((trigger: Trigger) => {\r\n    if (trigger.open === trigger.close) {\r\n      listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\r\n    } else {\r\n      listeners.push(\r\n          renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\r\n    }\r\n  });\r\n\r\n  return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {PlacementArray} from '../util/positioning';\r\n\r\n/**\r\n * Configuration service for the NgbPopover directive.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the popovers used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbPopoverConfig {\r\n  autoClose: boolean | 'inside' | 'outside' = true;\r\n  placement: PlacementArray = 'top';\r\n  triggers = 'click';\r\n  container: string;\r\n  disablePopover = false;\r\n  popoverClass: string;\r\n}\r\n","import {\r\n  Component,\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnDestroy,\r\n  OnChanges,\r\n  Inject,\r\n  Injector,\r\n  Renderer2,\r\n  ComponentRef,\r\n  ElementRef,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  ComponentFactoryResolver,\r\n  NgZone,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {fromEvent, race} from 'rxjs';\r\nimport {filter, takeUntil} from 'rxjs/operators';\r\n\r\nimport {listenToTriggers} from '../util/triggers';\r\nimport {positionElements, Placement, PlacementArray} from '../util/positioning';\r\nimport {PopupService} from '../util/popup';\r\nimport {Key} from '../util/key';\r\n\r\nimport {NgbPopoverConfig} from './popover-config';\r\n\r\nlet nextId = 0;\r\n\r\n@Component({\r\n  selector: 'ngb-popover-window',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    '[class]':\r\n        '\"popover bs-popover-\" + placement.split(\"-\")[0]+\" bs-popover-\" + placement + (popoverClass ? \" \" + popoverClass : \"\")',\r\n    'role': 'tooltip',\r\n    '[id]': 'id'\r\n  },\r\n  template: `\r\n    <div class=\"arrow\"></div>\r\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\r\n      <ng-template #simpleTitle>{{title}}</ng-template>\r\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\r\n    </h3>\r\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\r\n  styles: [`\r\n    :host.bs-popover-top .arrow, :host.bs-popover-bottom .arrow {\r\n      left: 50%;\r\n      margin-left: -5px;\r\n    }\r\n\r\n    :host.bs-popover-top-left .arrow, :host.bs-popover-bottom-left .arrow {\r\n      left: 2em;\r\n    }\r\n\r\n    :host.bs-popover-top-right .arrow, :host.bs-popover-bottom-right .arrow {\r\n      left: auto;\r\n      right: 2em;\r\n    }\r\n\r\n    :host.bs-popover-left .arrow, :host.bs-popover-right .arrow {\r\n      top: 50%;\r\n      margin-top: -5px;\r\n    }\r\n\r\n    :host.bs-popover-left-top .arrow, :host.bs-popover-right-top .arrow {\r\n      top: 0.7em;\r\n    }\r\n\r\n    :host.bs-popover-left-bottom .arrow, :host.bs-popover-right-bottom .arrow {\r\n      top: auto;\r\n      bottom: 0.7em;\r\n    }\r\n  `]\r\n})\r\nexport class NgbPopoverWindow {\r\n  @Input() placement: Placement = 'top';\r\n  @Input() title: undefined | string | TemplateRef<any>;\r\n  @Input() id: string;\r\n  @Input() popoverClass: string;\r\n  @Input() context: any;\r\n\r\n  constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\r\n\r\n  isTitleTemplate() { return this.title instanceof TemplateRef; }\r\n\r\n  applyPlacement(_placement: Placement) {\r\n    // remove the current placement classes\r\n    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\r\n    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\r\n\r\n    // set the new placement classes\r\n    this.placement = _placement;\r\n\r\n    // apply the new placement\r\n    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\r\n    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\r\n  }\r\n\r\n  /**\r\n   * Tells whether the event has been triggered from this component's subtree or not.\r\n   *\r\n   * @param event the event to check\r\n   *\r\n   * @return whether the event has been triggered from this component's subtree or not.\r\n   */\r\n  isEventFrom(event: Event): boolean { return this._element.nativeElement.contains(event.target as HTMLElement); }\r\n}\r\n\r\n/**\r\n * A lightweight, extensible directive for fancy popover creation.\r\n */\r\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\r\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\r\n  /**\r\n   * Indicates whether the popover should be closed on Escape key and inside/outside clicks.\r\n   *\r\n   * - true (default): closes on both outside and inside clicks as well as Escape presses\r\n   * - false: disables the autoClose feature (NB: triggers still apply)\r\n   * - 'inside': closes on inside clicks as well as Escape presses\r\n   * - 'outside': closes on outside clicks (sometimes also achievable through triggers)\r\n   * as well as Escape presses\r\n   *\r\n   * @since 3.0.0\r\n   */\r\n  @Input() autoClose: boolean | 'inside' | 'outside';\r\n  /**\r\n   * Content to be displayed as popover. If title and content are empty, the popover won't open.\r\n   */\r\n  @Input() ngbPopover: string | TemplateRef<any>;\r\n  /**\r\n   * Title of a popover. If title and content are empty, the popover won't open.\r\n   */\r\n  @Input() popoverTitle: string | TemplateRef<any>;\r\n  /**\r\n   * Placement of a popover accepts:\r\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\r\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\r\n   * and array of above values.\r\n   */\r\n  @Input() placement: PlacementArray;\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of event names.\r\n   */\r\n  @Input() triggers: string;\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  @Input() container: string;\r\n  /**\r\n   * A flag indicating if a given popover is disabled and should not be displayed.\r\n   *\r\n   * @since 1.1.0\r\n   */\r\n  @Input() disablePopover: boolean;\r\n  /**\r\n   * An optional class applied to ngb-popover-window\r\n   *\r\n   * @since 2.2.0\r\n   */\r\n  @Input() popoverClass: string;\r\n  /**\r\n   * Emits an event when the popover is shown\r\n   */\r\n  @Output() shown = new EventEmitter();\r\n  /**\r\n   * Emits an event when the popover is hidden\r\n   */\r\n  @Output() hidden = new EventEmitter();\r\n\r\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\r\n  private _popupService: PopupService<NgbPopoverWindow>;\r\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\r\n  private _unregisterListenersFn;\r\n  private _zoneSubscription: any;\r\n  private _isDisabled(): boolean {\r\n    if (this.disablePopover) {\r\n      return true;\r\n    }\r\n    if (!this.ngbPopover && !this.popoverTitle) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  constructor(\r\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\r\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\r\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any) {\r\n    this.autoClose = config.autoClose;\r\n    this.placement = config.placement;\r\n    this.triggers = config.triggers;\r\n    this.container = config.container;\r\n    this.disablePopover = config.disablePopover;\r\n    this.popoverClass = config.popoverClass;\r\n    this._popupService = new PopupService<NgbPopoverWindow>(\r\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\r\n\r\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\r\n      if (this._windowRef) {\r\n        this._windowRef.instance.applyPlacement(\r\n            positionElements(\r\n                this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\r\n                this.container === 'body'));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Opens an elementâs popover. This is considered a âmanualâ triggering of the popover.\r\n   * The context is an optional value to be injected into the popover template when it is created.\r\n   */\r\n  open(context?: any) {\r\n    if (!this._windowRef && !this._isDisabled()) {\r\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\r\n      this._windowRef.instance.title = this.popoverTitle;\r\n      this._windowRef.instance.context = context;\r\n      this._windowRef.instance.popoverClass = this.popoverClass;\r\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\r\n\r\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\r\n\r\n      if (this.container === 'body') {\r\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\r\n      }\r\n\r\n      // apply styling to set basic css-classes on target element, before going for positioning\r\n      this._windowRef.changeDetectorRef.detectChanges();\r\n      this._windowRef.changeDetectorRef.markForCheck();\r\n\r\n      // position popover along the element\r\n      this._windowRef.instance.applyPlacement(\r\n          positionElements(\r\n              this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\r\n              this.container === 'body'));\r\n\r\n      if (this.autoClose) {\r\n        this._ngZone.runOutsideAngular(() => {\r\n          // prevents automatic closing right after an opening by putting a guard for the time of one event handling\r\n          // pass\r\n          // use case: click event would reach an element opening the popover first, then reach the autoClose handler\r\n          // which would close it\r\n          let justOpened = true;\r\n          requestAnimationFrame(() => justOpened = false);\r\n\r\n          const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\r\n                               .pipe(takeUntil(this.hidden), filter(event => event.which === Key.Escape));\r\n\r\n          const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\r\n                              .pipe(\r\n                                  takeUntil(this.hidden), filter(() => !justOpened),\r\n                                  filter(event => this._shouldCloseFromClick(event)));\r\n\r\n          race<Event>([escapes$, clicks$]).subscribe(() => this._ngZone.run(() => this.close()));\r\n        });\r\n      }\r\n\r\n      this.shown.emit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes an elementâs popover. This is considered a âmanualâ triggering of the popover.\r\n   */\r\n  close(): void {\r\n    if (this._windowRef) {\r\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\r\n      this._popupService.close();\r\n      this._windowRef = null;\r\n      this.hidden.emit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles an elementâs popover. This is considered a âmanualâ triggering of the popover.\r\n   */\r\n  toggle(): void {\r\n    if (this._windowRef) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns whether or not the popover is currently being shown\r\n   */\r\n  isOpen(): boolean { return this._windowRef != null; }\r\n\r\n  ngOnInit() {\r\n    this._unregisterListenersFn = listenToTriggers(\r\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\r\n        this.toggle.bind(this));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // close popover if title and content become empty, or disablePopover set to true\r\n    if ((changes['ngbPopover'] || changes['popoverTitle'] || changes['disablePopover']) && this._isDisabled()) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.close();\r\n    this._unregisterListenersFn();\r\n    this._zoneSubscription.unsubscribe();\r\n  }\r\n\r\n  private _shouldCloseFromClick(event: MouseEvent) {\r\n    if (event.button !== 2) {\r\n      if (this.autoClose === true) {\r\n        return true;\r\n      } else if (this.autoClose === 'inside' && this._isEventFromPopover(event)) {\r\n        return true;\r\n      } else if (this.autoClose === 'outside' && !this._isEventFromPopover(event)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private _isEventFromPopover(event: MouseEvent) {\r\n    const popup = this._windowRef.instance;\r\n    return popup ? popup.isEventFrom(event) : false;\r\n  }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\n\r\nimport {NgbPopover, NgbPopoverWindow} from './popover';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nexport {NgbPopover} from './popover';\r\nexport {NgbPopoverConfig} from './popover-config';\r\nexport {Placement} from '../util/positioning';\r\n\r\n@NgModule({\r\n  declarations: [NgbPopover, NgbPopoverWindow],\r\n  exports: [NgbPopover],\r\n  imports: [CommonModule],\r\n  entryComponents: [NgbPopoverWindow]\r\n})\r\nexport class NgbPopoverModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPopoverModule}; }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Configuration service for the NgbProgressbar component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the progress bars used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbProgressbarConfig {\r\n  max = 100;\r\n  animated = false;\r\n  striped = false;\r\n  type: string;\r\n  showValue = false;\r\n  height: string;\r\n}\r\n","import {Component, Input, ChangeDetectionStrategy} from '@angular/core';\r\nimport {getValueInRange} from '../util/util';\r\nimport {NgbProgressbarConfig} from './progressbar-config';\r\n\r\n/**\r\n * Directive that can be used to provide feedback on the progress of a workflow or an action.\r\n */\r\n@Component({\r\n  selector: 'ngb-progressbar',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div class=\"progress\" [style.height]=\"height\">\r\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{animated ? ' progress-bar-animated' : ''}}{{striped ?\r\n    ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\r\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\r\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class NgbProgressbar {\r\n  /**\r\n   * Maximal value to be displayed in the progressbar.\r\n   */\r\n  @Input() max: number;\r\n\r\n  /**\r\n   * A flag indicating if the stripes of the progress bar should be animated. Takes effect only for browsers\r\n   * supporting CSS3 animations, and if striped is true.\r\n   */\r\n  @Input() animated: boolean;\r\n\r\n  /**\r\n   * A flag indicating if a progress bar should be displayed as striped.\r\n   */\r\n  @Input() striped: boolean;\r\n\r\n  /**\r\n   * A flag indicating if the current percentage value should be shown.\r\n   */\r\n  @Input() showValue: boolean;\r\n\r\n  /**\r\n   * Type of progress bar, can be one of \"success\", \"info\", \"warning\" or \"danger\".\r\n   */\r\n  @Input() type: string;\r\n\r\n  /**\r\n   * Current value to be displayed in the progressbar. Should be smaller or equal to \"max\" value.\r\n   */\r\n  @Input() value = 0;\r\n\r\n  /**\r\n   * Height of the progress bar. Accepts any valid CSS height values, ex. '2rem'\r\n   */\r\n  @Input() height: string;\r\n\r\n  constructor(config: NgbProgressbarConfig) {\r\n    this.max = config.max;\r\n    this.animated = config.animated;\r\n    this.striped = config.striped;\r\n    this.type = config.type;\r\n    this.showValue = config.showValue;\r\n    this.height = config.height;\r\n  }\r\n\r\n  getValue() { return getValueInRange(this.value, this.max); }\r\n\r\n  getPercentValue() { return 100 * this.getValue() / this.max; }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbProgressbar} from './progressbar';\r\n\r\nexport {NgbProgressbar} from './progressbar';\r\nexport {NgbProgressbarConfig} from './progressbar-config';\r\n\r\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\r\nexport class NgbProgressbarModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbProgressbarModule}; }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Configuration service for the NgbRating component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the ratings used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbRatingConfig {\r\n  max = 10;\r\n  readonly = false;\r\n  resettable = false;\r\n}\r\n","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit,\r\n  TemplateRef,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ContentChild,\r\n  forwardRef,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport {NgbRatingConfig} from './rating-config';\r\nimport {toString, getValueInRange} from '../util/util';\r\nimport {Key} from '../util/key';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\n\r\n/**\r\n * Context for the custom star display template\r\n */\r\nexport interface StarTemplateContext {\r\n  /**\r\n   * Star fill percentage. An integer value between 0 and 100\r\n   */\r\n  fill: number;\r\n\r\n  /**\r\n   * Index of the star.\r\n   */\r\n  index: number;\r\n}\r\n\r\nconst NGB_RATING_VALUE_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => NgbRating),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * Rating directive that will take care of visualising a star rating bar.\r\n */\r\n@Component({\r\n  selector: 'ngb-rating',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    'class': 'd-inline-flex',\r\n    'tabindex': '0',\r\n    'role': 'slider',\r\n    'aria-valuemin': '0',\r\n    '[attr.aria-valuemax]': 'max',\r\n    '[attr.aria-valuenow]': 'nextRate',\r\n    '[attr.aria-valuetext]': 'ariaValueText()',\r\n    '[attr.aria-disabled]': 'readonly ? true : null',\r\n    '(blur)': 'handleBlur()',\r\n    '(keydown)': 'handleKeyDown($event)',\r\n    '(mouseleave)': 'reset()'\r\n  },\r\n  template: `\r\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\r\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\r\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\r\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\r\n        <ng-template [ngTemplateOutlet]=\"starTemplate || t\" [ngTemplateOutletContext]=\"contexts[index]\"></ng-template>\r\n      </span>\r\n    </ng-template>\r\n  `,\r\n  providers: [NGB_RATING_VALUE_ACCESSOR]\r\n})\r\nexport class NgbRating implements ControlValueAccessor,\r\n    OnInit, OnChanges {\r\n  contexts: StarTemplateContext[] = [];\r\n  disabled = false;\r\n  nextRate: number;\r\n\r\n\r\n  /**\r\n   * Maximal rating that can be given using this widget.\r\n   */\r\n  @Input() max: number;\r\n\r\n  /**\r\n   * Current rating. Can be a decimal value like 3.75\r\n   */\r\n  @Input() rate: number;\r\n\r\n  /**\r\n   * A flag indicating if rating can be updated.\r\n   */\r\n  @Input() readonly: boolean;\r\n\r\n  /**\r\n   * A flag indicating if rating can be reset to 0 on mouse click\r\n   */\r\n  @Input() resettable: boolean;\r\n\r\n  /**\r\n   * A template to override star display.\r\n   * Alternatively put a <ng-template> as the only child of <ngb-rating> element\r\n   */\r\n  @Input() @ContentChild(TemplateRef) starTemplate: TemplateRef<StarTemplateContext>;\r\n\r\n  /**\r\n   * An event fired when a user is hovering over a given rating.\r\n   * Event's payload equals to the rating being hovered over.\r\n   */\r\n  @Output() hover = new EventEmitter<number>();\r\n\r\n  /**\r\n   * An event fired when a user stops hovering over a given rating.\r\n   * Event's payload equals to the rating of the last item being hovered over.\r\n   */\r\n  @Output() leave = new EventEmitter<number>();\r\n\r\n  /**\r\n   * An event fired when a user selects a new rating.\r\n   * Event's payload equals to the newly selected rating.\r\n   */\r\n  @Output() rateChange = new EventEmitter<number>(true);\r\n\r\n  onChange = (_: any) => {};\r\n  onTouched = () => {};\r\n\r\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\r\n    this.max = config.max;\r\n    this.readonly = config.readonly;\r\n  }\r\n\r\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\r\n\r\n  enter(value: number): void {\r\n    if (!this.readonly && !this.disabled) {\r\n      this._updateState(value);\r\n    }\r\n    this.hover.emit(value);\r\n  }\r\n\r\n  handleBlur() { this.onTouched(); }\r\n\r\n  handleClick(value: number) { this.update(this.resettable && this.rate === value ? 0 : value); }\r\n\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    if (Key[toString(event.which)]) {\r\n      event.preventDefault();\r\n\r\n      switch (event.which) {\r\n        case Key.ArrowDown:\r\n        case Key.ArrowLeft:\r\n          this.update(this.rate - 1);\r\n          break;\r\n        case Key.ArrowUp:\r\n        case Key.ArrowRight:\r\n          this.update(this.rate + 1);\r\n          break;\r\n        case Key.Home:\r\n          this.update(0);\r\n          break;\r\n        case Key.End:\r\n          this.update(this.max);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['rate']) {\r\n      this.update(this.rate);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\r\n    this._updateState(this.rate);\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\r\n\r\n  reset(): void {\r\n    this.leave.emit(this.nextRate);\r\n    this._updateState(this.rate);\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\r\n\r\n  update(value: number, internalChange = true): void {\r\n    const newRate = getValueInRange(value, this.max, 0);\r\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\r\n      this.rate = newRate;\r\n      this.rateChange.emit(this.rate);\r\n    }\r\n    if (internalChange) {\r\n      this.onChange(this.rate);\r\n      this.onTouched();\r\n    }\r\n    this._updateState(this.rate);\r\n  }\r\n\r\n  writeValue(value) {\r\n    this.update(value, false);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private _getFillValue(index: number): number {\r\n    const diff = this.nextRate - index;\r\n\r\n    if (diff >= 1) {\r\n      return 100;\r\n    }\r\n    if (diff < 1 && diff > 0) {\r\n      return Number.parseInt((diff * 100).toFixed(2));\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  private _updateState(nextValue: number) {\r\n    this.nextRate = nextValue;\r\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\r\n  }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbRating} from './rating';\r\n\r\nexport {NgbRating} from './rating';\r\nexport {NgbRatingConfig} from './rating-config';\r\n\r\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\r\nexport class NgbRatingModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbRatingModule}; }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Configuration service for the NgbTabset component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the tabsets used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbTabsetConfig {\r\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\r\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\r\n  type: 'tabs' | 'pills' = 'tabs';\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ContentChildren,\r\n  QueryList,\r\n  Directive,\r\n  TemplateRef,\r\n  ContentChild,\r\n  AfterContentChecked,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport {NgbTabsetConfig} from './tabset-config';\r\n\r\nlet nextId = 0;\r\n\r\n/**\r\n * This directive should be used to wrap tab titles that need to contain HTML markup or other directives.\r\n */\r\n@Directive({selector: 'ng-template[ngbTabTitle]'})\r\nexport class NgbTabTitle {\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n\r\n/**\r\n * This directive must be used to wrap content to be displayed in a tab.\r\n */\r\n@Directive({selector: 'ng-template[ngbTabContent]'})\r\nexport class NgbTabContent {\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n\r\n/**\r\n * A directive representing an individual tab.\r\n */\r\n@Directive({selector: 'ngb-tab'})\r\nexport class NgbTab {\r\n  /**\r\n   * Unique tab identifier. Must be unique for the entire document for proper accessibility support.\r\n   */\r\n  @Input() id = `ngb-tab-${nextId++}`;\r\n  /**\r\n   * Simple (string only) title. Use the \"NgbTabTitle\" directive for more complex use-cases.\r\n   */\r\n  @Input() title: string;\r\n  /**\r\n   * Allows toggling disabled state of a given state. Disabled tabs can't be selected.\r\n   */\r\n  @Input() disabled = false;\r\n\r\n  titleTpl: NgbTabTitle | null;\r\n  contentTpl: NgbTabContent | null;\r\n\r\n  @ContentChildren(NgbTabTitle, {descendants: false}) titleTpls: QueryList<NgbTabTitle>;\r\n  @ContentChildren(NgbTabContent, {descendants: false}) contentTpls: QueryList<NgbTabContent>;\r\n\r\n  ngAfterContentChecked() {\r\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\r\n    // only @ContentChildren allows us to specify the {descendants: false} option.\r\n    // Without {descendants: false} we are hitting bugs described in:\r\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\r\n    this.titleTpl = this.titleTpls.first;\r\n    this.contentTpl = this.contentTpls.first;\r\n  }\r\n}\r\n\r\n/**\r\n * The payload of the change event fired right before the tab change\r\n */\r\nexport interface NgbTabChangeEvent {\r\n  /**\r\n   * Id of the currently active tab\r\n   */\r\n  activeId: string;\r\n\r\n  /**\r\n   * Id of the newly selected tab\r\n   */\r\n  nextId: string;\r\n\r\n  /**\r\n   * Function that will prevent tab switch if called\r\n   */\r\n  preventDefault: () => void;\r\n}\r\n\r\n/**\r\n * A component that makes it easy to create tabbed interface.\r\n */\r\n@Component({\r\n  selector: 'ngb-tabset',\r\n  exportAs: 'ngbTabset',\r\n  template: `\r\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\r\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\r\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\r\n          href (click)=\"!!select(tab.id)\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\r\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\r\n          [attr.aria-expanded]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\r\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n    <div class=\"tab-content\">\r\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\r\n        <div\r\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\r\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\r\n          role=\"tabpanel\"\r\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\"\r\n          [attr.aria-expanded]=\"tab.id === activeId\">\r\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  `\r\n})\r\nexport class NgbTabset implements AfterContentChecked {\r\n  justifyClass: string;\r\n\r\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\r\n\r\n  /**\r\n   * An identifier of an initially selected (active) tab. Use the \"select\" method to switch a tab programmatically.\r\n   */\r\n  @Input() activeId: string;\r\n\r\n  /**\r\n   * Whether the closed tabs should be hidden without destroying them\r\n   */\r\n  @Input() destroyOnHide = true;\r\n\r\n  /**\r\n   * The horizontal alignment of the nav with flexbox utilities. Can be one of 'start', 'center', 'end', 'fill' or\r\n   * 'justified'\r\n   * The default value is 'start'.\r\n   */\r\n  @Input()\r\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\r\n    if (className === 'fill' || className === 'justified') {\r\n      this.justifyClass = `nav-${className}`;\r\n    } else {\r\n      this.justifyClass = `justify-content-${className}`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The orientation of the nav (horizontal or vertical).\r\n   * The default value is 'horizontal'.\r\n   */\r\n  @Input() orientation: 'horizontal' | 'vertical';\r\n\r\n  /**\r\n   * Type of navigation to be used for tabs. Can be one of Bootstrap defined types ('tabs' or 'pills').\r\n   * Since 3.0.0 can also be an arbitrary string (for custom themes).\r\n   */\r\n  @Input() type: 'tabs' | 'pills' | string;\r\n\r\n  /**\r\n   * A tab change event fired right before the tab selection happens. See NgbTabChangeEvent for payload details\r\n   */\r\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\r\n\r\n  constructor(config: NgbTabsetConfig) {\r\n    this.type = config.type;\r\n    this.justify = config.justify;\r\n    this.orientation = config.orientation;\r\n  }\r\n\r\n  /**\r\n   * Selects the tab with the given id and shows its associated pane.\r\n   * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\r\n   */\r\n  select(tabId: string) {\r\n    let selectedTab = this._getTabById(tabId);\r\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\r\n      let defaultPrevented = false;\r\n\r\n      this.tabChange.emit(\r\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\r\n\r\n      if (!defaultPrevented) {\r\n        this.activeId = selectedTab.id;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    // auto-correct activeId that might have been set incorrectly as input\r\n    let activeTab = this._getTabById(this.activeId);\r\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\r\n  }\r\n\r\n  private _getTabById(id: string): NgbTab {\r\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\r\n    return tabsWithId.length ? tabsWithId[0] : null;\r\n  }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle} from './tabset';\r\n\r\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\r\nexport {NgbTabsetConfig} from './tabset-config';\r\n\r\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\r\n\r\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule]})\r\nexport class NgbTabsetModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTabsetModule}; }\r\n}\r\n","import {isNumber, toInteger} from '../util/util';\r\n\r\nexport class NgbTime {\r\n  hour: number;\r\n  minute: number;\r\n  second: number;\r\n\r\n  constructor(hour?: number, minute?: number, second?: number) {\r\n    this.hour = toInteger(hour);\r\n    this.minute = toInteger(minute);\r\n    this.second = toInteger(second);\r\n  }\r\n\r\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\r\n\r\n  updateHour(hour: number) {\r\n    if (isNumber(hour)) {\r\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\r\n    } else {\r\n      this.hour = NaN;\r\n    }\r\n  }\r\n\r\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\r\n\r\n  updateMinute(minute: number) {\r\n    if (isNumber(minute)) {\r\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\r\n      this.changeHour(Math.floor(minute / 60));\r\n    } else {\r\n      this.minute = NaN;\r\n    }\r\n  }\r\n\r\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\r\n\r\n  updateSecond(second: number) {\r\n    if (isNumber(second)) {\r\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\r\n      this.changeMinute(Math.floor(second / 60));\r\n    } else {\r\n      this.second = NaN;\r\n    }\r\n  }\r\n\r\n  isValid(checkSecs = true) {\r\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\r\n  }\r\n\r\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Configuration service for the NgbTimepicker component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the timepickers used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbTimepickerConfig {\r\n  meridian = false;\r\n  spinners = true;\r\n  seconds = false;\r\n  hourStep = 1;\r\n  minuteStep = 1;\r\n  secondStep = 1;\r\n  disabled = false;\r\n  readonlyInputs = false;\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbTimeStruct} from './ngb-time-struct';\r\nimport {isInteger} from '../util/util';\r\n\r\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\r\n  return new NgbTimeStructAdapter();\r\n}\r\n\r\n/**\r\n * Abstract type serving as a DI token for the service converting from your application Time model to internal\r\n * NgbTimeStruct model.\r\n * A default implementation converting from and to NgbTimeStruct is provided for retro-compatibility,\r\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\r\n *\r\n * @since 2.2.0\r\n */\r\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY})\r\nexport abstract class NgbTimeAdapter<T> {\r\n  /**\r\n   * Converts user-model date into an NgbTimeStruct for internal use in the library\r\n   */\r\n  abstract fromModel(value: T): NgbTimeStruct;\r\n\r\n  /**\r\n   * Converts internal time value NgbTimeStruct to user-model date\r\n   * The returned type is supposed to be of the same type as fromModel() input-value param\r\n   */\r\n  abstract toModel(time: NgbTimeStruct): T;\r\n}\r\n\r\n@Injectable()\r\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\r\n  /**\r\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\r\n   */\r\n  fromModel(time: NgbTimeStruct): NgbTimeStruct {\r\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\r\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\r\n        null;\r\n  }\r\n\r\n  /**\r\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\r\n   */\r\n  toModel(time: NgbTimeStruct): NgbTimeStruct {\r\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\r\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\r\n        null;\r\n  }\r\n}\r\n","import {Component, forwardRef, Input, OnChanges, SimpleChanges} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\n\r\nimport {isNumber, padNumber, toInteger} from '../util/util';\r\nimport {NgbTime} from './ngb-time';\r\nimport {NgbTimepickerConfig} from './timepicker-config';\r\nimport {NgbTimeAdapter} from './ngb-time-adapter';\r\n\r\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => NgbTimepicker),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * A lightweight & configurable timepicker directive.\r\n */\r\n@Component({\r\n  selector: 'ngb-timepicker',\r\n  styles: [`\r\n\r\n    :host {\r\n      font-size: 1rem;\r\n    }\r\n\r\n    .ngb-tp {\r\n      display: -ms-flexbox;\r\n      display: flex;\r\n      -ms-flex-align: center;\r\n      align-items: center;\r\n    }\r\n\r\n    .ngb-tp-input-container {\r\n      width: 4em;\r\n    }\r\n\r\n    .ngb-tp-hour, .ngb-tp-minute, .ngb-tp-second, .ngb-tp-meridian {\r\n      display: -ms-flexbox;\r\n      display: flex;\r\n      -ms-flex-direction: column;\r\n      flex-direction: column;\r\n      -ms-flex-align: center;\r\n      align-items: center;\r\n      -ms-flex-pack: distribute;\r\n      justify-content: space-around;\r\n    }\r\n\r\n    .ngb-tp-spacer {\r\n      width: 1em;\r\n      text-align: center;\r\n    }\r\n\r\n    .chevron::before {\r\n      border-style: solid;\r\n      border-width: 0.29em 0.29em 0 0;\r\n      content: '';\r\n      display: inline-block;\r\n      height: 0.69em;\r\n      left: 0.05em;\r\n      position: relative;\r\n      top: 0.15em;\r\n      transform: rotate(-45deg);\r\n      -webkit-transform: rotate(-45deg);\r\n      -ms-transform: rotate(-45deg);\r\n      vertical-align: middle;\r\n      width: 0.71em;\r\n    }\r\n\r\n    .chevron.bottom:before {\r\n      top: -.3em;\r\n      -webkit-transform: rotate(135deg);\r\n      -ms-transform: rotate(135deg);\r\n      transform: rotate(135deg);\r\n    }\r\n\r\n    input {\r\n      text-align: center;\r\n    }\r\n  `],\r\n  template: `\r\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\r\n      <div class=\"ngb-tp\">\r\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\r\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeHour(hourStep)\"\r\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\r\n            [disabled]=\"disabled\">\r\n            <span class=\"chevron\"></span>\r\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\r\n          </button>\r\n          <input type=\"text\" class=\"form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\" maxlength=\"2\"\r\n            placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\r\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\r\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\">\r\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeHour(-hourStep)\"\r\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\r\n            [disabled]=\"disabled\">\r\n            <span class=\"chevron bottom\"></span>\r\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"ngb-tp-spacer\">:</div>\r\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\r\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\r\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\r\n            [disabled]=\"disabled\">\r\n            <span class=\"chevron\"></span>\r\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\r\n          </button>\r\n          <input type=\"text\" class=\"form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\" maxlength=\"2\"\r\n            placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\r\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\r\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\">\r\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\r\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\r\n            [disabled]=\"disabled\">\r\n            <span class=\"chevron bottom\"></span>\r\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\r\n          </button>\r\n        </div>\r\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\r\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\r\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeSecond(secondStep)\"\r\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\r\n            [disabled]=\"disabled\">\r\n            <span class=\"chevron\"></span>\r\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\r\n          </button>\r\n          <input type=\"text\" class=\"form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\" maxlength=\"2\"\r\n            placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\r\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\r\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\">\r\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\r\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\r\n            [disabled]=\"disabled\">\r\n            <span class=\"chevron bottom\"></span>\r\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\r\n          </button>\r\n        </div>\r\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\r\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\r\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\r\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\r\n                  (click)=\"toggleMeridian()\">\r\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">PM</ng-container>\r\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">AM</ng-template>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </fieldset>\r\n  `,\r\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\r\n})\r\nexport class NgbTimepicker implements ControlValueAccessor,\r\n    OnChanges {\r\n  disabled: boolean;\r\n  model: NgbTime;\r\n\r\n  /**\r\n   * Whether to display 12H or 24H mode.\r\n   */\r\n  @Input() meridian: boolean;\r\n\r\n  /**\r\n   * Whether to display the spinners above and below the inputs.\r\n   */\r\n  @Input() spinners: boolean;\r\n\r\n  /**\r\n   * Whether to display seconds input.\r\n   */\r\n  @Input() seconds: boolean;\r\n\r\n  /**\r\n   * Number of hours to increase or decrease when using a button.\r\n   */\r\n  @Input() hourStep: number;\r\n\r\n  /**\r\n   * Number of minutes to increase or decrease when using a button.\r\n   */\r\n  @Input() minuteStep: number;\r\n\r\n  /**\r\n   * Number of seconds to increase or decrease when using a button.\r\n   */\r\n  @Input() secondStep: number;\r\n\r\n  /**\r\n   * To make timepicker readonly\r\n   */\r\n  @Input() readonlyInputs: boolean;\r\n\r\n  /**\r\n   * To set the size of the inputs and button\r\n   */\r\n  @Input() size: 'small' | 'medium' | 'large';\r\n\r\n  constructor(config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>) {\r\n    this.meridian = config.meridian;\r\n    this.spinners = config.spinners;\r\n    this.seconds = config.seconds;\r\n    this.hourStep = config.hourStep;\r\n    this.minuteStep = config.minuteStep;\r\n    this.secondStep = config.secondStep;\r\n    this.disabled = config.disabled;\r\n    this.readonlyInputs = config.readonlyInputs;\r\n    this.size = config.size;\r\n  }\r\n\r\n  onChange = (_: any) => {};\r\n  onTouched = () => {};\r\n\r\n  writeValue(value) {\r\n    const structValue = this._ngbTimeAdapter.fromModel(value);\r\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\r\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\r\n      this.model.second = 0;\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\r\n\r\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\r\n\r\n  changeHour(step: number) {\r\n    this.model.changeHour(step);\r\n    this.propagateModelChange();\r\n  }\r\n\r\n  changeMinute(step: number) {\r\n    this.model.changeMinute(step);\r\n    this.propagateModelChange();\r\n  }\r\n\r\n  changeSecond(step: number) {\r\n    this.model.changeSecond(step);\r\n    this.propagateModelChange();\r\n  }\r\n\r\n  updateHour(newVal: string) {\r\n    const isPM = this.model.hour >= 12;\r\n    const enteredHour = toInteger(newVal);\r\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\r\n      this.model.updateHour(enteredHour + 12);\r\n    } else {\r\n      this.model.updateHour(enteredHour);\r\n    }\r\n    this.propagateModelChange();\r\n  }\r\n\r\n  updateMinute(newVal: string) {\r\n    this.model.updateMinute(toInteger(newVal));\r\n    this.propagateModelChange();\r\n  }\r\n\r\n  updateSecond(newVal: string) {\r\n    this.model.updateSecond(toInteger(newVal));\r\n    this.propagateModelChange();\r\n  }\r\n\r\n  toggleMeridian() {\r\n    if (this.meridian) {\r\n      this.changeHour(12);\r\n    }\r\n  }\r\n\r\n  formatHour(value: number) {\r\n    if (isNumber(value)) {\r\n      if (this.meridian) {\r\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\r\n      } else {\r\n        return padNumber(value % 24);\r\n      }\r\n    } else {\r\n      return padNumber(NaN);\r\n    }\r\n  }\r\n\r\n  formatMinSec(value: number) { return padNumber(value); }\r\n\r\n  get isSmallSize(): boolean { return this.size === 'small'; }\r\n\r\n  get isLargeSize(): boolean { return this.size === 'large'; }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\r\n      this.model.second = 0;\r\n      this.propagateModelChange(false);\r\n    }\r\n  }\r\n\r\n  private propagateModelChange(touched = true) {\r\n    if (touched) {\r\n      this.onTouched();\r\n    }\r\n    if (this.model.isValid(this.seconds)) {\r\n      this.onChange(\r\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\r\n    } else {\r\n      this.onChange(this._ngbTimeAdapter.toModel(null));\r\n    }\r\n  }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbTimepicker} from './timepicker';\r\n\r\nexport {NgbTimepicker} from './timepicker';\r\nexport {NgbTimepickerConfig} from './timepicker-config';\r\nexport {NgbTimeStruct} from './ngb-time-struct';\r\nexport {NgbTimeAdapter} from './ngb-time-adapter';\r\n\r\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\r\nexport class NgbTimepickerModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTimepickerModule}; }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {PlacementArray} from '../util/positioning';\r\n\r\n/**\r\n * Configuration service for the NgbTooltip directive.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the tooltips used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbTooltipConfig {\r\n  autoClose: boolean | 'inside' | 'outside' = true;\r\n  placement: PlacementArray = 'top';\r\n  triggers = 'hover';\r\n  container: string;\r\n  disableTooltip = false;\r\n  tooltipClass: string;\r\n}\r\n","import {\r\n  Component,\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnDestroy,\r\n  Inject,\r\n  Injector,\r\n  Renderer2,\r\n  ComponentRef,\r\n  ElementRef,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  ComponentFactoryResolver,\r\n  NgZone\r\n} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\nimport {fromEvent, race} from 'rxjs';\r\nimport {filter, takeUntil} from 'rxjs/operators';\r\n\r\nimport {listenToTriggers} from '../util/triggers';\r\nimport {positionElements, Placement, PlacementArray} from '../util/positioning';\r\nimport {PopupService} from '../util/popup';\r\nimport {Key} from '../util/key';\r\n\r\nimport {NgbTooltipConfig} from './tooltip-config';\r\n\r\nlet nextId = 0;\r\n\r\n@Component({\r\n  selector: 'ngb-tooltip-window',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    '[class]':\r\n        '\"tooltip show bs-tooltip-\" + placement.split(\"-\")[0]+\" bs-tooltip-\" + placement + (tooltipClass ? \" \" + tooltipClass : \"\")',\r\n    'role': 'tooltip',\r\n    '[id]': 'id'\r\n  },\r\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\r\n  styles: [`\r\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\r\n      left: calc(50% - 0.4rem);\r\n    }\r\n\r\n    :host.bs-tooltip-top-left .arrow, :host.bs-tooltip-bottom-left .arrow {\r\n      left: 1em;\r\n    }\r\n\r\n    :host.bs-tooltip-top-right .arrow, :host.bs-tooltip-bottom-right .arrow {\r\n      left: auto;\r\n      right: 0.8rem;\r\n    }\r\n\r\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\r\n      top: calc(50% - 0.4rem);\r\n    }\r\n\r\n    :host.bs-tooltip-left-top .arrow, :host.bs-tooltip-right-top .arrow {\r\n      top: 0.4rem;\r\n    }\r\n\r\n    :host.bs-tooltip-left-bottom .arrow, :host.bs-tooltip-right-bottom .arrow {\r\n      top: auto;\r\n      bottom: 0.4rem;\r\n    }\r\n  `]\r\n})\r\nexport class NgbTooltipWindow {\r\n  @Input() placement: Placement = 'top';\r\n  @Input() id: string;\r\n  @Input() tooltipClass: string;\r\n\r\n  constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\r\n\r\n  applyPlacement(_placement: Placement) {\r\n    // remove the current placement classes\r\n    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\r\n    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\r\n\r\n    // set the new placement classes\r\n    this.placement = _placement;\r\n\r\n    // apply the new placement\r\n    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\r\n    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\r\n  }\r\n  /**\r\n   * Tells whether the event has been triggered from this component's subtree or not.\r\n   *\r\n   * @param event the event to check\r\n   *\r\n   * @return whether the event has been triggered from this component's subtree or not.\r\n   */\r\n  isEventFrom(event: Event): boolean { return this._element.nativeElement.contains(event.target as HTMLElement); }\r\n}\r\n\r\n/**\r\n * A lightweight, extensible directive for fancy tooltip creation.\r\n */\r\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\r\nexport class NgbTooltip implements OnInit, OnDestroy {\r\n  /**\r\n   * Indicates whether the tooltip should be closed on Escape key and inside/outside clicks.\r\n   *\r\n   * - true (default): closes on both outside and inside clicks as well as Escape presses\r\n   * - false: disables the autoClose feature (NB: triggers still apply)\r\n   * - 'inside': closes on inside clicks as well as Escape presses\r\n   * - 'outside': closes on outside clicks (sometimes also achievable through triggers)\r\n   * as well as Escape presses\r\n   *\r\n   * @since 3.0.0\r\n   */\r\n  @Input() autoClose: boolean | 'inside' | 'outside';\r\n  /**\r\n    * Placement of a tooltip accepts:\r\n    *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\r\n    *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\r\n    * and array of above values.\r\n    */\r\n  @Input() placement: PlacementArray;\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of event names.\r\n   */\r\n  @Input() triggers: string;\r\n  /**\r\n   * A selector specifying the element the tooltip should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  @Input() container: string;\r\n  /**\r\n   * A flag indicating if a given tooltip is disabled and should not be displayed.\r\n   *\r\n   * @since 1.1.0\r\n   */\r\n  @Input() disableTooltip: boolean;\r\n  /**\r\n   * An optional class applied to ngb-tooltip-window\r\n   *\r\n   * @since 3.2.0\r\n   */\r\n  @Input() tooltipClass: string;\r\n  /**\r\n   * Emits an event when the tooltip is shown\r\n   */\r\n  @Output() shown = new EventEmitter();\r\n  /**\r\n   * Emits an event when the tooltip is hidden\r\n   */\r\n  @Output() hidden = new EventEmitter();\r\n\r\n  private _ngbTooltip: string | TemplateRef<any>;\r\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\r\n  private _popupService: PopupService<NgbTooltipWindow>;\r\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\r\n  private _unregisterListenersFn;\r\n  private _zoneSubscription: any;\r\n\r\n  constructor(\r\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\r\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\r\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any) {\r\n    this.autoClose = config.autoClose;\r\n    this.placement = config.placement;\r\n    this.triggers = config.triggers;\r\n    this.container = config.container;\r\n    this.disableTooltip = config.disableTooltip;\r\n    this.tooltipClass = config.tooltipClass;\r\n    this._popupService = new PopupService<NgbTooltipWindow>(\r\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\r\n\r\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\r\n      if (this._windowRef) {\r\n        this._windowRef.instance.applyPlacement(\r\n            positionElements(\r\n                this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\r\n                this.container === 'body'));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Content to be displayed as tooltip. If falsy, the tooltip won't open.\r\n   */\r\n  @Input()\r\n  set ngbTooltip(value: string | TemplateRef<any>) {\r\n    this._ngbTooltip = value;\r\n    if (!value && this._windowRef) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  get ngbTooltip() { return this._ngbTooltip; }\r\n\r\n  /**\r\n   * Opens an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\r\n   * The context is an optional value to be injected into the tooltip template when it is created.\r\n   */\r\n  open(context?: any) {\r\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\r\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\r\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\r\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\r\n\r\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\r\n\r\n      if (this.container === 'body') {\r\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\r\n      }\r\n\r\n      this._windowRef.instance.placement = Array.isArray(this.placement) ? this.placement[0] : this.placement;\r\n\r\n      // apply styling to set basic css-classes on target element, before going for positioning\r\n      this._windowRef.changeDetectorRef.detectChanges();\r\n      this._windowRef.changeDetectorRef.markForCheck();\r\n\r\n      // position tooltip along the element\r\n      this._windowRef.instance.applyPlacement(\r\n          positionElements(\r\n              this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\r\n              this.container === 'body'));\r\n\r\n      if (this.autoClose) {\r\n        this._ngZone.runOutsideAngular(() => {\r\n          // prevents automatic closing right after an opening by putting a guard for the time of one event handling\r\n          // pass\r\n          // use case: click event would reach an element opening the tooltip first, then reach the autoClose handler\r\n          // which would close it\r\n          let justOpened = true;\r\n          requestAnimationFrame(() => justOpened = false);\r\n\r\n          const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\r\n                               .pipe(takeUntil(this.hidden), filter(event => event.which === Key.Escape));\r\n\r\n          const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\r\n                              .pipe(\r\n                                  takeUntil(this.hidden), filter(() => !justOpened),\r\n                                  filter(event => this._shouldCloseFromClick(event)));\r\n\r\n          race<Event>([escapes$, clicks$]).subscribe(() => this._ngZone.run(() => this.close()));\r\n        });\r\n      }\r\n\r\n      this.shown.emit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\r\n   */\r\n  close(): void {\r\n    if (this._windowRef != null) {\r\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\r\n      this._popupService.close();\r\n      this._windowRef = null;\r\n      this.hidden.emit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\r\n   */\r\n  toggle(): void {\r\n    if (this._windowRef) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns whether or not the tooltip is currently being shown\r\n   */\r\n  isOpen(): boolean { return this._windowRef != null; }\r\n\r\n  ngOnInit() {\r\n    this._unregisterListenersFn = listenToTriggers(\r\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\r\n        this.toggle.bind(this));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.close();\r\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\r\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\r\n    if (this._unregisterListenersFn) {\r\n      this._unregisterListenersFn();\r\n    }\r\n    this._zoneSubscription.unsubscribe();\r\n  }\r\n\r\n  private _shouldCloseFromClick(event: MouseEvent) {\r\n    if (event.button !== 2) {\r\n      if (this.autoClose === true) {\r\n        return true;\r\n      } else if (this.autoClose === 'inside' && this._isEventFromTooltip(event)) {\r\n        return true;\r\n      } else if (this.autoClose === 'outside' && !this._isEventFromTooltip(event)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private _isEventFromTooltip(event: MouseEvent) {\r\n    const popup = this._windowRef.instance;\r\n    return popup ? popup.isEventFrom(event) : false;\r\n  }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\n\r\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\r\n\r\nexport {NgbTooltipConfig} from './tooltip-config';\r\nexport {NgbTooltip} from './tooltip';\r\nexport {Placement} from '../util/positioning';\r\n\r\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\r\nexport class NgbTooltipModule {\r\n  /**\r\n   * No need in forRoot anymore with tree-shakeable services\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTooltipModule}; }\r\n}\r\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges} from '@angular/core';\r\nimport {regExpEscape, toString} from '../util/util';\r\n\r\n/**\r\n * A component that can be used inside a custom result template in order to highlight the term inside the text of the\r\n * result\r\n */\r\n@Component({\r\n  selector: 'ngb-highlight',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\r\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\r\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\r\n  styles: [`\r\n    .ngb-highlight {\r\n      font-weight: bold;\r\n    }\r\n  `]\r\n})\r\nexport class NgbHighlight implements OnChanges {\r\n  parts: string[];\r\n\r\n  /**\r\n   * The CSS class of the span elements wrapping the term inside the result\r\n   */\r\n  @Input() highlightClass = 'ngb-highlight';\r\n\r\n  /**\r\n   * The result text to display. If the term is found inside this text, it's highlighted\r\n   */\r\n  @Input() result: string;\r\n\r\n  /**\r\n   * The searched term\r\n   */\r\n  @Input() term: string;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const resultStr = toString(this.result);\r\n    const resultLC = resultStr.toLowerCase();\r\n    const termLC = toString(this.term).toLowerCase();\r\n    let currentIdx = 0;\r\n\r\n    if (termLC.length > 0) {\r\n      this.parts = resultLC.split(new RegExp(`(${regExpEscape(termLC)})`)).map((part) => {\r\n        const originalPart = resultStr.substr(currentIdx, part.length);\r\n        currentIdx += part.length;\r\n        return originalPart;\r\n      });\r\n    } else {\r\n      this.parts = [resultStr];\r\n    }\r\n  }\r\n}\r\n","import {Component, Input, Output, EventEmitter, TemplateRef, OnInit} from '@angular/core';\r\n\r\nimport {toString} from '../util/util';\r\n\r\n/**\r\n * Context for the typeahead result template in case you want to override the default one\r\n */\r\nexport interface ResultTemplateContext {\r\n  /**\r\n   * Your typeahead result data model\r\n   */\r\n  result: any;\r\n\r\n  /**\r\n   * Search term from the input used to get current result\r\n   */\r\n  term: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngb-typeahead-window',\r\n  exportAs: 'ngbTypeaheadWindow',\r\n  host: {'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\r\n  template: `\r\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\r\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\r\n    </ng-template>\r\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\r\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\r\n        [id]=\"id + '-' + idx\"\r\n        [class.active]=\"idx === activeIdx\"\r\n        (mouseenter)=\"markActive(idx)\"\r\n        (click)=\"select(result)\">\r\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\r\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\r\n      </button>\r\n    </ng-template>\r\n  `\r\n})\r\nexport class NgbTypeaheadWindow implements OnInit {\r\n  activeIdx = 0;\r\n\r\n  /**\r\n   *  The id for the typeahead window. The id should be unique and the same\r\n   *  as the associated typeahead's id.\r\n   */\r\n  @Input() id: string;\r\n\r\n  /**\r\n   * Flag indicating if the first row should be active initially\r\n   */\r\n  @Input() focusFirst = true;\r\n\r\n  /**\r\n   * Typeahead match results to be displayed\r\n   */\r\n  @Input() results;\r\n\r\n  /**\r\n   * Search term used to get current results\r\n   */\r\n  @Input() term: string;\r\n\r\n  /**\r\n   * A function used to format a given result before display. This function should return a formatted string without any\r\n   * HTML markup\r\n   */\r\n  @Input() formatter = toString;\r\n\r\n  /**\r\n   * A template to override a matching result default display\r\n   */\r\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\r\n\r\n  /**\r\n   * Event raised when user selects a particular result row\r\n   */\r\n  @Output('select') selectEvent = new EventEmitter();\r\n\r\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\r\n\r\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\r\n\r\n  getActive() { return this.results[this.activeIdx]; }\r\n\r\n  markActive(activeIdx: number) {\r\n    this.activeIdx = activeIdx;\r\n    this._activeChanged();\r\n  }\r\n\r\n  next() {\r\n    if (this.activeIdx === this.results.length - 1) {\r\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\r\n    } else {\r\n      this.activeIdx++;\r\n    }\r\n    this._activeChanged();\r\n  }\r\n\r\n  prev() {\r\n    if (this.activeIdx < 0) {\r\n      this.activeIdx = this.results.length - 1;\r\n    } else if (this.activeIdx === 0) {\r\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\r\n    } else {\r\n      this.activeIdx--;\r\n    }\r\n    this._activeChanged();\r\n  }\r\n\r\n  resetActive() {\r\n    this.activeIdx = this.focusFirst ? 0 : -1;\r\n    this._activeChanged();\r\n  }\r\n\r\n  select(item) { this.selectEvent.emit(item); }\r\n\r\n  ngOnInit() { this.resetActive(); }\r\n\r\n  private _activeChanged() {\r\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\r\n  }\r\n}\r\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n\r\n\r\n// usefulness (and default value) of delay documented in Material's CDK\r\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\r\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\r\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\r\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\r\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\r\n  return 100;\r\n}\r\n\r\n\r\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\r\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\r\n\r\n  if (element == null && lazyCreate) {\r\n    element = document.createElement('div');\r\n\r\n    element.setAttribute('id', 'ngb-live');\r\n    element.setAttribute('aria-live', 'polite');\r\n    element.setAttribute('aria-atomic', 'true');\r\n\r\n    element.classList.add('sr-only');\r\n\r\n    document.body.appendChild(element);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class Live implements OnDestroy {\r\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\r\n\r\n  ngOnDestroy() {\r\n    const element = getLiveElement(this._document);\r\n    if (element) {\r\n      element.parentElement.removeChild(element);\r\n    }\r\n  }\r\n\r\n  say(message: string) {\r\n    const element = getLiveElement(this._document, true);\r\n    const delay = this._delay;\r\n\r\n    element.textContent = '';\r\n    const setText = () => element.textContent = message;\r\n    if (delay === null) {\r\n      setText();\r\n    } else {\r\n      setTimeout(setText, delay);\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {PlacementArray} from '../util/positioning';\r\n\r\n/**\r\n * Configuration service for the NgbTypeahead component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the typeaheads used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbTypeaheadConfig {\r\n  container;\r\n  editable = true;\r\n  focusFirst = true;\r\n  showHint = false;\r\n  placement: PlacementArray = 'bottom-left';\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Injector,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {Observable, BehaviorSubject, Subscription, fromEvent} from 'rxjs';\r\nimport {positionElements, PlacementArray} from '../util/positioning';\r\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\r\nimport {PopupService} from '../util/popup';\r\nimport {toString, isDefined} from '../util/util';\r\nimport {Key} from '../util/key';\r\nimport {Live} from '../util/accessibility/live';\r\nimport {NgbTypeaheadConfig} from './typeahead-config';\r\nimport {map, switchMap, tap} from 'rxjs/operators';\r\n\r\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => NgbTypeahead),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * Payload of the selectItem event.\r\n */\r\nexport interface NgbTypeaheadSelectItemEvent {\r\n  /**\r\n   * An item about to be selected\r\n   */\r\n  item: any;\r\n\r\n  /**\r\n   * Function that will prevent item selection if called\r\n   */\r\n  preventDefault: () => void;\r\n}\r\n\r\nlet nextWindowId = 0;\r\n\r\n/**\r\n * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input\r\n */\r\n@Directive({\r\n  selector: 'input[ngbTypeahead]',\r\n  exportAs: 'ngbTypeahead',\r\n  host: {\r\n    '(blur)': 'handleBlur()',\r\n    '[class.open]': 'isPopupOpen()',\r\n    '(document:click)': 'onDocumentClick($event)',\r\n    '(keydown)': 'handleKeyDown($event)',\r\n    '[autocomplete]': 'autocomplete',\r\n    'autocapitalize': 'off',\r\n    'autocorrect': 'off',\r\n    'role': 'combobox',\r\n    'aria-multiline': 'false',\r\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\r\n    '[attr.aria-activedescendant]': 'activeDescendant',\r\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\r\n    '[attr.aria-expanded]': 'isPopupOpen()'\r\n  },\r\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\r\n})\r\nexport class NgbTypeahead implements ControlValueAccessor,\r\n    OnInit, OnDestroy {\r\n  private _popupService: PopupService<NgbTypeaheadWindow>;\r\n  private _subscription: Subscription;\r\n  private _inputValueBackup: string;\r\n  private _valueChanges: Observable<string>;\r\n  private _resubscribeTypeahead: BehaviorSubject<any>;\r\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\r\n  private _zoneSubscription: any;\r\n\r\n  /**\r\n   * Value for the configurable autocomplete attribute.\r\n   * Defaults to 'off' to disable the native browser autocomplete, but this standard value does not seem\r\n   * to be always correctly taken into account.\r\n   *\r\n   * @since 2.1.0\r\n   */\r\n  @Input() autocomplete = 'off';\r\n\r\n  /**\r\n   * A selector specifying the element the tooltip should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  @Input() container: string;\r\n\r\n  /**\r\n   * A flag indicating if model values should be restricted to the ones selected from the popup only.\r\n   */\r\n  @Input() editable: boolean;\r\n\r\n  /**\r\n   * A flag indicating if the first match should automatically be focused as you type.\r\n   */\r\n  @Input() focusFirst: boolean;\r\n\r\n  /**\r\n   * A function to convert a given value into string to display in the input field\r\n   */\r\n  @Input() inputFormatter: (value: any) => string;\r\n\r\n  /**\r\n   * A function to transform the provided observable text into the array of results.  Note that the \"this\" argument\r\n   * is undefined so you need to explicitly bind it to a desired \"this\" target.\r\n   */\r\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<any[]>;\r\n\r\n  /**\r\n   * A function to format a given result before display. This function should return a formatted string without any\r\n   * HTML markup\r\n   */\r\n  @Input() resultFormatter: (value: any) => string;\r\n\r\n  /**\r\n   * A template to override a matching result default display\r\n   */\r\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\r\n\r\n  /**\r\n   * Show hint when an option in the result list matches.\r\n   */\r\n  @Input() showHint: boolean;\r\n\r\n  /** Placement of a typeahead accepts:\r\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\r\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\r\n   * and array of above values.\r\n  */\r\n  @Input() placement: PlacementArray = 'bottom-left';\r\n\r\n  /**\r\n   * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.\r\n   */\r\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\r\n\r\n  activeDescendant: string;\r\n  popupId = `ngb-typeahead-${nextWindowId++}`;\r\n\r\n  private _onTouched = () => {};\r\n  private _onChange = (_: any) => {};\r\n\r\n  constructor(\r\n      private _elementRef: ElementRef<HTMLInputElement>, private _viewContainerRef: ViewContainerRef,\r\n      private _renderer: Renderer2, private _injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\r\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live) {\r\n    this.container = config.container;\r\n    this.editable = config.editable;\r\n    this.focusFirst = config.focusFirst;\r\n    this.showHint = config.showHint;\r\n    this.placement = config.placement;\r\n\r\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\r\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\r\n\r\n    this._resubscribeTypeahead = new BehaviorSubject(null);\r\n\r\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\r\n        NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver);\r\n\r\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\r\n      if (this.isPopupOpen()) {\r\n        positionElements(\r\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\r\n            this.container === 'body');\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\r\n      this._inputValueBackup = value;\r\n      if (this.editable) {\r\n        this._onChange(value);\r\n      }\r\n    }));\r\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\r\n    const processedResults$ = results$.pipe(tap(() => {\r\n      if (!this.editable) {\r\n        this._onChange(undefined);\r\n      }\r\n    }));\r\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => processedResults$));\r\n    this._subscription = this._subscribeToUserInput(userInput$);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._closePopup();\r\n    this._unsubscribeFromUserInput();\r\n    this._zoneSubscription.unsubscribe();\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\r\n\r\n  writeValue(value) { this._writeInputValue(this._formatItemForInput(value)); }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  onDocumentClick(event) {\r\n    if (event.target !== this._elementRef.nativeElement) {\r\n      this.dismissPopup();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dismisses typeahead popup window\r\n   */\r\n  dismissPopup() {\r\n    if (this.isPopupOpen()) {\r\n      this._closePopup();\r\n      this._writeInputValue(this._inputValueBackup);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns true if the typeahead popup window is displayed\r\n   */\r\n  isPopupOpen() { return this._windowRef != null; }\r\n\r\n  handleBlur() {\r\n    this._resubscribeTypeahead.next(null);\r\n    this._onTouched();\r\n  }\r\n\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    if (!this.isPopupOpen()) {\r\n      return;\r\n    }\r\n\r\n    if (Key[toString(event.which)]) {\r\n      switch (event.which) {\r\n        case Key.ArrowDown:\r\n          event.preventDefault();\r\n          this._windowRef.instance.next();\r\n          this._showHint();\r\n          break;\r\n        case Key.ArrowUp:\r\n          event.preventDefault();\r\n          this._windowRef.instance.prev();\r\n          this._showHint();\r\n          break;\r\n        case Key.Enter:\r\n        case Key.Tab:\r\n          const result = this._windowRef.instance.getActive();\r\n          if (isDefined(result)) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this._selectResult(result);\r\n          }\r\n          this._closePopup();\r\n          break;\r\n        case Key.Escape:\r\n          event.preventDefault();\r\n          this._resubscribeTypeahead.next(null);\r\n          this.dismissPopup();\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private _openPopup() {\r\n    if (!this.isPopupOpen()) {\r\n      this._inputValueBackup = this._elementRef.nativeElement.value;\r\n      this._windowRef = this._popupService.open();\r\n      this._windowRef.instance.id = this.popupId;\r\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\r\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\r\n\r\n      if (this.container === 'body') {\r\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _closePopup() {\r\n    this._popupService.close();\r\n    this._windowRef = null;\r\n    this.activeDescendant = undefined;\r\n  }\r\n\r\n  private _selectResult(result: any) {\r\n    let defaultPrevented = false;\r\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\r\n    this._resubscribeTypeahead.next(null);\r\n\r\n    if (!defaultPrevented) {\r\n      this.writeValue(result);\r\n      this._onChange(result);\r\n    }\r\n  }\r\n\r\n  private _selectResultClosePopup(result: any) {\r\n    this._selectResult(result);\r\n    this._closePopup();\r\n  }\r\n\r\n  private _showHint() {\r\n    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\r\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\r\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\r\n\r\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\r\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\r\n        this._elementRef.nativeElement['setSelectionRange'].apply(\r\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\r\n      } else {\r\n        this.writeValue(this._windowRef.instance.getActive());\r\n      }\r\n    }\r\n  }\r\n\r\n  private _formatItemForInput(item: any): string {\r\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\r\n  }\r\n\r\n  private _writeInputValue(value: string): void {\r\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\r\n  }\r\n\r\n  private _subscribeToUserInput(userInput$: Observable<any[]>): Subscription {\r\n    return userInput$.subscribe((results) => {\r\n      if (!results || results.length === 0) {\r\n        this._closePopup();\r\n      } else {\r\n        this._openPopup();\r\n        this._windowRef.instance.focusFirst = this.focusFirst;\r\n        this._windowRef.instance.results = results;\r\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\r\n        if (this.resultFormatter) {\r\n          this._windowRef.instance.formatter = this.resultFormatter;\r\n        }\r\n        if (this.resultTemplate) {\r\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\r\n        }\r\n        this._windowRef.instance.resetActive();\r\n\r\n        // The observable stream we are subscribing to might have async steps\r\n        // and if a component containing typeahead is using the OnPush strategy\r\n        // the change detection turn wouldn't be invoked automatically.\r\n        this._windowRef.changeDetectorRef.detectChanges();\r\n\r\n        this._showHint();\r\n      }\r\n\r\n      // live announcer\r\n      const count = results ? results.length : 0;\r\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\r\n    });\r\n  }\r\n\r\n  private _unsubscribeFromUserInput() {\r\n    if (this._subscription) {\r\n      this._subscription.unsubscribe();\r\n    }\r\n    this._subscription = null;\r\n  }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbHighlight} from './highlight';\r\nimport {NgbTypeaheadWindow} from './typeahead-window';\r\nimport {NgbTypeahead} from './typeahead';\r\n\r\nexport {NgbHighlight} from './highlight';\r\nexport {NgbTypeaheadWindow} from './typeahead-window';\r\nexport {NgbTypeaheadConfig} from './typeahead-config';\r\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\r\n\r\n@NgModule({\r\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\r\n  exports: [NgbTypeahead, NgbHighlight],\r\n  imports: [CommonModule],\r\n  entryComponents: [NgbTypeaheadWindow]\r\n})\r\nexport class NgbTypeaheadModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTypeaheadModule}; }\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\n\r\nimport {NgbAccordionModule, NgbPanelChangeEvent} from './accordion/accordion.module';\r\nimport {NgbAlertModule} from './alert/alert.module';\r\nimport {NgbButtonsModule} from './buttons/buttons.module';\r\nimport {NgbCarouselModule} from './carousel/carousel.module';\r\nimport {NgbCollapseModule} from './collapse/collapse.module';\r\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\r\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\r\nimport {\r\n  NgbModalModule,\r\n  NgbModal,\r\n  NgbModalConfig,\r\n  NgbModalOptions,\r\n  NgbModalRef,\r\n  ModalDismissReasons\r\n} from './modal/modal.module';\r\nimport {NgbPaginationModule} from './pagination/pagination.module';\r\nimport {NgbPopoverModule} from './popover/popover.module';\r\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\r\nimport {NgbRatingModule} from './rating/rating.module';\r\nimport {NgbTabsetModule, NgbTabChangeEvent} from './tabset/tabset.module';\r\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\r\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\r\nimport {NgbTypeaheadModule, NgbTypeaheadSelectItemEvent} from './typeahead/typeahead.module';\r\n\r\nexport {\r\n  NgbAccordionModule,\r\n  NgbPanelChangeEvent,\r\n  NgbAccordionConfig,\r\n  NgbAccordion,\r\n  NgbPanel,\r\n  NgbPanelTitle,\r\n  NgbPanelContent\r\n} from './accordion/accordion.module';\r\nexport {NgbAlertModule, NgbAlertConfig, NgbAlert} from './alert/alert.module';\r\nexport {NgbButtonsModule, NgbCheckBox, NgbRadioGroup} from './buttons/buttons.module';\r\nexport {NgbCarouselModule, NgbCarouselConfig, NgbCarousel, NgbSlide} from './carousel/carousel.module';\r\nexport {NgbCollapseModule, NgbCollapse} from './collapse/collapse.module';\r\nexport {\r\n  NgbCalendar,\r\n  NgbPeriod,\r\n  NgbCalendarIslamicCivil,\r\n  NgbCalendarIslamicUmalqura,\r\n  NgbCalendarHebrew,\r\n  NgbCalendarPersian,\r\n  NgbDatepickerModule,\r\n  NgbDatepickerI18n,\r\n  NgbDatepickerI18nHebrew,\r\n  NgbDatepickerConfig,\r\n  NgbDateStruct,\r\n  NgbDate,\r\n  NgbDateParserFormatter,\r\n  NgbDateAdapter,\r\n  NgbDateNativeAdapter,\r\n  NgbDateNativeUTCAdapter,\r\n  NgbDatepicker,\r\n  NgbInputDatepicker\r\n} from './datepicker/datepicker.module';\r\nexport {NgbDropdownModule, NgbDropdownConfig, NgbDropdown} from './dropdown/dropdown.module';\r\nexport {\r\n  NgbModalModule,\r\n  NgbModal,\r\n  NgbModalConfig,\r\n  NgbModalOptions,\r\n  NgbActiveModal,\r\n  NgbModalRef,\r\n  ModalDismissReasons\r\n} from './modal/modal.module';\r\nexport {NgbPaginationModule, NgbPaginationConfig, NgbPagination} from './pagination/pagination.module';\r\nexport {NgbPopoverModule, NgbPopoverConfig, NgbPopover} from './popover/popover.module';\r\nexport {NgbProgressbarModule, NgbProgressbarConfig, NgbProgressbar} from './progressbar/progressbar.module';\r\nexport {NgbRatingModule, NgbRatingConfig, NgbRating} from './rating/rating.module';\r\nexport {\r\n  NgbTabsetModule,\r\n  NgbTabChangeEvent,\r\n  NgbTabsetConfig,\r\n  NgbTabset,\r\n  NgbTab,\r\n  NgbTabContent,\r\n  NgbTabTitle\r\n} from './tabset/tabset.module';\r\nexport {\r\n  NgbTimepickerModule,\r\n  NgbTimepickerConfig,\r\n  NgbTimeStruct,\r\n  NgbTimepicker,\r\n  NgbTimeAdapter\r\n} from './timepicker/timepicker.module';\r\nexport {NgbTooltipModule, NgbTooltipConfig, NgbTooltip} from './tooltip/tooltip.module';\r\nexport {\r\n  NgbHighlight,\r\n  NgbTypeaheadModule,\r\n  NgbTypeaheadConfig,\r\n  NgbTypeaheadSelectItemEvent,\r\n  NgbTypeahead\r\n} from './typeahead/typeahead.module';\r\n\r\nexport {Placement} from './util/positioning';\r\n\r\nconst NGB_MODULES = [\r\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\r\n  NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule,\r\n  NgbTabsetModule, NgbTimepickerModule, NgbTooltipModule, NgbTypeaheadModule\r\n];\r\n\r\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\r\nexport class NgbModule {\r\n  /**\r\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\r\n   * Will be removed in 4.0.0.\r\n   *\r\n   * @deprecated 3.0.0\r\n   */\r\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbModule}; }\r\n}\r\n"]}